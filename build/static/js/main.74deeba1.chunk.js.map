{"version":3,"sources":["db_data.js","components/Data/inicioSesionData.js","components/Data/LocalData.js","components/Pages/login.js","components/Pages/logout.js","components/Pages/404.js","components/Data/UsuarioData.js","components/Data/VentaData.js","components/Vista/Grafico/Grafico.js","components/Data/RegistroData.js","components/Data/RolUsuarioData.js","components/Pages/Footer.js","components/Pages/menu.js","components/Pages/profile.js","components/Export/excel/tipoDocumento.js","components/Data/tiposData.js","components/Vista/Tipos/tipoDocumento.js","components/Export/excel/tipoLocal.js","components/Vista/Tipos/tipoLocal.js","components/Export/excel/tipoMedia.js","components/Vista/Tipos/tipoMedia.js","components/Export/excel/tipoPrecio.js","components/Vista/Tipos/tipoPrecio.js","components/Export/excel/tipoProducto.js","components/Vista/Tipos/tipoProducto.js","components/Export/excel/tipoTraslado.js","components/Vista/Tipos/tipoTraslado.js","components/Export/excel/media.js","components/Data/MediaData.js","components/Vista/Media/Media.js","components/Export/excel/producto.js","components/Data/productoData.js","components/Data/PresentacionData.js","components/Vista/Producto/ProductoCard.js","components/Pages/Pagination.js","components/Vista/Producto/Producto.js","components/Data/VentaDetalleData.js","components/Data/Cliente.js","components/Vista/Cliente/ClienteForm.js","components/Vista/Venta/Venta.js","components/Vista/Venta/VentaLista.js","components/Export/excel/Local.js","components/Data/SucursalData.js","components/Vista/Producto/ProductoLista.js","components/Vista/Local/Local.js","components/Export/excel/Sucursal.js","components/Vista/Sucursal/Sucursal.js","components/Export/excel/Usuario.js","components/Data/TrabajadorData.js","components/Vista/Usuario/UsuarioConexiones.js","components/Vista/Usuario/Usuario.js","components/Data/TrasladoData.js","components/Data/TrasladoDetalleData.js","components/Vista/Envio/Envio.js","components/Vista/Ingreso/Ingreso.js","components/Export/excel/ReporteTraslado.js","components/Export/excel/ReporteVenta.js","components/Vista/Reporte/Reporte.js","App.js","index.js"],"names":["BaseUrl","data","get_Local_Lista","urlFetch","console","log","Promise","resolve","reject","fetch","then","response","json","responseJson","catch","error","get_Local_Tipo_Lista","nombreTipoLocal","codigoLocal","get_Local","login","props","onChangeLocal","state","nombreUsuario","contraUsuario","idUsuario","locales","formValidado","classInputNombre","classInputContra","classSelectLocal","message","text","alert","bind","onChange","this","length","usuarioData","method","body","JSON","stringify","headers","Headers","post_Sesion_Login","result","codEstado","setState","localStorage","setItem","codigoUsuario","token","msgAlert","msgText","e","target","id","value","getItem","to","pathname","className","Alert","color","src","alt","map","local","key","nombreLocal","type","name","placeholder","maxLength","onClick","Component","logout","redirect","salir","put_Sesion_Cerrar","_","removeItem","Error404","get_Usuario","usuario","usuarioJson","get_Usuario_Trabajador","res","Grafico","obtenerSumaMensual","meses","mesAnalizado","forEach","mes","nombreMes","get_Suma_Venta_Mensual","totalVendidoMensual","concat","totalMes","mostrarGrafico","listarTotalVentaMensual","cambioVistaGrafico","options","plotOptions","bar","horizontal","series","chart","background","foreColor","xaxis","categories","fill","colors","dataLabels","enable","title","align","margin","offsetY","style","fontSize","width","height","get_Rol_Usuario","Footer","textoFooter","nombreFooter","href","Dashboard","ObtenerRolesUsuario","nombreRol","rolSuper","rolAdmi","rolTienda","rolAlmace","rolUsuario","conectado","codigoUsuarioC","codigoLocalC","obtenerTienda","Menus","children","ITEM_HEIGHT","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","toolbarButtons","marginRight","menuButton","toolbar","mixins","drawerPaper","content","flexGrow","padding","spacing","imagenPerfil","container","classes","React","useState","mobileOpen","setMobileOpen","anchorEl","setAnchorEl","openMenuItemTipos","setOpenMenuItemTipos","openMenuItemProducto","setOpenMenuItemProducto","openMenuItemIngreso","setOpenMenuItemIngreso","openMenuItemEnvio","setOpenMenuItemEnvio","openMenuItemGrafico","setOpenMenuItemGrafico","open","Boolean","handleDrawerToggle","itemsMenuSuperior","nombre","icono","url","EliminarRegistrosVacios","del_Registro_Vacio","MenuLateral","Hidden","MenuList","MenuItem","button","component","Link","ListItemText","primary","hidden","Collapse","in","timeout","unmountOnExit","List","disablePadding","ListItem","ListItemIcon","MenuSuperior","Toolbar","IconButton","aria-label","edge","Typography","nombreTrabajador","urlMediaTrabajador","altMediaTrabajador","aria-controls","aria-haspopup","event","currentTarget","keepMounted","onClose","PaperProps","maxHeight","item","index","Fragment","CssBaseline","AppBar","position","smUp","implementation","Drawer","variant","paper","ModalProps","xsDown","profile","buttonCard","textDecoration","ExportExcel","tpDocumento","tpDoc","codigoTipoDocumento","nombreTipoDocumento","cantidadCaracteres","get_Tipo_Documento_Lista","get_Tipo_Documento","codigoTPDocumento","get_Tipo_Local_Lista","get_Tipo_Local","codigoTPLocal","get_Tipo_Precio","codigoTipoPrecio","get_Tipo_Media","codigoTPMedia","get_Tipo_Media_Nombre","nombreTPMedia","get_Tipo_Producto_Lista","get_Tipo_Producto","codigoTPProducto","get_Tipo_Traslado","codigoTPTraslado","tipoDocumentoLista","toogleModalConfirmar","modalConfirmarOpen","mostrarModal","codigoTPEliminar","borrarConfirmado","eliminarTipoDocumento","mostrarAlerta","tiempo","setTimeout","onFilteredChangeCustom","accessor","filtered","insertNewFilter","filter","i","splice","push","guardarVerificacion","guardarTipoDocumento","tipoDocumento","tipoAccion","post_Tipo_Documento","toogleModal","put_Tipo_Documento","cambiarAlerta","setValues","field","tipoDocumentoExcel","messageActivo","modalOpen","tituloModal","tipoEliminar","codigotipoDocumento","del_Tipo_Documento","listarTipoDocumento","columns","Header","textAlign","show","sortable","filterable","Cell","original","verificarAccion","cursor","table","filename","sheet","buttonText","noDataText","onFilteredChange","column","defaultFilterMethod","row","pivotId","undefined","indexOf","String","defaultPageSize","showPaginationTop","showPaginationBottom","filtredData","instance","reactTable","pageRows","_original","Modal","isOpen","centered","size","ModalHeader","toggle","ModalBody","for","tpLocal","tpLoc","codigoTipoLocal","tipoLocalLista","guardarTipoLocal","tipoLocal","post_Tipo_Local","put_Tipo_Local","tipoLocalExcel","codigotipoLocal","del_Tipo_Local","listarTipoLocal","eliminarTipoLocal","tpMedia","tpMed","codigoTipoMedia","nombreTipoMedia","descripcionTipoMedia","tipoMediaLista","guardarTipoMedia","tipoMedia","post_Tipo_Media","put_Tipo_Media","tipoMediaExcel","get_Tipo_Media_Lista","codigotipoMedia","del_Tipo_Media","listarTipoMedia","eliminarTipoMedia","tpPrecio","tpPre","nombreTipoPrecio","descripcionTipoPrecio","tipoPrecioLista","guardarTipoPrecio","tipoPrecio","post_Tipo_Precio","put_Tipo_Precio","tipoPrecioExcel","get_Tipo_Precio_Lista","del_Tipo_Precio","listarTipoPrecio","eliminarTipoPrecio","tpProducto","tpPro","codigoTipoProducto","nombreTipoProducto","descripcionTipoProducto","tipoProductoLista","eliminarTipoProducto","guardarTipoProducto","tipoProducto","post_Tipo_Producto","put_Tipo_Producto","tipoProductoExcel","codigotipoProducto","del_Tipo_Producto","listarTipoProducto","tpTraslado","tpTra","codigoTipoTraslado","nombreTipoTraslado","tipoTrasladoLista","guardarTipoTraslado","tipoTraslado","post_Tipo_Traslado","put_Tipo_Traslado","tipoTrasladoExcel","get_Tipo_Traslado_Lista","codigotipoTraslado","del_Tipo_Traslado","listarTipoTraslado","eliminarTipoTraslado","medias","med","codigoMedia","nombreMedia","urlMedia","get_Media_Lista","get_Media","post_Media","media","post_Media_File","fileMedia","fd","FormData","append","Media","codigoMediaEliminar","eliminarMedia","buscarTipoMediaNombre","nombreBusqueda","mediaGuardarTmp","parse","mediaGuardar","guadarFile","file","crearMediaObjecto","replace","altMedia","guardarMedia","put_Media","setFileMedia","files","nombreFile","mediasExcel","del_Media_File","del_Media","listarMedia","minWidth","maxWidth","toLowerCase","class","lang","data-browse","productos","pro","codigoProducto","descripcionProducto","descripcionPresentacion","stockExistente","stockMinimo","estadoProducto","fechaVencimiento","get_Producto_Venta","get_Producto_Local_Venta_Lista","ProductoCard","cargando","producto","detalleProducto","substring","numeroRender","Paginacion","totalElementos","elementosPage","cambiarPagina","paginaActual","cantidadItems","pageNumbers","itemsPage","classItem","mostrarUnaVes","cantidadPages","Math","trunc","paginaActualPage","cantidadRender","dibujarPaginacion","aria-hidden","numero","estadoInicial","codigoPresentacion","valorPrecio","sugerenciasProducto","tipoProductos","presentaciones","modalFormMediaOpen","modalListaMediaOpen","fileTemporal","tipoAdmi","codigoProductoEliminar","nombreProductoBuscar","currentPage","productosPage","cantidadProductos","heightWindows","Producto","pagina","listarProducto","eliminarProducto","setProducto","setMedia","URL","createObjectURL","guardarProducto","inputBusqueda","document","getElementById","localBusqueda","textoBusqueda","Busqueda","inicio","resultados","post_Producto_Local_Inventario_Paginado","post_Cantidad_Productos","cantidad","guardarProductoPrueba","ingresoMedia","post_Producto","put_Producto","get_Producto","obtenerFechaHoy","productoNuevo","resetEstado","get_Presentacion_Lista","del_Producto","fechaHoy","Date","a√±oDate","getFullYear","mesDate","getMonth","diaDate","getDate","listarPresentacionProducto","listarLocales","pre","value1","parseFloat","toFixed","loc","data-date-format","get_Venta_Detalle_Codigo_Venta_Vista","codigoVenta","del_Venta_Detalle_CodigoVD","codigoVD","cliente","tiposDocumentos","tpDocu","setCliente","registrarCliente","productosBusqueda","tipoBuscadorProducto","venta","codigoCliente","valorTotalVenta","valorModificado","valorDescuento","ventaDetalles","detalle","codigoPrecio","cantidadProducto","valorTotalVD","detallesVentas","detalles","sugerenciasCliente","clientes","numeroDocumento","telefonoCliente","correoCliente","direccionCliente","nombreCliente","enRepresentacion","razonSocial","confirmarCrearVenta","confirmarEliminar","modalClienteOpen","creacionCliente","codigoVDTemporal","montoRecibido","mensajeAlerta","textoMensaje","tipoBotonConfirmar","textoBotonConfirmar","mostrarConfirmar","tipoBotonCancelar","textoBotonCancelar","mostrarCancelar","setMontoRecibido","ClienteData","listarClientes","toogleModalCliente","limpiarCliente","onChangeTipoBuscadorProducto","onChangeBuscadorProducto","textoBuscar","regex","RegExp","sort","test","onChangeBuscadorCliente","setValorTotalVenta","borrarDetalleVenta","listarDetallesVentasVista","buscarIndexDetalles","buscarIndexProductos","borrarDetalleVentaTemporal","Object","assign","borrarProductoDeSugeriancia","botonConfirmado","anularVenta","confirmarGuardarVenta","verificarEliminar","crearDetalleVenta","Detalle","VentaDetalle","put_Venta_Detalle_Temporal","agregarProductos","crearDetalleVentaTemporal","post_Venta_Detalle_Temporal","detalleVenta","editarDetalleVentaTemporal","detalleEditar","verificarProductoAgregar","existe","det","llenarListas","listarProductosPrecioLocal","listarTiposDocumentos","window","removeEventListener","returnValue","Venta","put_Venta","guardarVenta","eliminarVenta","del_Venta","del_Venta_Detalle_Codigo_Venta","addEventListener","crearVentaVacio","Cliente","clienteSeleccion","seleccionarProducto","seleccionarCliente","get_Venta_Vacio","codigoVentaGenerado","Clientes","ClientesJson","min","max","readOnly","DeleteForeverOutlined","autoComplete","mostrarSugerenciasProductoLista","DoneOutlineRounded","RemoveShoppingCartOutlined","htmlFor","mostrarSugerenciasClienteLista","PersonAddRounded","Divider","ClienteForm","ventasRealizadas","detallesVenta","modalDetalleOpen","VentaLista","toogleModalDetalle","mostrarDetalleVenta","listarDetallesVenta","listarVentasRealizadas","get_Venta_Local","fecha","fechaRegistro","getHours","getMinutes","columnsDetalleVenta","nombreSucursal","direccionLocal","numeroTelefono","horarioAtencion","ipLocal","macLocal","get_Sucursal_Lista","get_Sucursal","codigoSucursal","ProductoLista","LocalLista","codigoLocalEliminar","eliminiarLocal","del_Local","listarLocal","guardarLocal","post_Local","toogleModalForm","put_Local","localExcel","sucursales","tiposLocales","modalListaProductosOpen","modalFormOpen","setLocal","toogleModalListaProducto","codigoLocalSeleccionado","listarSucursal","sucursal","suc","SucursalLista","guardarSucursal","post_Sucursal","put_Sucursal","SucursalExcel","del_Sucursal","eliminarSucursal","usuarios","usu","codigoTrabajador","ultimoIngreso","UsuarioConexiones","conexionesUsuario","get_Usuario_Conexiones","listarConexiones","conexionUsuario","estadoSesion","usuarioIncial","estadoUsuario","trabajadorInical","apePaTrabajador","apeMaTrabajador","numDocuTrabajador","numTeleTrabajador","correoTrabajador","direccionTrabajador","especialidadTrabajador","estadoTrabajador","fechaNacimiento","UsuarioLista","mostrarFormTrabajador","codigoMediaTrabajador","guardarUsuario","guardarUsuario2","trabajador","Trabajador","post_Trabajador","codigoTrabajadorRegistrado","post_Usuario","toogleModalUsuario","put_Trabajador","setUsuario","setTrabajador","codigoUsuarioConexion","trabajadores","UsuarioExcel","modalUsuarioOpen","modalConexionesOpen","usuariosJson","listarUsuario","listarTrabajador","usuarioTrabajador","del_Usuario","del_Trabajador","resUsu","get_Trabajador","resTra","toogleModalConexiones","eliminarUsuario","verificarAccionConexiones","Usuario","productosVenta","detallesEnvio","nombreTiendaDestino","codigoTraslado","traslado","origenTraslado","destinoTraslado","valorTotal","observacionOrigen","observacionDestino","codigoUsuarioConfirmacion","confirmacion","fechaConfirmacion","codigoTDTemporal","valorTotalEnvio","confirmarCrearTraslado","totalProducto","Envio","crearMensajeAlerta","mensajeAlertaParam","borrarDetalleTrasladoTemporal","anularTraslado","confirmarGuardarEnvio","setTraslado","selectedIndex","setValorTotalEnvio","valorTotalTD","crearDetalleTraslado","put_Traslado_Detalle_Temporal","crearDetalleTrasladoTemporal","detalleTraslado","post_Traslado_Detalle_Temporal","codigoTD","editarDetalleTrasladoTemporal","totalPro","parseInt","del_Traslado_Detalle_CodigoTD","guardarDetalleTraslado","post_Traslado_Detalle","put_Traslado","guardarEnvio","confirmarGuardar","eliminarEnvio","del_Traslado","del_Traslado_Detalle_Envio","confirmarCrearEnvio","obtenerLocal","crearTrasladoVacio","codigosCreacion","post_Traslado_Vacio","codigoTrasladoGenerado","listarProductosVenta","fro","Ingresos","confirmarIngreso","trasladoPut","ingresarProducto","put_Traslado_Confirmar","setIngreso","productoIngreso","post_Producto_Ingreso","listarTrasladosLocalEnvios","get_Traslado_Local_Envio","trasladosPendientes","listarTrasladosLocalIngresos","get_Traslado_Local_Ingreso","listarTrasladosLocalPendientes","get_Traslado_Pendiente_Local","listarProductosIngresantes","get_Producto_Traslado","trasladosDetallesPendientes","cantidadDetalles","tipoVista","acciones","titulo","get_Traslado_Local","get_Traslado_Detalle_Codigo_Traslado_Vista","columnsDetalles","columnsTraslados","nombreLocalOrigen","nombreLocalDestino","classCard","nombreCard","Intl","DateTimeFormat","year","month","day","hour","minute","format","listarTrasladosDetallesPendientes","traslados","tra","nombreTrabajadorRegistro","nombreTrabajadorConfirmacion","ventas","ven","fechaInicio","fechaFin","ventasReporte","trasladosReporte","valorTotalVendido","valorTotalEnviado","modalVentaOpen","modalTrasladoOpen","Reporte","toogleModalVenta","toogleModalTraslado","setFecha","generarReporteVenta","fechas","get_Venta_Reporte","totalVendido","vr","generarReporteTraslado","tipoReporteTraslado","get_Traslado_Reporte","totalEnviado","get_Traslado_Reporte_Pendiente","listarDetallesVentaVista","columnsTraslado","App","exact","path","Profile","Login","Logout","Productos","Medias","ListaVentas","Ventas","Sucursales","Usuarios","Reportes","createMuiTheme","palette","light","teal","main","dark","secondary","green","default","responsiveFontSizes","ReactDOM","render","MuiThemeProvider"],"mappings":"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","file":"static/js/main.74deeba1.chunk.js","sourcesContent":["//export default \"http://18.191.29.185:4000\"; // IP Y PUERTO DEL SERVIDOR EXPRESS\n//export default \"http://192.168.0.170:5000\"; // IP Y PUERTO DEL SERVIDOR EXPRESS\n//export default \"diegodavidt5.sg-host.com:5000\"; // IP Y PUERTO DEL SERVIDOR EXPRESS\nexport default \"diegodavidt5.sg-host.com\"; // IP Y PUERTO DEL SERVIDOR EXPRESS\n","// AUTH: JORGE M\r\n// INICIO SESION API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/sesiones/';\r\n\r\n// CREAR SESION EN EL SISTEMA\r\nexport function post_Sesion_Login(usuarioData){ \r\n    const urlFetch = BaseUrl + 'login';\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(usuarioData),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//CERRAR SESION DE USUARIO EN SISTEMA\r\nexport function put_Sesion_Cerrar(codigoUsuario){\r\n    const urlFetch = BaseUrl + \"logout\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(codigoUsuario),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n","// AUTH: JORGE M\r\n// LOCAL API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/locales/';\r\n\r\n// LISTAR LOCALES\r\nexport function get_Local_Lista(){ \r\n    const urlFetch = BaseUrl;\r\n    console.log(urlFetch);\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n \r\n// LISTAR LOCALES POR TIPO\r\nexport function get_Local_Tipo_Lista(nombreTipoLocal, codigoLocal){ \r\n    const urlFetch = BaseUrl + \"tipo/\" + (nombreTipoLocal + \"_\" + codigoLocal);\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// LISTAR LOCALES POR CODIGO\r\nexport function get_Local(codigoLocal){ \r\n    const urlFetch = BaseUrl + codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//ELIMINAR LOCAL CODIGO\r\nexport function del_Local(codigoLocal){ \r\n    const urlFetch = BaseUrl + codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR LOCAL\r\nexport function post_Local(local){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(local),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR LOCAL\r\nexport function put_Local(local){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(local),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n","import React, { Component } from 'react';\nimport { post_Sesion_Login } from '../Data/inicioSesionData.js'\nimport { get_Local_Lista } from '../Data/LocalData.js';\nimport { Redirect } from 'react-router-dom';\nimport { Alert } from 'reactstrap';\n\nexport class login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            nombreUsuario : \"\",\n            contraUsuario : \"\",\n            codigoLocal : \"\",\n            idUsuario : \"\",\n            locales : [],\n            formValidado : false ,\n            classInputNombre:\"\",\n            classInputContra:\"\",\n            classSelectLocal:\"\",\n            message : {\n                text:'',\n                alert: ''\n            }\n        }\n        this.login = this.login.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChangeLocal = () => {\n        \n    }\n\n    login(){\n        if(this.state.codigoLocal.length > 0){\n            if(this.state.nombreUsuario.length > 0){\n                if(this.state.contraUsuario.length > 0){\n                    post_Sesion_Login(this.state).then((result)=>{\n                        switch(result.codEstado){\n                            case \"402\" :\n                                this.setState({ \n                                    message : { text:\"ERROR EN CREAR SESION\", alert:\"danger\"}\n                                });\n                            break;\n                            case \"701\" :\n                                this.setState({ \n                                    message : { text:\"USUARIO NO EXISTE\", alert:\"danger\"}\n                                });\n                            break;\n                            case \"702\" :\n                                this.setState({ \n                                    message : { text:\"CONTRASE√ëA INCORRECTA\", alert:\"danger\"}\n                                });\n                            break;\n                            case \"703\" :\n                                this.setState({ \n                                    message : { text:\"USUARIO CONECTADO\", alert:\"danger\"}\n                                });\n                            break;\n                            case \"800\":\n                                localStorage.setItem('codigoUsuario', result.codigoUsuario);\n                                localStorage.setItem('tokenUsuario', result.token);\n                                localStorage.setItem('codigoLocal',this.state.codigoLocal);\n                                this.setState({ \n                                    message : { text:\"SESION CORRECTA\", alert:\"success\"}\n                                });\n                            break;\n                            default:\n                                this.setState({ \n                                    message : { text:\"SIN CODIGO DE ESTADO\", alert:\"danger\"}\n                                });\n                            break;\n                        }\n                    });\n                } else{ this.msgAlert=\"danger\"; this.msgText=\"INGRESE CONTRASE√ëA\"; }\n            } else{ this.msgAlert=\"danger\"; this.msgText=\"INGRESE USUARIO\"; }\n        } else{ this.msgAlert=\"danger\"; this.msgText=\"SELECCIONE LOCAL\"; }\n        this.setState({ \n            message : { text : this.msgText, alert : this.msgAlert}\n        });\n    }\n    onChange(e){\n        this.setState({ [e.target.id] : e.target.value });\n    }\n\n    componentDidMount(){\n        get_Local_Lista(this.state).then((result)=>{\n            this.setState({locales: result});\n        });   \n    }\n    render() {\n        const codigoUsuario  = localStorage.getItem('codigoUsuario');\n        if(codigoUsuario !== \"\" && codigoUsuario !== null){\n            return (<Redirect to={{ pathname : '/app' }}/>)\n        }\n        return (\n            <div className=\"container p-4\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 mx-auto\">\n                        <div className=\"card text-center\">\n                            <div className=\"card-header\">\n                                <h3>SIGNIN</h3>\n                            </div>\n                            <div className=\"container py-2\">\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>\n                                { this.state.message.text} </Alert> ): '' }\n                            </div>\n                            <div className=\"card-body\">\n                                <img src=\"/img/Logo-World-Connect.png\" alt=\"Logo WCS\" className=\"card-img-top mx-auto m-2 rounded-circle w-50\"/>\n                                <div>\n                                    <div className=\"form-group\">\n                                        <select className={\"form-control custom-select \" + this.state.classSelectLocal} id=\"codigoLocal\" onChange={this.onChange}>\n                                            <option value = \"\">Seleccione un local</option>\n                                            {this.state.locales.map((local) => \n                                            ( <option value={local.codigoLocal} key={local.id}>{local.nombreLocal}</option>))}\n                                        </select>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className={\"form-control \" + this.state.classInputNombre} name=\"nombreUsuario\" id=\"nombreUsuario\" placeholder=\"Usuario\" maxLength=\"50\" onChange={this.onChange}/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"password\" className={\"form-control \" + this.state.classInputContra} name=\"contraUsuario\" id=\"contraUsuario\" placeholder=\"Password\" maxLength=\"250\" onChange={this.onChange}/>        \n                                    </div>\n                                    <div className=\"form-group\">\n                                        <button className=\"btn btn-success btn-block\" onClick={this.login}> \n                                            LOGIN\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default login;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { put_Sesion_Cerrar } from '../Data/inicioSesionData';\n\nexport class logout extends Component {\n    constructor(){\n        super();\n        this.state = {\n            redirect : false\n        }\n        this.salir = this.salir.bind(this)\n    }\n\n    salir() {\n        const codigoUsuario = localStorage.getItem(\"codigoUsuario\");\n        put_Sesion_Cerrar( { codigoUsuario }).then(_=>{\n            localStorage.removeItem('idUsuario');\n            localStorage.removeItem('tokenUsuario');\n            localStorage.removeItem('codigoUsuario');\n            localStorage.removeItem('codigoLocal');\n            this.setState({redirect:true});\n        });\n    }\n\n    render() {\n        const codigoUsuario  = localStorage.getItem('codigoUsuario');\n        if(codigoUsuario !== null && codigoUsuario !== \"\" && this.state.redirect === false){\n            return (\n                <div className=\"container p-4\">\n                    <div className=\"row\">\n                        <div className=\"col-md-4 mx-auto\">\n                            <div className=\"card text-center\">\n                                <div className=\"card-header\">\n                                    <h3>LOGOUT</h3>\n                                </div>\n                                <div className=\"card-body\">\n                                    <img src=\"/img/Logo-World-Connect.png\" alt=\"Logo WCS\" className=\"card-img-top mx-auto m-2 rounded-circle w-50\"/>\n                                    <div>\n                                        <div className=\"form-group\">\n                                            <button className=\"btn btn-success btn-block\" onClick={this.salir}> \n                                                SALIR\n                                            </button>    \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }else{\n            return <Redirect to = '/app/login'/>;\n        }\n    }\n}\n\nexport default logout\n","import React, { Component } from 'react'\nexport class Error404 extends Component {\n    render() {\n        return (\n            <div>\n                <h1>ERROR 404</h1>           \n            </div>\n        )\n    }\n}\n\nexport default Error404;","// AUTH: JORGE M\n// GET USUARIO API FROM SERVER NODE EXPRESS\n\nimport data from '../../db_data';\nconst BaseUrl = data + '/api/usuarios/';\n\n// MOSTRAR USUARIO CODIGO\nexport function get_Usuario(codigoUsuario){\n    return new Promise((resolve,reject)=>{\n        fetch(BaseUrl + codigoUsuario)\n        .then((usuario) => usuario.json())\n        .then((usuarioJson) => {\n            resolve(usuarioJson);\n        })\n        .catch((error)=>{\n            reject(error);\n        });\n    });\n}\n\n// MOSTRAR USUARIOS\nexport function get_Usuario_Lista(){\n    return new Promise((resolve,reject)=>{\n        fetch(BaseUrl)\n        .then((usuarios) => usuarios.json())\n        .then((usuariosJson) => {\n            resolve(usuariosJson);\n        })\n        .catch((error)=>{\n            reject(error);\n        });\n    });\n}\n\n//ELIMINAR USUARIO CODIGO\n\nexport function del_Usuario(codigoUsuario){\n    return new Promise((resolve,reject)=>{\n        fetch(BaseUrl + codigoUsuario,{\n            method:'DELETE',\n            headers: new Headers({\n                'Content-type':'application/json'\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolve(responseJson);\n        })\n        .catch((error)=>{\n            reject(error);\n        });\n    });\n}\n\n// AGREGAR USUARIO\nexport function post_Usuario(usuario){\n    return new Promise((resolve,reject)=>{\n        fetch(BaseUrl,{\n            method:'POST',\n            body: JSON.stringify(usuario),\n            headers: new Headers({\n                'Content-type':'application/json'\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolve(responseJson);\n        })\n        .catch((error)=>{\n            reject(error);\n        });\n    });\n}\n//MODIFICAR USUARIO\nexport function put_Usuario(usuarioData){ \n    return new Promise((resolve,reject)=>{\n        fetch(BaseUrl,{\n            method:'PUT',\n            body: JSON.stringify(usuarioData),\n            headers: new Headers({\n                'Content-type':'application/json'\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolve(responseJson);\n        })\n        .catch((error)=>{\n            reject(error);\n        });\n    });\n}\n\n\n// MOSTRAR CONEXIONES DE USUARIO POR CODIGO\nexport function get_Usuario_Conexiones(codigoUsuario){\n    let urlFetch = BaseUrl + 'conexiones/' + codigoUsuario;\n    return new Promise((resolve,reject)=>{\n        fetch(urlFetch)\n        .then((res) => res.json())\n        .then((usuario) => resolve(usuario))\n        .catch((error)=>{\n            reject(error);\n        });\n    }); \n}\n\n\n// MOSTRAR USUARIO TRABAJADOR POR CODIGO\nexport function get_Usuario_Trabajador(codigoUsuario){\n    let urlFetch = BaseUrl + 'trabajador/' + codigoUsuario;\n    return new Promise((resolve,reject)=>{\n        fetch(urlFetch)\n        .then((res) => res.json())\n        .then((usuario) => resolve(usuario))\n        .catch((error)=>{\n            reject(error);\n        });\n    }); \n}\n\n// MOSTRAR USUARIO TRABAJADOR POR CODIGO\nexport function get_Usuario_Trabajador_Conexion(codigoUsuario){\n    let urlFetch = BaseUrl + 'trabajador/conexion/' + codigoUsuario;\n    return new Promise((resolve,reject)=>{\n        fetch(urlFetch)\n        .then((res) => res.json())\n        .then((usuario) => resolve(usuario))\n        .catch((error)=>{\n            reject(error);\n        });\n    }); \n}\n\n// MOSTRAR USUARIO TRABAJADOR POR CODIGO\nexport function get_Usuario_Trabajador_Conexiones(codigoUsuario){\n    let urlFetch = BaseUrl + 'trabajador/conexiones/' + codigoUsuario;\n    return new Promise((resolve,reject)=>{\n        fetch(urlFetch)\n        .then((res) => res.json())\n        .then((usuario) => resolve(usuario))\n        .catch((error)=>{\n            reject(error);\n        });\n    }); \n}\n\n\n// MOSTRAR USUARIO POR ID\nexport function getUsuarioId(idUsuario){\n    let urlFetch = BaseUrl + '/'+idUsuario;\n    return new Promise((resolve,reject)=>{\n        fetch(urlFetch)\n        .then((res) => res.json())\n        .then((usuario) => resolve(usuario))\n        .catch((error)=>{\n            reject(error);\n        });\n    }); \n}","// AUTH: JORGE M\r\n// VentaDetalle API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/ventas/';\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n\r\n//MOSTRAR VENTAS POR LOCAL\r\nexport function get_Suma_Venta_Mensual(nombreMes){ \r\n    const urlFetch = BaseUrl + \"suma/\" + nombreMes;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//MOSTRAR VENTAS POR LOCAL\r\nexport function get_Venta_Local(codigoLocal){ \r\n    const urlFetch = BaseUrl + \"local/\" + codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MOSTRAR VENTAS PARA REPORTE\r\nexport function get_Venta_Reporte(fechas){ \r\n    const urlFetch = BaseUrl + \"reporte/\" + fechas;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//ELIMINAR DETALLES DE VENTA POR CODIGO DE VENTA\r\nexport function del_Venta(codigoVenta){ \r\n    const urlFetch = BaseUrl + codigoVenta;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//ELIMINAR DETALLES DE VENTA y VENTA VACIA POR CODIGO DE LOCAL\r\nexport function del_Venta_Vacio(codigoLocal){ \r\n    const urlFetch = BaseUrl + \"vacio/\" + codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//CREAR VENTA VACIO\r\nexport function get_Venta_Vacio(codigoUsuario,codigoLocal){ \r\n    const urlFetch = BaseUrl + \"vacio/\" + codigoUsuario + \"_\" + codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//MODIFICAR DETALLE DE VENTA POR CODIGO\r\nexport function put_Venta(Venta){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(Venta),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n","import React, { Component } from 'react'\r\nimport Chart from \"react-apexcharts\";\r\n\r\nimport { get_Suma_Venta_Mensual } from '../../Data/VentaData';\r\n\r\nexport class Grafico extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n\r\n            mostrarGrafico:false,\r\n\r\n            totalVendidoMensual: [],\r\n\r\n            options: {\r\n                chart: {\r\n                    id: \"basic-bar\",\r\n                    background : '#f4f4f4',\r\n                    foreColor : '#333',\r\n                },\r\n                xaxis: {\r\n                    categories:[\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\r\n                            \"Julio\",\"Agosto\",\"Setiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"]\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal : false\r\n                    }\r\n                },\r\n                fill:{\r\n                    colors: ['#f44336']\r\n                },\r\n                dataLabels: {\r\n                    enable: false\r\n                },\r\n                title: {\r\n                    text:'TOTAL VENTAS - PERIODO 2020',\r\n                    align: 'center',\r\n                    margin:20,\r\n                    offsetY: 20,\r\n                    style:{\r\n                        fontSize: '15px'\r\n                    },\r\n                }\r\n            },\r\n            series: [{\r\n                name: \"Total Vendido\",\r\n                //data: [30, 40, 45, 50, 49, 60, 70, 91,110,100,120,111]\r\n                data: [0,0,0,0,0,0,0,0,0,0,0,0]\r\n            }]\r\n        };\r\n    }\r\n\r\n    obtenerSumaMensual = () => {\r\n        const meses = [\"ENERO\",\"FEBRERO\",\"MARZO\",\"ABRIL\",\"MAYO\",\"JUNIO\",\"JULIO\",\"AGOSTO\",\"SETIEMBRE\",\"OCTUBRE\",\"NOVIEMBRE\",\"DICIEMBRE\"];\r\n        var mesAnalizado = 0;\r\n        meses.forEach(mes => {\r\n            get_Suma_Venta_Mensual(mes).then( res => {\r\n                this.setState({\r\n                    totalVendidoMensual : this.state.totalVendidoMensual.concat(res[0].totalMes)\r\n                },() => {\r\n                    mesAnalizado++;\r\n                    if(mesAnalizado === meses.length){\r\n                        this.setState({mostrarGrafico: true},()=>this.listarTotalVentaMensual());\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    cambioVistaGrafico = () => {\r\n        this.setState({\r\n            options : {\r\n                ...this.state.options,\r\n                plotOptions: {\r\n                    ...this.state.options.plotOptions,\r\n                    bar:{\r\n                        ...this.state.options.plotOptions.bar,\r\n                        horizontal: !this.state.options.plotOptions.bar.horizontal\r\n                    }\r\n                }\r\n            }\r\n         });\r\n    }\r\n\r\n    listarTotalVentaMensual = () => {\r\n        const series = [{\r\n            name: \"Total Vendido\",\r\n            data: this.state.totalVendidoMensual\r\n        }];\r\n        this.setState({ series });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.obtenerSumaMensual();\r\n    }\r\n\r\n    render() {\r\n        if(this.state.mostrarGrafico){\r\n            return (\r\n                <div className=\"app\">\r\n                <div className=\"row justify-content-center\">\r\n                  <div className=\"col-md-12 justify-content-center\">\r\n                    <Chart\r\n                      options={this.state.options}\r\n                      series={this.state.series}\r\n                      type=\"bar\"\r\n                      width=\"100%\"\r\n                      height=\"400\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                      <button\r\n                        className=\"form-control btn btn-info\"\r\n                        onClick={this.cambioVistaGrafico}\r\n                      >Vista</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n        } else { return null}\r\n    }\r\n}\r\n\r\nexport default Grafico\r\n","// AUTH: JORGE M\r\n// API REGISTRO FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/registros/';\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n\r\n//ELIMINAR REGISTROS VACIOS POR CODIGO DE LOCAL\r\nexport function del_Registro_Vacio(codigoLocal){ \r\n    const urlFetch = BaseUrl + \"vacio/\" + codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}","// AUTH: JORGE M\n// GET ROL USUARIO API FROM SERVER NODE EXPRESS\n\nimport data from '../../db_data';\nconst BaseUrl = data + '/api/rol/usuario/';\n\n// MOSTRAR USUARIO CODIGO\nexport function get_Rol_Usuario(codigoUsuario){\n    let urlFetch = BaseUrl + codigoUsuario;\n    return new Promise((resolve,reject)=>{\n        fetch(urlFetch)\n        .then((usuario) => usuario.json())\n        .then((usuarioJson) => {\n            resolve(usuarioJson);\n        })\n        .catch((error)=>{\n            reject(error);\n        });\n    });\n}","import React, { Component } from 'react'\r\n\r\nexport class Footer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            textoFooter : props.textoFooter, //Texto como Copyright  Autor Desarrollador\r\n            nombreFooter : props.nombreFooter,//Autor\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className=\"page-footer font-small blue pt-4\">\r\n                    <div className=\"footer-copyright text-center py-3\">\r\n                        ¬© 2020 {this.state.textoFooter} <a href=\"/app\">{this.state.nombreFooter}</a>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    AppBar, CssBaseline , Drawer , Hidden , IconButton , ListItemIcon , ListItemText ,\n    Toolbar , Menu, MenuList , MenuItem , Typography , Collapse , List , ListItem \n} from '@material-ui/core';\n\nimport { get_Usuario_Trabajador } from '../Data/UsuarioData';\nimport { del_Registro_Vacio } from '../Data/RegistroData';\nimport { get_Rol_Usuario } from '../Data/RolUsuarioData';\nimport { get_Local } from '../Data/LocalData';\nimport Footer from './Footer';\n\nclass Dashboard extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      usuario : {},\n      rolUsuario : {},\n      local:{},\n\n      rolSuper : false,\n      rolAdmi : false,\n      rolTienda : false,\n      rolAlmace : false,\n\n      conectado : 0\n    }\n  };\n\n  obtenerTienda(codigoLocal){\n    get_Local(codigoLocal).then( res => {\n        this.setState({ local : res[0] });\n    });\n  }\n\n  ObtenerRolesUsuario = (codigoUsuario) => {\n    get_Rol_Usuario(codigoUsuario).then( res => {\n      switch (res[0].nombreRol) {\n        case \"ROL-SUPERADMIN\":\n            this.setState({\n              rolSuper : !this.state.rolSuper,\n              rolAdmi : !this.state.rolAdmi,\n              rolTienda : !this.state.rolTienda,\n              rolAlmace : !this.state.rolAlmace\n            });\n          break;\n        case \"ROL-ADMIN\":\n            this.setState({\n              rolAdmi : !this.state.rolAdmi,\n              rolTienda : !this.state.rolTienda,\n              rolAlmace : !this.state.rolAlmace\n            });\n          break;\n        case \"ROL-TIENDA\":\n            this.setState({\n              rolTienda : !this.state.rolTienda\n            });\n          break;\n          case \"ROL-ALMACEN\":\n            this.setState({\n              rolAlmace : !this.state.rolAlmace\n            });\n          break;\n        default:\n          break;\n      }\n      this.setState({ rolUsuario : res[0] });\n    });\n  }\n\n  componentDidMount(){\n    var codigoUsuarioC = \"\";\n    var codigoLocalC = \"\";\n    try { \n      codigoUsuarioC = localStorage.getItem('codigoUsuario');\n      codigoLocalC = localStorage.getItem('codigoLocal');\n      if(codigoUsuarioC !== \"\" && codigoUsuarioC !== null){\n        if(codigoLocalC !== \"\" && codigoLocalC !== null){\n          this.obtenerTienda(codigoLocalC);\n        }\n        get_Usuario_Trabajador(codigoUsuarioC).then((res) => {\n          if(res[0]){\n            this.ObtenerRolesUsuario(codigoUsuarioC);\n            this.setState({ usuario: res[0] , conectado:1});\n          }\n        });\n      }\n    } catch (e) {\n      console.log('ERROR_NO_CODIGO_USER__' + e);\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        <Menus \n          usuario={this.state.usuario} \n          local={this.state.local}\n          rolSuper = {this.state.rolSuper}\n          rolAdmi = {this.state.rolAdmi}\n          rolTienda = {this.state.rolTienda}\n          rolAlmace = {this.state.rolAlmace}\n        >\n          {this.props.children}\n        </Menus >\n      </div>\n    );\n  }\n}\n\nconst drawerWidth = 175;\nconst ITEM_HEIGHT = 48;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        }\n    },\n    toolbarButtons: {\n        marginLeft: \"auto\",\n        marginRight: -12\n    },\n    menuButton: {\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },        \n        marginRight: 20,\n        marginLeft: -12\n    },\n\n    toolbar: theme.mixins.toolbar,\n    \n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(2),\n    },\n    imagenPerfil: {\n      width: '60px'\n    }\n}));\n\nfunction Menus(props) {\n  const { container , children , usuario, rolSuper, rolAdmi , rolTienda , local} = props;\n\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  \n  const [openMenuItemTipos, setOpenMenuItemTipos] = React.useState(false);\n  const [openMenuItemProducto, setOpenMenuItemProducto] = React.useState(false);\n  const [openMenuItemIngreso, setOpenMenuItemIngreso] = React.useState(false);\n  const [openMenuItemEnvio, setOpenMenuItemEnvio] = React.useState(false);\n  const [openMenuItemGrafico, setOpenMenuItemGrafico] = React.useState(false);\n\n  function handleMenuItemTipos() {\n    setOpenMenuItemTipos(!openMenuItemTipos);\n  }\n\n  function handleMenuItemProducto() {\n    setOpenMenuItemProducto(!openMenuItemProducto);\n  }\n\n  function handleMenuItemIngreso() {\n    setOpenMenuItemIngreso(!openMenuItemIngreso);\n  }\n\n  function handleMenuItemEnvio() {\n    setOpenMenuItemEnvio(!openMenuItemEnvio);\n  }\n\n  function handleMenuItemGrafico() {\n    setOpenMenuItemGrafico(!openMenuItemGrafico);\n  }\n\n  const open = Boolean(anchorEl);\n  \n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n\n  const itemsMenuSuperior = [\n    { nombre:\"Ingresar\",icono: <InboxIcon/> ,url:\"/app/login\"},\n    { nombre:\"Salir\", icono: <InboxIcon/>,url:\"/app/logout\"},\n    { nombre:\"Configurar\", icono: <InboxIcon/>,url:\"/app/configurar\" },\n    { nombre:\"Perfil\", icono: <InboxIcon/>,url:\"/app\" }\n  ]\n  \n  function EliminarRegistrosVacios () {\n    del_Registro_Vacio(localStorage.getItem(\"codigoLocal\")).then( res => {});\n  }\n  \n//usuarioConectado();\n  const MenuLateral = (\n    \n    <div>\n      <Hidden>\n        <img src={\"/img/Logo-Hampina-Wassi.png\"} alt={\"Logo HampinaWassi\"} className=\"card-img-top rounded-circle py-4\"/>\n        <h3 className=\"text-center\">Sistema de Ventas</h3>\n      </Hidden>\n      <MenuList> \n\n        <MenuItem button component={Link} to=\"/app\"\n            onClick={EliminarRegistrosVacios}\n        >\n          <ListItemText primary=\"Principal\"/>\n        </MenuItem>\n\n        <MenuItem hidden={true} button onClick={handleMenuItemTipos}>\n          <ListItemText primary=\"Tipos\"/>\n          {openMenuItemTipos ? <ExpandLess /> : <ExpandMore />}\n        </MenuItem>\n        <Collapse in={openMenuItemTipos} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem hidden={!rolAdmi} button component={Link} className=\"\" to=\"/app/tipos/documento\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Documento\" />\n            </ListItem>\n            <ListItem hidden={!rolSuper} button component={Link} className=\"\" to=\"/app/tipos/local\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Local\" />\n            </ListItem>\n            <ListItem hidden={!rolSuper} button component={Link} className=\"\" to=\"/app/tipos/media\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Media\" />\n            </ListItem>\n            <ListItem hidden={!rolSuper} button component={Link} className=\"\" to=\"/app/tipos/precio\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Precio\" />\n            </ListItem>\n            <ListItem hidden={!rolAdmi} button component={Link} className=\"\" to=\"/app/tipos/producto\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Producto\" />\n            </ListItem>\n            <ListItem hidden={!rolSuper} button component={Link} className=\"\" to=\"/app/tipos/traslado\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Traslado\" />\n            </ListItem>\n          </List>\n        </Collapse>\n\n        <MenuItem hidden={true} button component={Link} to=\"/app/medias/listar\"\n          onClick={EliminarRegistrosVacios}\n        >\n          <ListItemText primary=\"Imagenes\"/>\n        </MenuItem>\n\n        <MenuItem button component={Link} className=\"\" to=\"/app/productos\"\n          onClick={EliminarRegistrosVacios}\n        >\n          <ListItemText primary=\"Productos\"/>\n        </MenuItem>\n        \n        <MenuItem hidden={!rolAdmi} button component={Link} className=\"\" to=\"/app/locales/almacen\"\n          onClick={EliminarRegistrosVacios}\n        >\n          <ListItemText primary=\"Almacenes\"/>\n        </MenuItem>\n\n        <MenuItem hidden={!rolAdmi} button component={Link} className=\"\" to=\"/app/locales/tienda\"\n          onClick={EliminarRegistrosVacios}\n        >\n          <ListItemText primary=\"Tiendas\"/>\n        </MenuItem>\n        \n        <MenuItem hidden={!rolAdmi} button component={Link} className=\"\" to=\"/app/sucursales\"\n          onClick={EliminarRegistrosVacios}\n        >\n          <ListItemText primary=\"Sucursales\"/>\n        </MenuItem>\n       \n        <MenuItem hidden={!rolSuper} button component={Link} className=\"\" to=\"/app/usuarios\"\n          onClick={EliminarRegistrosVacios}\n        >\n          <ListItemText primary=\"Usuarios\"/>\n        </MenuItem>\n        \n        <MenuItem hidden={!rolTienda} button onClick={handleMenuItemEnvio}>\n          <ListItemText primary=\"Envios\"/>\n          {openMenuItemEnvio ? <ExpandLess /> : <ExpandMore />}\n        </MenuItem>\n        <Collapse in={openMenuItemEnvio} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem button component={Link} className=\"\" to=\"/app/envios\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Registrar\" />\n            </ListItem>\n            <ListItem button component={Link} className=\"\" to=\"/app/envios/todos\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Listar\" />\n            </ListItem>\n          </List>\n        </Collapse>\n\n        <MenuItem hidden={!rolTienda} button onClick={handleMenuItemIngreso}>\n          <ListItemText primary=\"Ingresos\"/>\n          {openMenuItemIngreso ? <ExpandLess /> : <ExpandMore />}\n        </MenuItem>\n        <Collapse in={openMenuItemIngreso} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem button component={Link} className=\"\" to=\"/app/ingresos/pendientes\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Pendientes\" />\n            </ListItem>\n            <ListItem button component={Link} className=\"\" to=\"/app/ingresos/todos\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Listar\" />\n            </ListItem>\n          </List>\n        </Collapse>\n\n        <MenuItem hidden={!rolTienda} button onClick={handleMenuItemProducto}>    \n          <ListItemText primary=\"Ventas\"/>\n          {openMenuItemProducto ? <ExpandLess /> : <ExpandMore />}\n        </MenuItem>\n        <Collapse in={openMenuItemProducto} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem button component={Link} className=\"\" to=\"/app/ventas\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Registrar\" />\n            </ListItem>\n            <ListItem button component={Link} className=\"\" to=\"/app/ventas/listar\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Realizadas\" />\n            </ListItem>\n          </List>\n        </Collapse>\n      \n        <MenuItem hidden={true} button onClick={handleMenuItemGrafico}>\n          <ListItemText primary=\"Graficos\"/>\n          {openMenuItemGrafico ? <ExpandLess /> : <ExpandMore />}\n        </MenuItem>\n        <Collapse in={openMenuItemGrafico} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem button component={Link} className=\"\" to=\"/app/grafico/ingresos\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Ingresos\" />\n            </ListItem>\n            <ListItem button component={Link} className=\"\" to=\"/app/grafico/envios\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Envios\" />\n            </ListItem>\n            <ListItem button component={Link} className=\"\" to=\"/app/grafico/ventas\"\n              onClick={EliminarRegistrosVacios}\n            >\n              <ListItemIcon> <StarBorder /> </ListItemIcon>\n              <ListItemText primary=\"Ventas\" />\n            </ListItem>\n          </List>\n        </Collapse>\n\n        <MenuItem hidden={!rolAdmi} button component={Link} to=\"/app/reportes\"\n          onClick={EliminarRegistrosVacios}\n        >\n          <ListItemText primary=\"Reportes\"/>\n        </MenuItem>\n\n        <MenuItem hidden={!rolSuper} button component={Link} to=\"/app/buckup\"\n          onClick={EliminarRegistrosVacios}\n        >\n          <ListItemText primary=\"Buckup\"/>\n        </MenuItem>\n\n      </MenuList> \n    </div>\n  );\n  const MenuSuperior = (\n      <Toolbar>\n            <IconButton\n                aria-label=\"Open drawer\"\n                edge=\"start\"\n                onClick={handleDrawerToggle}\n                className={classes.menuButton}\n            >\n                <MenuIcon />\n            </IconButton>\n\n            <Typography>\n              Hampina Wassi - {local.nombreLocal} - {usuario.nombreTrabajador}\n            </Typography>\n            <span className={classes.toolbarButtons}>\n              <IconButton color=\"inherit\" className={classes.imagenPerfil}>\n                <img src={usuario.urlMediaTrabajador} alt={usuario.altMediaTrabajador} className=\"card-img-top rounded-circle\"/>\n              </IconButton>\n              <IconButton color=\"inherit\" aria-label=\"More Options\"\n                aria-controls=\"long-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n              >\n                <MoreVertIcon />\n              </IconButton>\n              <Menu\n                id=\"long-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: 200,\n                  },\n                }}\n              >\n              {itemsMenuSuperior.map((item, index) => ( // ITEMS__MENU__LATERAL\n                <MenuItem button key={index} component={Link} to={item.url}\n                  onClick={EliminarRegistrosVacios}\n                >\n                  <ListItemIcon>{item.icono}</ListItemIcon>\n                  <ListItemText primary={item.nombre} />\n                </MenuItem >\n                  ))}\n              </Menu>\n            </span>\n        </Toolbar>\n  );\n  var codigoUsuarioC=\"\";\n  codigoUsuarioC = localStorage.getItem('codigoUsuario');\n  if(codigoUsuarioC !== null && codigoUsuarioC !== \"\" && rolTienda){\n    return (\n      <React.Fragment>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>        \n          {MenuSuperior}\n        </AppBar>\n        <nav className={classes.drawer} aria-label=\"Mailbox folders\">\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true,\n              }}\n            >\n              {MenuLateral}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {MenuLateral}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {children}\n          <Footer textoFooter=\"Copyright \" nombreFooter=\"Tunki.com\"></Footer>\n        </main>\n      </div>\n      </React.Fragment>\n    );\n  }else{\n    return (\n      <div className={classes.root}>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {children}\n          <Footer textoFooter=\"Copyright \" nombreFooter=\"Tunki.com\"></Footer>\n        </main>\n      </div>    \n  );}\n}\n\nexport default Dashboard;","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n\n\nimport { get_Usuario_Trabajador } from '../Data/UsuarioData';\nimport { get_Local } from '../Data/LocalData';\nimport data from '../../db_data';\nimport Grafico from '../Vista/Grafico/Grafico';\n\nimport Menu from './menu';\n\nexport class profile extends Component {\n\n    BaseUrl = data + '/api/usuarios/';\n\n    constructor(props){\n        super(props);\n        this.state = {\n            usuario:{},\n            local:{},\n            conectado:0\n        }\n    }\n\n    setUsuario(usuario){\n        this.setState({\n            usuario:usuario,\n        });\n    }\n\n    obtenerTienda(){\n        get_Local(localStorage.getItem(\"codigoLocal\")).then( res => {\n            this.setState({ local : res[0] });\n        });\n    }\n\n    componentDidMount(){\n        this.obtenerTienda();\n        try {\n            const codigoUsuario  = localStorage.getItem('codigoUsuario'); \n            if(codigoUsuario !== \"\" && codigoUsuario !== null){\n                get_Usuario_Trabajador(codigoUsuario).then((result)=>{\n                    this.setState({ usuario: result[0]});\n                }); \n            }\n        } catch (e) {\n            console.log('ERROR_PROFILE_PRIMER_INICIO_NAVEGADOR__'+ e);\n        }\n\n    }\n    render() {\n        const codigoUsuario  = localStorage.getItem('codigoUsuario');\n        let buttonCard = {\n            textDecoration: 'none',\n        };\n        console.log(codigoUsuario);\n        if(codigoUsuario !== \"\" && codigoUsuario !== null){\n            return (\n                <Menu>\n                <div className=\"container\">\n                    {/*<h1>{this.state.local.nombreTipoLocal} EN {this.state.local.nombreSucursal}</h1>\n                    <h1>NOMBRE: {this.state.local.nombreLocal}</h1>\n                    <h1>USUARIO: {this.state.usuario.nombreTrabajador}</h1>*/}\n                    <div hidden={true} className=\"row my-4 justify-content-center\">\n                        <div className=\"col-md-3\">\n                            <a style={buttonCard} href=\"/ventas\">\n                                <div className=\"card text-white bg-primary\">\n                                    <div className=\"card-header\">Ventas</div>\n                                    <div className=\"card-body\">Realizar una Venta</div>\n                                </div>\n                            </a>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <a style={buttonCard} href=\"/app/productos\">\n                                <div className=\"card text-white bg-danger\">\n                                    <div className=\"card-header\">Productos</div>\n                                    <div className=\"card-body\">Lista de Productos</div>\n                                </div>\n                            </a>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <a style={buttonCard} href=\"/app/envios\">\n                                <div className=\"card text-white bg-warning\">\n                                    <div className=\"card-header\">Envios</div>\n                                    <div className=\"card-body\">Registrar un Envio</div>\n                                </div>\n                            </a>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <a style={buttonCard} href=\"/app/ingresos/pendientes\">\n                                <div className=\"card text-white bg-success\">\n                                    <div className=\"card-header\">Ingresos</div>\n                                    <div className=\"card-body\">Confirmar un Ingreso</div>\n                                </div>\n                            </a>\n                        </div>\n                        <div className=\"col-md-12 mt-4\">\n                            <div className=\"bg-info px-3 py-1 text-white\">\n                                GRAFICOS PERIODO - 2020\n                            </div>\n                        </div>\n                    </div>\n                    <Grafico></Grafico>\n                </div>\n                </Menu>\n            )\n        }else{\n            return(<Redirect to={'/app/login'}/>)\n        }\n    }\n}\n\nexport default profile","import React, { Component } from 'react';\r\n\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>TPD ID</th>\r\n                                <th>Codigo</th>\r\n                                <th>Documento</th>\r\n                                <th>Cantidad</th>     \r\n                            </tr>                \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.tpDocumento.map(tpDoc =>{\r\n                                return(\r\n                                    <tr key={tpDoc.id}>\r\n                                        <td>{tpDoc.id}</td>\r\n                                        <td>{tpDoc.codigoTipoDocumento}</td>\r\n                                        <td>{tpDoc.nombreTipoDocumento}</td>\r\n                                        <td>{tpDoc.cantidadCaracteres}</td>        \r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","// AUTH: JORGE M\r\n// TIPOS API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/tipos/';\r\n\r\n// LISTAR TIPOS DE DOCUMENTO\r\nexport function get_Tipo_Documento_Lista(){ \r\n    const urlFetch = BaseUrl + \"documento\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR TIPO DE DOCUMENTO CODIGO\r\nexport function get_Tipo_Documento(codigoTPDocumento){ \r\n    const urlFetch = BaseUrl + \"documento/\" + codigoTPDocumento;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//ELIMINAR TIPO DE DOCUMENTO\r\nexport function del_Tipo_Documento(codigotipoDocumento){ \r\n    const urlFetch = BaseUrl + \"documento/\" + codigotipoDocumento;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR TIPO DE DOCUMENTO\r\nexport function post_Tipo_Documento(tipoDocumento){ \r\n    const urlFetch = BaseUrl + \"documento\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(tipoDocumento),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR TIPO DE DOCUMENTO\r\nexport function put_Tipo_Documento(tipoDocumento){ \r\n    const urlFetch = BaseUrl + \"documento\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(tipoDocumento),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n// ----------------------------------------------------------------------------------------------------------------\r\n// LISTAR TIPOS DE LOCAL\r\nexport function get_Tipo_Local_Lista(){ \r\n    const urlFetch = BaseUrl + \"local\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR TIPO DE Local CODIGO\r\nexport function get_Tipo_Local(codigoTPLocal){ \r\n    const urlFetch = BaseUrl + \"local/\" + codigoTPLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//ELIMINAR TIPO DE Local\r\nexport function del_Tipo_Local(codigotipoLocal){ \r\n    const urlFetch = BaseUrl + \"local/\" + codigotipoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR TIPO DE Local\r\nexport function post_Tipo_Local(tipoLocal){ \r\n    const urlFetch = BaseUrl + \"local\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(tipoLocal),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR TIPO DE Local\r\nexport function put_Tipo_Local(tipoLocal){ \r\n    const urlFetch = BaseUrl + \"local\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(tipoLocal),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n// LISTAR TIPOS DE Precio\r\nexport function get_Tipo_Precio_Lista(){ \r\n    const urlFetch = BaseUrl + \"precio\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR TIPO DE Precio CODIGO\r\nexport function get_Tipo_Precio(codigoTipoPrecio){ \r\n    const urlFetch = BaseUrl + \"precio/\" + codigoTipoPrecio;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//ELIMINAR TIPO DE Precio\r\nexport function del_Tipo_Precio(codigoTipoPrecio){ \r\n    const urlFetch = BaseUrl + \"precio/\" + codigoTipoPrecio;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR TIPO DE Precio\r\nexport function post_Tipo_Precio(tipoPrecio){ \r\n    const urlFetch = BaseUrl + \"precio\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(tipoPrecio),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR TIPO DE Precio\r\nexport function put_Tipo_Precio(tipoPrecio){ \r\n    const urlFetch = BaseUrl + \"precio\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(tipoPrecio),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n// LISTAR TIPOS DE Media\r\nexport function get_Tipo_Media_Lista(){ \r\n    const urlFetch = BaseUrl + \"media\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR TIPO DE Media CODIGO\r\nexport function get_Tipo_Media(codigoTPMedia){ \r\n    const urlFetch = BaseUrl + \"media/\" + codigoTPMedia;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR TIPO DE MEDIA NOMBRE\r\nexport function get_Tipo_Media_Nombre(nombreTPMedia){ \r\n    const urlFetch = BaseUrl + \"media/nombre/\"+nombreTPMedia;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//ELIMINAR TIPO DE Media\r\nexport function del_Tipo_Media(codigotipoMedia){ \r\n    const urlFetch = BaseUrl + \"media/\" + codigotipoMedia;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR TIPO DE Media\r\nexport function post_Tipo_Media(tipoMedia){ \r\n    const urlFetch = BaseUrl + \"media\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(tipoMedia),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR TIPO DE Media\r\nexport function put_Tipo_Media(tipoMedia){ \r\n    const urlFetch = BaseUrl + \"media\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(tipoMedia),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n// LISTAR TIPOS DE Producto\r\nexport function get_Tipo_Producto_Lista(){ \r\n    const urlFetch = BaseUrl + \"producto\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR TIPO DE Producto CODIGO\r\nexport function get_Tipo_Producto(codigoTPProducto){ \r\n    const urlFetch = BaseUrl + \"producto/\" + codigoTPProducto;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//ELIMINAR TIPO DE Producto\r\nexport function del_Tipo_Producto(codigotipoProducto){ \r\n    const urlFetch = BaseUrl + \"producto/\" + codigotipoProducto;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR TIPO DE Producto\r\nexport function post_Tipo_Producto(tipoProducto){ \r\n    const urlFetch = BaseUrl + \"producto\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(tipoProducto),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR TIPO DE Producto\r\nexport function put_Tipo_Producto(tipoProducto){ \r\n    const urlFetch = BaseUrl + \"producto\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(tipoProducto),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n// LISTAR TIPOS DE Traslado\r\nexport function get_Tipo_Traslado_Lista(){ \r\n    const urlFetch = BaseUrl + \"traslado\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR TIPO DE Traslado CODIGO\r\nexport function get_Tipo_Traslado(codigoTPTraslado){ \r\n    const urlFetch = BaseUrl + \"traslado/\" + codigoTPTraslado;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//ELIMINAR TIPO DE Traslado\r\nexport function del_Tipo_Traslado(codigotipoTraslado){ \r\n    const urlFetch = BaseUrl + \"traslado/\" + codigotipoTraslado;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR TIPO DE Traslado\r\nexport function post_Tipo_Traslado(tipoTraslado){ \r\n    const urlFetch = BaseUrl + \"traslado\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(tipoTraslado),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR TIPO DE Traslado\r\nexport function put_Tipo_Traslado(tipoTraslado){ \r\n    const urlFetch = BaseUrl + \"traslado\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(tipoTraslado),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}","import React, { Component} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\n\r\nimport { Modal , ModalHeader, ModalBody, Alert } from 'reactstrap';\r\n\r\nimport data from '../../../db_data';\r\nimport ExportToExcel from \"../../Export/excel/tipoDocumento\";\r\nimport { post_Tipo_Documento, put_Tipo_Documento, del_Tipo_Documento , get_Tipo_Documento , get_Tipo_Documento_Lista} from '../../Data/tiposData';\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nexport default class tipoDocumentoLista extends Component {\r\n\r\n    BaseUrl = data + '/api/tipos/documento';\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            tipoDocumento:[],\r\n            filtered:[],\r\n            tipoDocumentoExcel:[],\r\n            message : {\r\n                text:'',\r\n                alert: ''\r\n            },\r\n            messageActivo:false,\r\n\r\n            codigoTipoDocumento: \"\",\r\n            nombreTipoDocumento: \"\",\r\n            cantidadCaracteres: 0,\r\n\r\n            tipoAccion:\"post\",\r\n            modalOpen: false,\r\n            tituloModal:\"\",\r\n\r\n\r\n            modalConfirmarOpen: false,\r\n            tipoEliminar : \"\",\r\n            codigoTPEliminar : \"\",\r\n        }\r\n    }\r\n\r\n    toogleModalConfirmar = () => {\r\n        this.setState({ modalConfirmarOpen : ! this.state.modalConfirmarOpen });\r\n    }\r\n\r\n    mostrarModal = (codigoTipoDocumento) => {\r\n        this.setState({ codigoTPEliminar : codigoTipoDocumento });\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    borrarConfirmado = () => {\r\n        const { codigoTPEliminar } = this.state;\r\n        this.eliminarTipoDocumento(codigoTPEliminar);\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n\r\n    mostrarAlerta = (tiempo) => {\r\n        setTimeout(()=>{\r\n            this.setState({ message : { text : '' , alert : ''} });            \r\n        },tiempo);\r\n    }\r\n\r\n    onFilteredChangeCustom = (value, accessor) => {\r\n        let filtered = this.state.filtered;\r\n        let insertNewFilter = 1;\r\n    \r\n        if (filtered.length) {\r\n          filtered.forEach((filter, i) => {\r\n            if (filter[\"id\"] === accessor) {\r\n              if (value === \"\" || !value.length) filtered.splice(i, 1);\r\n              else filter[\"value\"] = value;\r\n              insertNewFilter = 0;\r\n            }\r\n          });\r\n        }\r\n    \r\n        if (insertNewFilter) {\r\n          filtered.push({ id: accessor, value: value });\r\n        }\r\n    \r\n        this.setState({ filtered: filtered });\r\n      };\r\n    \r\n\r\n    listarTipoDocumento(codigoTipoDocumento){\r\n        if(codigoTipoDocumento !== \"\" && codigoTipoDocumento !== null){\r\n            get_Tipo_Documento(codigoTipoDocumento).then(res => {\r\n                this.setState({ tipoDocumento : res })\r\n            });\r\n        }else{\r\n            get_Tipo_Documento_Lista().then(res => {\r\n                this.setState({ tipoDocumento : res})\r\n            });\r\n        }\r\n    }\r\n\r\n    cambiarAlerta(message){\r\n        this.setState({ message:message });\r\n        this.mostrarAlerta(3000);  \r\n    }\r\n\r\n    guardarVerificacion = () =>{\r\n        if(this.state.nombreTipoDocumento){\r\n            if(this.state.cantidadCaracteres){\r\n                this.guardarTipoDocumento();\r\n            }else{\r\n                alert(\"Ingrese Caracteres\");\r\n            }\r\n        }else{\r\n            alert(\"Ingrese el Nombre\");\r\n        }\r\n    }\r\n\r\n    guardarTipoDocumento = () =>{\r\n        const { nombreTipoDocumento, cantidadCaracteres, codigoTipoDocumento } = this.state;\r\n        const tipoDocumento = {nombreTipoDocumento, cantidadCaracteres, codigoTipoDocumento };\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };        \r\n        switch (this.state.tipoAccion) {\r\n            case \"post\":\r\n                post_Tipo_Documento(tipoDocumento).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se guardo correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            case \"put\":\r\n                put_Tipo_Documento(tipoDocumento).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se modifico correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    eliminarTipoDocumento(codigoTipoDocumento){\r\n        const message = {\r\n            text:\"Algo salio mal vuelve a intertarlo\",\r\n            alert:\"danger\"  \r\n        };\r\n        if(codigoTipoDocumento !== \"\" && codigoTipoDocumento !== null){\r\n            del_Tipo_Documento(codigoTipoDocumento).then(res => {\r\n                message.alert = \"success\";\r\n                message.text = \"Se elimino correctamente\";\r\n                this.listarTipoDocumento(\"\");\r\n            });\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    setValues = (e , field) => {       \r\n        this.setState({ [field]: e.target.value });\r\n    }\r\n\r\n    verificarAccion(codigoTipoDocumento,tituloModal){\r\n        if(codigoTipoDocumento !== null && codigoTipoDocumento !== \"\"){\r\n            get_Tipo_Documento(codigoTipoDocumento).then(res =>{\r\n                if(res[0]){    \r\n                    this.setState({\r\n                        nombreTipoDocumento:res[0].nombreTipoDocumento,\r\n                        codigoTipoDocumento:res[0].codigoTipoDocumento,\r\n                        cantidadCaracteres:res[0].cantidadCaracteres,\r\n                        tipoAccion:\"put\",        \r\n                        tituloModal: tituloModal\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            this.setState({ \r\n                nombreTipoDocumento:\"\",\r\n                codigoTipoDocumento:\"\",\r\n                cantidadCaracteres:0,\r\n                tipoAccion:\"post\",\r\n                tituloModal: tituloModal\r\n            });\r\n        }\r\n        this.toogleModal();\r\n    }\r\n    toogleModal(){   \r\n        this.setState({\r\n            modalOpen : ! this.state.modalOpen,\r\n        });\r\n        if(!this.state.modalOpen){\r\n            this.listarTipoDocumento(\"\");\r\n        }    \r\n    }\r\n\r\n    exportarToExcel(){\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.listarTipoDocumento(\"\");\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"ID\",\r\n                accessor: \"id\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"CODIGO\",\r\n                accessor: \"codigoTipoDocumento\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"DOCUMENTO\",\r\n                accessor: \"nombreTipoDocumento\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"N¬∞ CARACTERES\",\r\n                accessor: \"cantidadCaracteres\",\r\n                sortable: false,\r\n                filterable: false,\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header:\"ACCIONES\",\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-5\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                        onClick={() =>{\r\n                                            this.mostrarModal(props.original.codigoTipoDocumento);\r\n                                        }}\r\n                                    >Borrar</button>\r\n                                </div>\r\n                                <div className=\"col-md-5 ml-auto\">\r\n                                    <button className=\"btn btn-warning\"\r\n                                    onClick={\r\n                                        e => this.verificarAccion(props.original.codigoTipoDocumento,\"Modificar\")                                           \r\n                                    }>Editar</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                },                \r\n                sortable: false,\r\n                filterable: false\r\n            }\r\n        ]\r\n        let buttonCard = {\r\n            cursor: 'pointer'\r\n        };\r\n        return (\r\n            <Menu>\r\n            <div className=\"container p-4\">\r\n                {/*<MaterialTable></MaterialTable>*/}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-11 mx-auto\">\r\n                        <div className=\"card \">\r\n                            <div className=\"card-header\">\r\n                                <h3>Tipo de Documentos en Existencia</h3>\r\n                            </div>\r\n                            <div className=\"m-2\">\r\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>\r\n                                { this.state.message.text} </Alert> ): '' }\r\n                            </div>                            \r\n                            <div className=\"row m-2\">\r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card text-white bg-info\"\r\n                                        onClick={()=>{\r\n                                            this.verificarAccion(\"\",\"Registrar\")\r\n                                            //this.ver();\r\n                                    }}>\r\n                                    <div className=\"card-header\">Registrar</div>\r\n                                        <button className=\"btn card-body text-white text-justify\">Documento de indentidad.</button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card bg-success text-white\">\r\n                                        <div className=\"card-header\">Exportar</div>\r\n                                        <ReactHTMLTableExcel\r\n                                            id=\"test-table-xls-button\"\r\n                                            className=\"btn card-body text-white text-justify\"\r\n                                            table=\"table-to-xls\"\r\n                                            filename=\"tipoDocumentoExcel\"\r\n                                            sheet=\"hoja 1\"\r\n                                            buttonText=\"A Documento Excel.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ReactTable\r\n                                    columns = {columns}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.tipoDocumento}\r\n                                    filterable\r\n                                    filtered = {this.state.filtered}\r\n                                    onFilteredChange = {(filtered, column, value) => {\r\n                                        this.onFilteredChangeCustom(value, column.id || column.accessor);\r\n                                      }}\r\n                                      defaultFilterMethod={(filter, row, column) => {\r\n                                        const id = filter.pivotId || filter.id;\r\n                                        if (typeof filter.value === \"object\") {\r\n                                          return row[id] !== undefined\r\n                                            ? filter.value.indexOf(row[id]) > -1\r\n                                            : true;\r\n                                        } else {\r\n                                          return row[id] !== undefined\r\n                                            ? String(row[id]).indexOf(filter.value) > -1\r\n                                            : true;\r\n                                        }\r\n                                      }}\r\n                                    defaultPageSize={5}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                >\r\n                                {(state, filtredData, instance)=>{\r\n                                    this.reactTable = state.pageRows.map(\r\n                                        tipoDocumento => {return tipoDocumento._original});\r\n                                    return(\r\n                                        <div>\r\n                                            {filtredData()}\r\n                                            <ExportToExcel tpDocumento={this.reactTable}/>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                </ReactTable>\r\n                            </div>\r\n                            <Modal \r\n                                isOpen={this.state.modalOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModal.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <div className=\"card \">\r\n                                        <div className=\"card-header text-center\">\r\n                                            <h3>Documento de Indentidad</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body \">\r\n                                            {/*<form>*/}\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"nombreTipoDocumento\"> Nombre Documento: </label>\r\n                                                    <input className=\"form-control\" id= \"nombreTipoDocumento\" type=\"text\" placeholder=\"Ejemplo: DNI\"\r\n                                                        value = {this.state.nombreTipoDocumento} \r\n                                                        onChange = { e => this.setValues(e,'nombreTipoDocumento') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"cantidadCaracteres\"> Caracteres: </label>\r\n                                                    <input className=\"form-control\" id= \"cantidadCaracteres\" type=\"text\" placeholder=\"Ejemplo: DNI\"\r\n                                                        value={this.state.cantidadCaracteres}\r\n                                                        onChange = { e => this.setValues(e,'cantidadCaracteres') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"text-center\">\r\n                                                    <button className=\"btn btn-primary\"\r\n                                                        onClick={this.guardarVerificacion}\r\n                                                    > REGISTRAR </button>\r\n                                                </div>\r\n                                            {/*</form>*/}\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n\r\n                            <Modal \r\n                                    isOpen={this.state.modalConfirmarOpen}\r\n                                    centered={true}\r\n                                    size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModalConfirmar.bind(this)}>Alerta</ModalHeader>    \r\n                                <ModalBody>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row justify-content-center text-center\">\r\n                                            <div className=\"col-md-12 mb-4\">\r\n                                                <span>Se eliminar√° el Registro, ¬øDesea Continuar? </span>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <button className=\"btn btn-danger\"\r\n                                                    onClick={this.borrarConfirmado}\r\n                                                >Eliminar</button>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <button className=\"btn btn-info\"\r\n                                                    onClick = {this.toogleModalConfirmar.bind(this)}\r\n                                                >Cancelar</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n/*\r\n<ModalBody>\r\n    <div className=\"card \">\r\n        <div className=\"card-header text-center\">\r\n            <h3>Documento de Indentidad</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n            <form>\r\n                <div>\r\n                    <label for=\"nombreTipoDocumento\"> Nombre Documento: </label>\r\n                    <input id= \"nombreTipoDocumento\" type=\"text\" value={this.state.tipoDocumentoSeleccionado.nombreTipoDocumento} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'nombreTipoDocumento') }\r\n                    />\r\n                    <label for=\"cantidadCaracteres\"> Caracteres: </label>\r\n                    <input id= \"cantidadCaracteres\" type=\"text\" value={this.state.tipoDocumentoSeleccionado.cantidadCaracteres} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'cantidadCaracteres') }\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={this.save}\r\n                    > REGISTRAR </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ModalBody>\r\n\r\n\r\n{(state, filtredData, instance)=>{\r\n    this.reactTable = state.pageRows.map(\r\n        tipoDocumento => {return tipoDocumento._original});\r\n    return(\r\n        <div>\r\n            {filtredData()}\r\n            <ExportToExcel tpDocumento={this.reactTable}/>\r\n        </div>\r\n    )\r\n}}\r\n\r\n    <div className=\"col-sm\" style={buttonCard}>\r\n        <div className=\"card bg-success text-white\">\r\n            <div className=\"card-header\">Exportar</div>\r\n            <ReactHTMLTableExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"btn card-body text-white text-justify\"\r\n                table=\"table-to-xls\"\r\n                filename=\"filtredData\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"A Documento Excel.\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n*/","import React, { Component } from 'react';\r\n\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>TPD ID</th>\r\n                                <th>Codigo</th>\r\n                                <th>Local</th>  \r\n                            </tr>                \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.tpLocal.map(tpLoc =>{\r\n                                return(\r\n                                    <tr key={tpLoc.id}>\r\n                                        <td>{tpLoc.id}</td>\r\n                                        <td>{tpLoc.codigoTipoLocal}</td>\r\n                                        <td>{tpLoc.nombreTipoLocal}</td>      \r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","import React, { Component} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\n\r\nimport { Modal , ModalHeader, ModalBody, Alert } from 'reactstrap';\r\n\r\nimport data from '../../../db_data';\r\nimport ExportToExcel from \"../../Export/excel/tipoLocal\";\r\n\r\nimport { post_Tipo_Local, put_Tipo_Local, del_Tipo_Local , get_Tipo_Local , get_Tipo_Local_Lista} from '../../Data/tiposData';\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nexport default class tipoLocalLista extends Component {\r\n\r\n    BaseUrl = data + '/api/tipos/local';\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            tipoLocal:[],\r\n            filtered:[],\r\n            tipoLocalExcel:[],\r\n            message : {\r\n                text:'',\r\n                alert: ''\r\n            },\r\n            messageActivo:false,\r\n\r\n            codigoTipoLocal: \"\",\r\n            nombreTipoLocal: \"\",\r\n\r\n            tipoAccion:\"post\",\r\n            modalOpen: false,\r\n            tituloModal:\"\"\r\n        }\r\n    }\r\n\r\n    onFilteredChangeCustom = (value, accessor) => {\r\n        let filtered = this.state.filtered;\r\n        let insertNewFilter = 1;\r\n    \r\n        if (filtered.length) {\r\n          filtered.forEach((filter, i) => {\r\n            if (filter[\"id\"] === accessor) {\r\n              if (value === \"\" || !value.length) filtered.splice(i, 1);\r\n              else filter[\"value\"] = value;\r\n              insertNewFilter = 0;\r\n            }\r\n          });\r\n        }\r\n    \r\n        if (insertNewFilter) {\r\n          filtered.push({ id: accessor, value: value });\r\n        }\r\n    \r\n        this.setState({ filtered: filtered });\r\n      };\r\n    \r\n\r\n    listarTipoLocal(codigoTipoLocal){\r\n        if(codigoTipoLocal !== \"\" && codigoTipoLocal !== null){\r\n            get_Tipo_Local(codigoTipoLocal).then(res => {\r\n                this.setState({ tipoLocal : res })\r\n            });\r\n        }else{\r\n            get_Tipo_Local_Lista().then(res => {\r\n                this.setState({ tipoLocal : res})\r\n            });\r\n        }\r\n    }\r\n\r\n    cambiarAlerta(message){\r\n        this.setState({ message:message });\r\n        this.mostrarAlerta(3000);  \r\n    }\r\n\r\n    guardarTipoLocal = () =>{\r\n        const { nombreTipoLocal, cantidadCaracteres, codigoTipoLocal } = this.state;\r\n        const tipoLocal = {nombreTipoLocal, cantidadCaracteres, codigoTipoLocal };\r\n        const message = {\r\n            text:\"Algo salio mal vuelve a intertarlo\",\r\n            alert:\"danger\"  \r\n        };        \r\n        switch (this.state.tipoAccion) {\r\n            case \"post\":\r\n                post_Tipo_Local(tipoLocal).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se guardo correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            case \"put\":\r\n                put_Tipo_Local(tipoLocal).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se modifico correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    eliminarTipoLocal(codigoTipoLocal){\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };\r\n        if(codigoTipoLocal !== \"\" && codigoTipoLocal !== null){\r\n            del_Tipo_Local(codigoTipoLocal).then(res => {\r\n                message.alert = \"danger\";\r\n                message.text = \"Se elimino correctamente\";\r\n                this.listarTipoLocal(\"\");         \r\n            });\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    setValues = (e , field) => {       \r\n        this.setState({ [field]: e.target.value });\r\n    }\r\n\r\n    verificarAccion(codigoTipoLocal,tituloModal){\r\n        if(codigoTipoLocal !== null && codigoTipoLocal !== \"\"){\r\n            get_Tipo_Local(codigoTipoLocal).then(res =>{\r\n                if(res[0]){    \r\n                    this.setState({\r\n                        nombreTipoLocal:res[0].nombreTipoLocal,\r\n                        codigoTipoLocal:res[0].codigoTipoLocal,\r\n                        tipoAccion:\"put\",        \r\n                        tituloModal: tituloModal\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            this.setState({ \r\n                nombreTipoLocal:\"\",\r\n                codigoTipoLocal:\"\",\r\n                tipoAccion:\"post\",\r\n                tituloModal: tituloModal\r\n            });\r\n        }\r\n        this.toogleModal();\r\n    }\r\n    toogleModal(){   \r\n        this.setState({\r\n            modalOpen : ! this.state.modalOpen,\r\n        });\r\n        if(!this.state.modalOpen){\r\n            this.listarTipoLocal(\"\");\r\n        }        \r\n    }\r\n\r\n    mostrarAlerta = (tiempo) => {\r\n        setTimeout(()=>{\r\n            this.setState({ message : { text : '' , alert : ''} });            \r\n        },tiempo);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.listarTipoLocal(\"\");\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"ID\",\r\n                accessor: \"id\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"CODIGO\",\r\n                accessor: \"codigoTipoLocal\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"Local\",\r\n                accessor: \"nombreTipoLocal\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header:\"ACCIONES\",\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-5\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                        onClick={() =>{\r\n                                            this.eliminarTipoLocal(props.original.codigoTipoLocal);\r\n                                        }}\r\n                                    >Borrar</button>\r\n                                </div>\r\n                                <div className=\"col-md-5 ml-auto\">\r\n                                    <button className=\"btn btn-warning\"\r\n                                    onClick={\r\n                                        e => this.verificarAccion(props.original.codigoTipoLocal,\"Modificar\")                                           \r\n                                    }>Editar</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                },                \r\n                sortable: false,\r\n                filterable: false\r\n            }\r\n        ]\r\n        let buttonCard = {\r\n            cursor: 'pointer'\r\n        };\r\n        return (\r\n            <Menu>\r\n            <div className=\"container p-4\">\r\n                {/*<MaterialTable></MaterialTable>*/}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-11 mx-auto\">\r\n                        <div className=\"card \">\r\n                            <div className=\"card-header\">\r\n                                <h3>Tipo de Locales en Existencia</h3>\r\n                            </div>\r\n                            <div className=\"m-2 text-center\">\r\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>{ this.state.message.text}</Alert> ) : '' }\r\n                            </div>                            \r\n                            <div className=\"row m-2\">\r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card text-white bg-info\"\r\n                                        onClick={()=>{\r\n                                            this.verificarAccion(\"\",\"Registrar\")\r\n                                            //this.ver();\r\n                                    }}>\r\n                                    <div className=\"card-header\">Registrar</div>\r\n                                        <button className=\"btn card-body text-white text-justify\">Tipo de Local.</button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card bg-success text-white\">\r\n                                        <div className=\"card-header\">Exportar</div>\r\n                                        <ReactHTMLTableExcel\r\n                                            id=\"test-table-xls-button\"\r\n                                            className=\"btn card-body text-white text-justify\"\r\n                                            table=\"table-to-xls\"\r\n                                            filename=\"tipoLocalExcel\"\r\n                                            sheet=\"hoja 1\"\r\n                                            buttonText=\"A Documento Excel.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ReactTable\r\n                                    columns = {columns}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.tipoLocal}\r\n                                    filterable\r\n                                    filtered = {this.state.filtered}\r\n                                    onFilteredChange = {(filtered, column, value) => {\r\n                                        this.onFilteredChangeCustom(value, column.id || column.accessor);\r\n                                      }}\r\n                                      defaultFilterMethod={(filter, row, column) => {\r\n                                        const id = filter.pivotId || filter.id;\r\n                                        if (typeof filter.value === \"object\") {\r\n                                          return row[id] !== undefined\r\n                                            ? filter.value.indexOf(row[id]) > -1\r\n                                            : true;\r\n                                        } else {\r\n                                          return row[id] !== undefined\r\n                                            ? String(row[id]).indexOf(filter.value) > -1\r\n                                            : true;\r\n                                        }\r\n                                      }}\r\n                                    defaultPageSize={5}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                >\r\n                                {(state, filtredData, instance)=>{\r\n                                    this.reactTable = state.pageRows.map(\r\n                                        tipoLocal => {return tipoLocal._original});\r\n                                    return(\r\n                                        <div>\r\n                                            {filtredData()}\r\n                                            <ExportToExcel tpLocal={this.reactTable}/>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                </ReactTable>\r\n                            </div>\r\n                            <Modal \r\n                                isOpen={this.state.modalOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModal.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <div className=\"card \">\r\n                                        <div className=\"card-header text-center\">\r\n                                            <h3>Tipo de Local</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body \">\r\n                                            {/*<form>*/}\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"nombreTipoLocal\"> Nombre Local: </label>\r\n                                                    <input className=\"form-control\" id= \"nombreTipoLocal\" type=\"text\" placeholder=\"Ejemplo: Almacen\"\r\n                                                        value = {this.state.nombreTipoLocal} \r\n                                                        onChange = { e => this.setValues(e,'nombreTipoLocal') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"text-center\">\r\n                                                    <button className=\"btn btn-primary\"\r\n                                                        onClick={this.guardarTipoLocal}\r\n                                                    > REGISTRAR </button>\r\n                                                </div>\r\n                                            {/*</form>*/}\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n/*\r\n<ModalBody>\r\n    <div className=\"card \">\r\n        <div className=\"card-header text-center\">\r\n            <h3>Local de Indentidad</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n            <form>\r\n                <div>\r\n                    <label for=\"nombreTipoLocal\"> Nombre Local: </label>\r\n                    <input id= \"nombreTipoLocal\" type=\"text\" value={this.state.tipoLocalSeleccionado.nombreTipoLocal} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'nombreTipoLocal') }\r\n                    />\r\n                    <label for=\"cantidadCaracteres\"> Caracteres: </label>\r\n                    <input id= \"cantidadCaracteres\" type=\"text\" value={this.state.tipoLocalSeleccionado.cantidadCaracteres} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'cantidadCaracteres') }\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={this.save}\r\n                    > REGISTRAR </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ModalBody>\r\n\r\n\r\n{(state, filtredData, instance)=>{\r\n    this.reactTable = state.pageRows.map(\r\n        tipoLocal => {return tipoLocal._original});\r\n    return(\r\n        <div>\r\n            {filtredData()}\r\n            <ExportToExcel tpLocal={this.reactTable}/>\r\n        </div>\r\n    )\r\n}}\r\n\r\n    <div className=\"col-sm\" style={buttonCard}>\r\n        <div className=\"card bg-success text-white\">\r\n            <div className=\"card-header\">Exportar</div>\r\n            <ReactHTMLTableExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"btn card-body text-white text-justify\"\r\n                table=\"table-to-xls\"\r\n                filename=\"filtredData\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"A Local Excel.\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n*/","import React, { Component } from 'react';\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>TPD ID</th>\r\n                                <th>Codigo</th>\r\n                                <th>Media</th>  \r\n                                <th>Descripcion</th>  \r\n                            </tr>                \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.tpMedia.map(tpMed =>{\r\n                                return(\r\n                                    <tr key={tpMed.id}>\r\n                                        <td>{tpMed.id}</td>\r\n                                        <td>{tpMed.codigoTipoMedia}</td>\r\n                                        <td>{tpMed.nombreTipoMedia}</td>                                        \r\n                                        <td>{tpMed.descripcionTipoMedia}</td>       \r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","import React, { Component} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\n\r\nimport { Modal , ModalHeader, ModalBody, Alert } from 'reactstrap';\r\n\r\nimport data from '../../../db_data';\r\nimport ExportToExcel from \"../../Export/excel/tipoMedia\";\r\n\r\nimport { post_Tipo_Media, put_Tipo_Media, del_Tipo_Media , get_Tipo_Media , get_Tipo_Media_Lista} from '../../Data/tiposData';\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nexport default class tipoMediaLista extends Component {\r\n\r\n    BaseUrl = data + '/api/tipos/media';\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            tipoMedia:[],\r\n            filtered:[],\r\n            tipoMediaExcel:[],\r\n            message : {\r\n                text:'',\r\n                alert: ''\r\n            },\r\n            messageActivo:false,\r\n\r\n            codigoTipoMedia: \"\",\r\n            nombreTipoMedia: \"\",\r\n            descripcionTipoMedia:\"\",\r\n            tipoAccion:\"post\",\r\n            modalOpen: false,\r\n            tituloModal:\"\"\r\n        }\r\n    }\r\n\r\n    onFilteredChangeCustom = (value, accessor) => {\r\n        let filtered = this.state.filtered;\r\n        let insertNewFilter = 1;\r\n    \r\n        if (filtered.length) {\r\n          filtered.forEach((filter, i) => {\r\n            if (filter[\"id\"] === accessor) {\r\n              if (value === \"\" || !value.length) filtered.splice(i, 1);\r\n              else filter[\"value\"] = value;\r\n              insertNewFilter = 0;\r\n            }\r\n          });\r\n        }\r\n    \r\n        if (insertNewFilter) {\r\n          filtered.push({ id: accessor, value: value });\r\n        }\r\n    \r\n        this.setState({ filtered: filtered });\r\n      };\r\n    \r\n\r\n    listarTipoMedia(codigoTipoMedia){\r\n        if(codigoTipoMedia !== \"\" && codigoTipoMedia !== null){\r\n            get_Tipo_Media(codigoTipoMedia).then(res => {\r\n                this.setState({ tipoMedia : res })\r\n            });\r\n        }else{\r\n            get_Tipo_Media_Lista().then(res => {\r\n                this.setState({ tipoMedia : res})\r\n            });\r\n        }\r\n    }\r\n    cambiarAlerta(message){\r\n        this.setState({ message:message });\r\n        this.mostrarAlerta(3000);  \r\n    }\r\n\r\n    guardarTipoMedia = () =>{\r\n        const { nombreTipoMedia, descripcionTipoMedia , codigoTipoMedia } = this.state;\r\n        const tipoMedia = {nombreTipoMedia, descripcionTipoMedia, codigoTipoMedia };\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };        \r\n        switch (this.state.tipoAccion) {\r\n            case \"post\":\r\n                post_Tipo_Media(tipoMedia).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se guardo correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            case \"put\":\r\n                put_Tipo_Media(tipoMedia).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se modifico correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    eliminarTipoMedia(codigoTipoMedia){\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };\r\n        if(codigoTipoMedia !== \"\" && codigoTipoMedia !== null){\r\n            del_Tipo_Media(codigoTipoMedia).then(res => {\r\n                message.alert = \"danger\";\r\n                message.text = \"Se elimino correctamente\";\r\n                this.listarTipoMedia(\"\");         \r\n            });\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    setValues = (e , field) => {       \r\n        this.setState({ [field]: e.target.value });\r\n    }\r\n\r\n    verificarAccion(codigoTipoMedia,tituloModal){\r\n        if(codigoTipoMedia !== null && codigoTipoMedia !== \"\"){\r\n            get_Tipo_Media(codigoTipoMedia).then(res =>{\r\n                if(res[0]){    \r\n                    this.setState({\r\n                        nombreTipoMedia:res[0].nombreTipoMedia,\r\n                        codigoTipoMedia:res[0].codigoTipoMedia,\r\n                        descripcionTipoMedia:res[0].descripcionTipoMedia,\r\n                        tipoAccion:\"put\",        \r\n                        tituloModal: tituloModal\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            this.setState({ \r\n                nombreTipoMedia:\"\",\r\n                codigoTipoMedia:\"\",\r\n                tipoAccion:\"post\",\r\n                tituloModal: tituloModal\r\n            });\r\n        }\r\n        this.toogleModal();\r\n    }\r\n    toogleModal(){   \r\n        this.setState({\r\n            modalOpen : ! this.state.modalOpen,\r\n        });\r\n        if(!this.state.modalOpen){\r\n            this.listarTipoMedia(\"\");\r\n        }        \r\n    }\r\n\r\n    mostrarAlerta = (tiempo) => {\r\n        setTimeout(()=>{\r\n            this.setState({ message : { text : '' , alert : ''} });            \r\n        },tiempo);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.listarTipoMedia(\"\");\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"ID\",\r\n                accessor: \"id\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"CODIGO\",\r\n                accessor: \"codigoTipoMedia\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"MEDIA\",\r\n                accessor: \"nombreTipoMedia\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"DESCRIPCION\",\r\n                accessor: \"descripcionTipoMedia\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header:\"ACCIONES\",\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-5\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                        onClick={() =>{\r\n                                            this.eliminarTipoMedia(props.original.codigoTipoMedia);\r\n                                        }}\r\n                                    >Borrar</button>\r\n                                </div>\r\n                                <div className=\"col-md-5 ml-auto\">\r\n                                    <button className=\"btn btn-warning\"\r\n                                    onClick={\r\n                                        e => this.verificarAccion(props.original.codigoTipoMedia,\"Modificar\")                                           \r\n                                    }>Editar</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                },                \r\n                sortable: false,\r\n                filterable: false\r\n            }\r\n        ]\r\n        let buttonCard = {\r\n            cursor: 'pointer'\r\n        };\r\n        return (\r\n            <Menu>\r\n            <div className=\"container p-4\">\r\n                {/*<MaterialTable></MaterialTable>*/}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-11 mx-auto\">\r\n                        <div className=\"card \">\r\n                            <div className=\"card-header\">\r\n                                <h3>Tipo de Medias en Existencia</h3>\r\n                            </div>\r\n                            <div className=\"m-2 text-center\">\r\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>{ this.state.message.text}</Alert> ) : '' }\r\n                            </div>                            \r\n                            <div className=\"row m-2\">\r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card text-white bg-info\"\r\n                                        onClick={()=>{\r\n                                            this.verificarAccion(\"\",\"Registrar\")\r\n                                            //this.ver();\r\n                                    }}>\r\n                                    <div className=\"card-header\">Registrar</div>\r\n                                        <button className=\"btn card-body text-white text-justify\">Tipo de Media.</button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card bg-success text-white\">\r\n                                        <div className=\"card-header\">Exportar</div>\r\n                                        <ReactHTMLTableExcel\r\n                                            id=\"test-table-xls-button\"\r\n                                            className=\"btn card-body text-white text-justify\"\r\n                                            table=\"table-to-xls\"\r\n                                            filename=\"tipoMediaExcel\"\r\n                                            sheet=\"hoja 1\"\r\n                                            buttonText=\"A Documento Excel.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ReactTable\r\n                                    columns = {columns}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.tipoMedia}\r\n                                    filterable\r\n                                    filtered = {this.state.filtered}\r\n                                    onFilteredChange = {(filtered, column, value) => {\r\n                                        this.onFilteredChangeCustom(value, column.id || column.accessor);\r\n                                      }}\r\n                                      defaultFilterMethod={(filter, row, column) => {\r\n                                        const id = filter.pivotId || filter.id;\r\n                                        if (typeof filter.value === \"object\") {\r\n                                          return row[id] !== undefined\r\n                                            ? filter.value.indexOf(row[id]) > -1\r\n                                            : true;\r\n                                        } else {\r\n                                          return row[id] !== undefined\r\n                                            ? String(row[id]).indexOf(filter.value) > -1\r\n                                            : true;\r\n                                        }\r\n                                      }}\r\n                                    defaultPageSize={5}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                >\r\n                                {(state, filtredData, instance)=>{\r\n                                    this.reactTable = state.pageRows.map(\r\n                                        tipoMedia => {return tipoMedia._original});\r\n                                    return(\r\n                                        <div>\r\n                                            {filtredData()}\r\n                                            <ExportToExcel tpMedia={this.reactTable}/>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                </ReactTable>\r\n                            </div>\r\n                            <Modal \r\n                                isOpen={this.state.modalOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModal.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <div className=\"card \">\r\n                                        <div className=\"card-header text-center\">\r\n                                            <h3>Tipo de Media</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body \">\r\n                                            {/*<form>*/}\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"nombreTipoMedia\"> Nombre: </label>\r\n                                                    <input className=\"form-control\" id= \"nombreTipoMedia\" type=\"text\" placeholder=\"Ejemplo: JPGE\"\r\n                                                        value = {this.state.nombreTipoMedia} \r\n                                                        onChange = { e => this.setValues(e,'nombreTipoMedia') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"descripcionTipoMedia\"> Descripcion: </label>\r\n                                                    <input className=\"form-control\" id= \"descripcionTipoMedia\" type=\"text\" placeholder=\"Ejemplo: Archivo tipo .jpge\"\r\n                                                        value = {this.state.descripcionTipoMedia} \r\n                                                        onChange = { e => this.setValues(e,'descripcionTipoMedia') }\r\n                                                    />\r\n                                                </div>\r\n                                                descripcionTipoMedia\r\n                                                <div className=\"text-center\">\r\n                                                    <button className=\"btn btn-primary\"\r\n                                                        onClick={this.guardarTipoMedia}\r\n                                                    > REGISTRAR </button>\r\n                                                </div>\r\n                                            {/*</form>*/}\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n/*\r\n<ModalBody>\r\n    <div className=\"card \">\r\n        <div className=\"card-header text-center\">\r\n            <h3>Media de Indentidad</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n            <form>\r\n                <div>\r\n                    <label for=\"nombreTipoMedia\"> Nombre Media: </label>\r\n                    <input id= \"nombreTipoMedia\" type=\"text\" value={this.state.tipoMediaSeleccionado.nombreTipoMedia} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'nombreTipoMedia') }\r\n                    />\r\n                    <label for=\"cantidadCaracteres\"> Caracteres: </label>\r\n                    <input id= \"cantidadCaracteres\" type=\"text\" value={this.state.tipoMediaSeleccionado.cantidadCaracteres} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'cantidadCaracteres') }\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={this.save}\r\n                    > REGISTRAR </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ModalBody>\r\n\r\n\r\n{(state, filtredData, instance)=>{\r\n    this.reactTable = state.pageRows.map(\r\n        tipoMedia => {return tipoMedia._original});\r\n    return(\r\n        <div>\r\n            {filtredData()}\r\n            <ExportToExcel tpMedia={this.reactTable}/>\r\n        </div>\r\n    )\r\n}}\r\n\r\n    <div className=\"col-sm\" style={buttonCard}>\r\n        <div className=\"card bg-success text-white\">\r\n            <div className=\"card-header\">Exportar</div>\r\n            <ReactHTMLTableExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"btn card-body text-white text-justify\"\r\n                table=\"table-to-xls\"\r\n                filename=\"filtredData\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"A Media Excel.\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n*/","import React, { Component } from 'react';\r\n\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>TPD ID</th>\r\n                                <th>Codigo</th>\r\n                                <th>Precio</th>  \r\n                                <th>Descripcion</th>\r\n                            </tr>                \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.tpPrecio.map(tpPre =>{\r\n                                return(\r\n                                    <tr key={tpPre.id}>\r\n                                        <td>{tpPre.id}</td>\r\n                                        <td>{tpPre.codigoTipoPrecio}</td>\r\n                                        <td>{tpPre.nombreTipoPrecio}</td>                                        \r\n                                        <td>{tpPre.descripcionTipoPrecio}</td>       \r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","import React, { Component} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\n\r\nimport { Modal , ModalHeader, ModalBody, Alert } from 'reactstrap';\r\n\r\nimport data from '../../../db_data';\r\nimport ExportToExcel from \"../../Export/excel/tipoPrecio\";\r\n\r\nimport { post_Tipo_Precio, put_Tipo_Precio, del_Tipo_Precio , get_Tipo_Precio , get_Tipo_Precio_Lista} from '../../Data/tiposData';\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nexport default class tipoPrecioLista extends Component {\r\n\r\n    BaseUrl = data + '/api/tipos/Precio';\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            tipoPrecio:[],\r\n            filtered:[],\r\n            tipoPrecioExcel:[],\r\n            message : {\r\n                text:'',\r\n                alert: ''\r\n            },\r\n            messageActivo:false,\r\n\r\n            codigoTipoPrecio: \"\",\r\n            nombreTipoPrecio: \"\",\r\n            descripcionTipoPrecio:\"\",\r\n            tipoAccion:\"post\",\r\n            modalOpen: false,\r\n            tituloModal:\"\"\r\n        }\r\n    }\r\n\r\n    onFilteredChangeCustom = (value, accessor) => {\r\n        let filtered = this.state.filtered;\r\n        let insertNewFilter = 1;\r\n    \r\n        if (filtered.length) {\r\n          filtered.forEach((filter, i) => {\r\n            if (filter[\"id\"] === accessor) {\r\n              if (value === \"\" || !value.length) filtered.splice(i, 1);\r\n              else filter[\"value\"] = value;\r\n              insertNewFilter = 0;\r\n            }\r\n          });\r\n        }\r\n    \r\n        if (insertNewFilter) {\r\n          filtered.push({ id: accessor, value: value });\r\n        }\r\n    \r\n        this.setState({ filtered: filtered });\r\n      };\r\n    \r\n\r\n    listarTipoPrecio(codigoTipoPrecio){\r\n        if(codigoTipoPrecio !== \"\" && codigoTipoPrecio !== null){\r\n            get_Tipo_Precio(codigoTipoPrecio).then(res => {\r\n                this.setState({ tipoPrecio : res })\r\n            });\r\n        }else{\r\n            get_Tipo_Precio_Lista().then(res => {\r\n                this.setState({ tipoPrecio : res})\r\n            });\r\n        }\r\n    }\r\n    cambiarAlerta(message){\r\n        this.setState({ message:message });\r\n        this.mostrarAlerta(3000);  \r\n    }\r\n\r\n    guardarTipoPrecio = () =>{\r\n        const { nombreTipoPrecio, descripcionTipoPrecio , codigoTipoPrecio } = this.state;\r\n        const tipoPrecio = {nombreTipoPrecio, descripcionTipoPrecio, codigoTipoPrecio };\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };        \r\n        switch (this.state.tipoAccion) {\r\n            case \"post\":\r\n                post_Tipo_Precio(tipoPrecio).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se guardo correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            case \"put\":\r\n                put_Tipo_Precio(tipoPrecio).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se modifico correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    eliminarTipoPrecio(codigoTipoPrecio){\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };\r\n        if(codigoTipoPrecio !== \"\" && codigoTipoPrecio !== null){\r\n            del_Tipo_Precio(codigoTipoPrecio).then(res => {\r\n                message.alert = \"danger\";\r\n                message.text = \"Se elimino correctamente\";\r\n                this.listarTipoPrecio(\"\");         \r\n            });\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    setValues = (e , field) => {       \r\n        this.setState({ [field]: e.target.value });\r\n    }\r\n\r\n    verificarAccion(codigoTipoPrecio,tituloModal){\r\n        if(codigoTipoPrecio !== null && codigoTipoPrecio !== \"\"){\r\n            get_Tipo_Precio(codigoTipoPrecio).then(res =>{\r\n                if(res[0]){    \r\n                    this.setState({\r\n                        nombreTipoPrecio:res[0].nombreTipoPrecio,\r\n                        codigoTipoPrecio:res[0].codigoTipoPrecio,\r\n                        descripcionTipoPrecio:res[0].descripcionTipoPrecio,\r\n                        tipoAccion:\"put\",        \r\n                        tituloModal: tituloModal\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            this.setState({ \r\n                nombreTipoPrecio:\"\",\r\n                codigoTipoPrecio:\"\",\r\n                tipoAccion:\"post\",\r\n                tituloModal: tituloModal\r\n            });\r\n        }\r\n        this.toogleModal();\r\n    }\r\n    toogleModal(){   \r\n        this.setState({\r\n            modalOpen : ! this.state.modalOpen,\r\n        });\r\n        if(!this.state.modalOpen){\r\n            this.listarTipoPrecio(\"\");\r\n        }       \r\n    }\r\n\r\n    mostrarAlerta = (tiempo) => {\r\n        setTimeout(()=>{\r\n            this.setState({ message : { text : '' , alert : ''} });            \r\n        },tiempo);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.listarTipoPrecio(\"\");\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"ID\",\r\n                accessor: \"id\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"CODIGO\",\r\n                accessor: \"codigoTipoPrecio\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"Precio\",\r\n                accessor: \"nombreTipoPrecio\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"DESCRIPCION\",\r\n                accessor: \"descripcionTipoPrecio\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header:\"ACCIONES\",\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-5\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                        onClick={() =>{\r\n                                            this.eliminarTipoPrecio(props.original.codigoTipoPrecio);\r\n                                        }}\r\n                                    >Borrar</button>\r\n                                </div>\r\n                                <div className=\"col-md-5 ml-auto\">\r\n                                    <button className=\"btn btn-warning\"\r\n                                    onClick={\r\n                                        e => this.verificarAccion(props.original.codigoTipoPrecio,\"Modificar\")                                           \r\n                                    }>Editar</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                },                \r\n                sortable: false,\r\n                filterable: false\r\n            }\r\n        ]\r\n        let buttonCard = {\r\n            cursor: 'pointer'\r\n        };\r\n        return (\r\n            <Menu>\r\n            <div className=\"container p-4\">\r\n                {/*<MaterialTable></MaterialTable>*/}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-11 mx-auto\">\r\n                        <div className=\"card \">\r\n                            <div className=\"card-header\">\r\n                                <h3>Tipo de Precios en Existencia</h3>\r\n                            </div>\r\n                            <div className=\"m-2 text-center\">\r\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>{ this.state.message.text}</Alert> ) : '' }\r\n                            </div>                            \r\n                            <div className=\"row m-2\">\r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card text-white bg-info\"\r\n                                        onClick={()=>{\r\n                                            this.verificarAccion(\"\",\"Registrar\")\r\n                                            //this.ver();\r\n                                    }}>\r\n                                    <div className=\"card-header\">Registrar</div>\r\n                                        <button className=\"btn card-body text-white text-justify\">Tipo de Precio.</button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card bg-success text-white\">\r\n                                        <div className=\"card-header\">Exportar</div>\r\n                                        <ReactHTMLTableExcel\r\n                                            id=\"test-table-xls-button\"\r\n                                            className=\"btn card-body text-white text-justify\"\r\n                                            table=\"table-to-xls\"\r\n                                            filename=\"tipoPrecioExcel\"\r\n                                            sheet=\"hoja 1\"\r\n                                            buttonText=\"A Documento Excel.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ReactTable\r\n                                    columns = {columns}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.tipoPrecio}\r\n                                    filterable\r\n                                    filtered = {this.state.filtered}\r\n                                    onFilteredChange = {(filtered, column, value) => {\r\n                                        this.onFilteredChangeCustom(value, column.id || column.accessor);\r\n                                      }}\r\n                                      defaultFilterMethod={(filter, row, column) => {\r\n                                        const id = filter.pivotId || filter.id;\r\n                                        if (typeof filter.value === \"object\") {\r\n                                          return row[id] !== undefined\r\n                                            ? filter.value.indexOf(row[id]) > -1\r\n                                            : true;\r\n                                        } else {\r\n                                          return row[id] !== undefined\r\n                                            ? String(row[id]).indexOf(filter.value) > -1\r\n                                            : true;\r\n                                        }\r\n                                      }}\r\n                                    defaultPageSize={5}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                >\r\n                                {(state, filtredData, instance)=>{\r\n                                    this.reactTable = state.pageRows.map(\r\n                                        tipoPrecio => {return tipoPrecio._original});\r\n                                    return(\r\n                                        <div>\r\n                                            {filtredData()}\r\n                                            <ExportToExcel tpPrecio={this.reactTable}/>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                </ReactTable>\r\n                            </div>\r\n                            <Modal \r\n                                isOpen={this.state.modalOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModal.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <div className=\"card \">\r\n                                        <div className=\"card-header text-center\">\r\n                                            <h3>Tipo de Precio</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body \">\r\n                                            {/*<form>*/}\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"nombreTipoPrecio\"> Nombre: </label>\r\n                                                    <input className=\"form-control\" id= \"nombreTipoPrecio\" type=\"text\" placeholder=\"Ejemplo: JPGE\"\r\n                                                        value = {this.state.nombreTipoPrecio} \r\n                                                        onChange = { e => this.setValues(e,'nombreTipoPrecio') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"descripcionTipoPrecio\"> Descripcion: </label>\r\n                                                    <input className=\"form-control\" id= \"descripcionTipoPrecio\" type=\"text\" placeholder=\"Ejemplo: Archivo tipo .jpge\"\r\n                                                        value = {this.state.descripcionTipoPrecio} \r\n                                                        onChange = { e => this.setValues(e,'descripcionTipoPrecio') }\r\n                                                    />\r\n                                                </div>\r\n                                                descripcionTipoPrecio\r\n                                                <div className=\"text-center\">\r\n                                                    <button className=\"btn btn-primary\"\r\n                                                        onClick={this.guardarTipoPrecio}\r\n                                                    > REGISTRAR </button>\r\n                                                </div>\r\n                                            {/*</form>*/}\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n/*\r\n<ModalBody>\r\n    <div className=\"card \">\r\n        <div className=\"card-header text-center\">\r\n            <h3>Precio de Indentidad</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n            <form>\r\n                <div>\r\n                    <label for=\"nombreTipoPrecio\"> Nombre Precio: </label>\r\n                    <input id= \"nombreTipoPrecio\" type=\"text\" value={this.state.tipoPrecioSeleccionado.nombreTipoPrecio} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'nombreTipoPrecio') }\r\n                    />\r\n                    <label for=\"cantidadCaracteres\"> Caracteres: </label>\r\n                    <input id= \"cantidadCaracteres\" type=\"text\" value={this.state.tipoPrecioSeleccionado.cantidadCaracteres} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'cantidadCaracteres') }\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={this.save}\r\n                    > REGISTRAR </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ModalBody>\r\n\r\n\r\n{(state, filtredData, instance)=>{\r\n    this.reactTable = state.pageRows.map(\r\n        tipoPrecio => {return tipoPrecio._original});\r\n    return(\r\n        <div>\r\n            {filtredData()}\r\n            <ExportToExcel tpPrecio={this.reactTable}/>\r\n        </div>\r\n    )\r\n}}\r\n\r\n    <div className=\"col-sm\" style={buttonCard}>\r\n        <div className=\"card bg-success text-white\">\r\n            <div className=\"card-header\">Exportar</div>\r\n            <ReactHTMLTableExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"btn card-body text-white text-justify\"\r\n                table=\"table-to-xls\"\r\n                filename=\"filtredData\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"A Precio Excel.\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n*/","import React, { Component } from 'react';\r\n\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>TPD ID</th>\r\n                                <th>Codigo</th>\r\n                                <th>Producto</th>  \r\n                                <th>Descripcion</th>\r\n                            </tr>                \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.tpProducto.map(tpPro =>{\r\n                                return(\r\n                                    <tr key={tpPro.id}>\r\n                                        <td>{tpPro.id}</td>\r\n                                        <td>{tpPro.codigoTipoProducto}</td>\r\n                                        <td>{tpPro.nombreTipoProducto}</td>                                        \r\n                                        <td>{tpPro.descripcionTipoProducto}</td>       \r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","import React, { Component} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\n\r\nimport { Modal , ModalHeader, ModalBody, Alert } from 'reactstrap';\r\n\r\nimport data from '../../../db_data';\r\nimport ExportToExcel from \"../../Export/excel/tipoProducto\";\r\n\r\nimport { post_Tipo_Producto, put_Tipo_Producto, del_Tipo_Producto , get_Tipo_Producto , get_Tipo_Producto_Lista} from '../../Data/tiposData';\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nexport default class tipoProductoLista extends Component {\r\n\r\n    BaseUrl = data + '/api/tipos/producto';\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            tipoProducto:[],\r\n            filtered:[],\r\n            tipoProductoExcel:[],\r\n            message : {\r\n                text:'',\r\n                alert: ''\r\n            },\r\n            messageActivo:false,\r\n\r\n            codigoTipoProducto: \"\",\r\n            nombreTipoProducto: \"\",\r\n            descripcionTipoProducto:\"\",\r\n            tipoAccion:\"post\",\r\n            modalOpen: false,\r\n            tituloModal:\"\",\r\n\r\n            modalConfirmarOpen: false,\r\n            tipoEliminar : \"\",\r\n            codigoTPEliminar : \"\",\r\n        }\r\n    }\r\n    \r\n    toogleModalConfirmar = () => {\r\n        this.setState({ modalConfirmarOpen : ! this.state.modalConfirmarOpen });\r\n    }\r\n\r\n    mostrarModal = (codigoTipoProducto) => {\r\n        this.setState({ codigoTPEliminar : codigoTipoProducto });\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    borrarConfirmado = () => {\r\n        const { codigoTPEliminar } = this.state;\r\n        this.eliminarTipoProducto(codigoTPEliminar);\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    onFilteredChangeCustom = (value, accessor) => {\r\n        let filtered = this.state.filtered;\r\n        let insertNewFilter = 1;\r\n    \r\n        if (filtered.length) {\r\n          filtered.forEach((filter, i) => {\r\n            if (filter[\"id\"] === accessor) {\r\n              if (value === \"\" || !value.length) filtered.splice(i, 1);\r\n              else filter[\"value\"] = value;\r\n              insertNewFilter = 0;\r\n            }\r\n          });\r\n        }\r\n    \r\n        if (insertNewFilter) {\r\n          filtered.push({ id: accessor, value: value });\r\n        }\r\n    \r\n        this.setState({ filtered: filtered });\r\n      };\r\n    \r\n\r\n    listarTipoProducto(codigoTipoProducto){\r\n        if(codigoTipoProducto !== \"\" && codigoTipoProducto !== null){\r\n            get_Tipo_Producto(codigoTipoProducto).then(res => {\r\n                this.setState({ tipoProducto : res })\r\n            });\r\n        }else{\r\n            get_Tipo_Producto_Lista().then(res => {\r\n                this.setState({ tipoProducto : res})\r\n            });\r\n        }\r\n    }\r\n    cambiarAlerta(message){\r\n        this.setState({ message:message });\r\n        this.mostrarAlerta(3000);  \r\n    }\r\n    guardarVerificacion = () =>{\r\n        if(this.state.nombreTipoProducto){\r\n            if(this.state.descripcionTipoProducto){\r\n                this.guardarTipoProducto();\r\n            }else{\r\n                alert(\"Ingrese una Descripcion\");\r\n            }\r\n        }else{\r\n            alert(\"Ingrese el Nombre\");\r\n        }\r\n    }\r\n\r\n    guardarTipoProducto = () =>{\r\n        const { nombreTipoProducto, descripcionTipoProducto , codigoTipoProducto } = this.state;\r\n        const tipoProducto = {nombreTipoProducto, descripcionTipoProducto, codigoTipoProducto };\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };        \r\n        switch (this.state.tipoAccion) {\r\n            case \"post\":\r\n                post_Tipo_Producto(tipoProducto).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se guardo correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            case \"put\":\r\n                put_Tipo_Producto(tipoProducto).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se modifico correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    eliminarTipoProducto(codigoTipoProducto){\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };\r\n        if(codigoTipoProducto !== \"\" && codigoTipoProducto !== null){\r\n            del_Tipo_Producto(codigoTipoProducto).then(res => {\r\n                message.alert = \"danger\";\r\n                message.text = \"Se elimino correctamente\";\r\n                this.listarTipoProducto(\"\");         \r\n            });\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    setValues = (e , field) => {       \r\n        this.setState({ [field]: e.target.value });\r\n    }\r\n\r\n    verificarAccion(codigoTipoProducto,tituloModal){\r\n        if(codigoTipoProducto !== null && codigoTipoProducto !== \"\"){\r\n            get_Tipo_Producto(codigoTipoProducto).then(res =>{\r\n                if(res[0]){    \r\n                    this.setState({\r\n                        nombreTipoProducto:res[0].nombreTipoProducto,\r\n                        codigoTipoProducto:res[0].codigoTipoProducto,\r\n                        descripcionTipoProducto:res[0].descripcionTipoProducto,\r\n                        tipoAccion:\"put\",        \r\n                        tituloModal: tituloModal\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            this.setState({ \r\n                nombreTipoProducto:\"\",\r\n                codigoTipoProducto:\"\",\r\n                tipoAccion:\"post\",\r\n                tituloModal: tituloModal\r\n            });\r\n        }\r\n        this.toogleModal();\r\n    }\r\n    toogleModal(){   \r\n        this.setState({\r\n            modalOpen : ! this.state.modalOpen,\r\n        });\r\n        if(!this.state.modalOpen){\r\n            this.listarTipoProducto(\"\");\r\n        }        \r\n    }\r\n\r\n    mostrarAlerta = (tiempo) => {\r\n        setTimeout(()=>{\r\n            this.setState({ message : { text : '' , alert : ''} });            \r\n        },tiempo);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.listarTipoProducto(\"\");\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"ID\",\r\n                accessor: \"id\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"CODIGO\",\r\n                accessor: \"codigoTipoProducto\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"Producto\",\r\n                accessor: \"nombreTipoProducto\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"DESCRIPCION\",\r\n                accessor: \"descripcionTipoProducto\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header:\"ACCIONES\",\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-5\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                        onClick={() =>{\r\n                                            this.mostrarModal(props.original.codigoTipoProducto);\r\n                                        }}\r\n                                    >Borrar</button>\r\n                                </div>\r\n                                <div className=\"col-md-5 ml-auto\">\r\n                                    <button className=\"btn btn-warning\"\r\n                                    onClick={\r\n                                        e => this.verificarAccion(props.original.codigoTipoProducto,\"Modificar\")                                           \r\n                                    }>Editar</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                },                \r\n                sortable: false,\r\n                filterable: false\r\n            }\r\n        ]\r\n        let buttonCard = {\r\n            cursor: 'pointer'\r\n        };\r\n        return (\r\n            <Menu>\r\n            <div className=\"container p-4\">\r\n                {/*<MaterialTable></MaterialTable>*/}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-11 mx-auto\">\r\n                        <div className=\"card \">\r\n                            <div className=\"card-header\">\r\n                                <h3>Tipo de Productos en Existencia</h3>\r\n                            </div>\r\n                            <div className=\"m-2 text-center\">\r\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>{ this.state.message.text}</Alert> ) : '' }\r\n                            </div>                            \r\n                            <div className=\"row m-2\">\r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card text-white bg-info\"\r\n                                        onClick={()=>{\r\n                                            this.verificarAccion(\"\",\"Registrar\")\r\n                                            //this.ver();\r\n                                    }}>\r\n                                    <div className=\"card-header\">Registrar</div>\r\n                                        <button className=\"btn card-body text-white text-justify\">Tipo de Producto.</button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card bg-success text-white\">\r\n                                        <div className=\"card-header\">Exportar</div>\r\n                                        <ReactHTMLTableExcel\r\n                                            id=\"test-table-xls-button\"\r\n                                            className=\"btn card-body text-white text-justify\"\r\n                                            table=\"table-to-xls\"\r\n                                            filename=\"tipoProductoExcel\"\r\n                                            sheet=\"hoja 1\"\r\n                                            buttonText=\"A Documento Excel.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ReactTable\r\n                                    columns = {columns}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.tipoProducto}\r\n                                    filterable\r\n                                    filtered = {this.state.filtered}\r\n                                    onFilteredChange = {(filtered, column, value) => {\r\n                                        this.onFilteredChangeCustom(value, column.id || column.accessor);\r\n                                      }}\r\n                                      defaultFilterMethod={(filter, row, column) => {\r\n                                        const id = filter.pivotId || filter.id;\r\n                                        if (typeof filter.value === \"object\") {\r\n                                          return row[id] !== undefined\r\n                                            ? filter.value.indexOf(row[id]) > -1\r\n                                            : true;\r\n                                        } else {\r\n                                          return row[id] !== undefined\r\n                                            ? String(row[id]).indexOf(filter.value) > -1\r\n                                            : true;\r\n                                        }\r\n                                      }}\r\n                                    defaultPageSize={5}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                >\r\n                                {(state, filtredData, instance)=>{\r\n                                    this.reactTable = state.pageRows.map(\r\n                                        tipoProducto => {return tipoProducto._original});\r\n                                    return(\r\n                                        <div>\r\n                                            {filtredData()}\r\n                                            <ExportToExcel tpProducto={this.reactTable}/>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                </ReactTable>\r\n                            </div>\r\n                            <Modal \r\n                                isOpen={this.state.modalOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModal.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <div className=\"card \">\r\n                                        <div className=\"card-header text-center\">\r\n                                            <h3>Tipo de Producto</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body \">\r\n                                            {/*<form>*/}\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"nombreTipoProducto\"> Nombre: </label>\r\n                                                    <input className=\"form-control\" id= \"nombreTipoProducto\" type=\"text\" placeholder=\"Ejemplo: JPGE\"\r\n                                                        value = {this.state.nombreTipoProducto} \r\n                                                        onChange = { e => this.setValues(e,'nombreTipoProducto') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"descripcionTipoProducto\"> Descripcion: </label>\r\n                                                    <input className=\"form-control\" id= \"descripcionTipoProducto\" type=\"text\" placeholder=\"Ejemplo: Archivo tipo .jpge\"\r\n                                                        value = {this.state.descripcionTipoProducto} \r\n                                                        onChange = { e => this.setValues(e,'descripcionTipoProducto') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"text-center\">\r\n                                                    <button className=\"btn btn-primary\"\r\n                                                        onClick={this.guardarVerificacion}\r\n                                                    > REGISTRAR </button>\r\n                                                </div>\r\n                                            {/*</form>*/}\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                            <Modal \r\n                                    isOpen={this.state.modalConfirmarOpen}\r\n                                    centered={true}\r\n                                    size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModalConfirmar.bind(this)}>Alerta</ModalHeader>    \r\n                                <ModalBody>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row justify-content-center text-center\">\r\n                                            <div className=\"col-md-12 mb-4\">\r\n                                                <span>Se eliminar√° el Registro, ¬øDesea Continuar? </span>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <button className=\"btn btn-danger\"\r\n                                                    onClick={this.borrarConfirmado}\r\n                                                >Eliminar</button>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <button className=\"btn btn-info\"\r\n                                                    onClick = {this.toogleModalConfirmar.bind(this)}\r\n                                                >Cancelar</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n/*\r\n<ModalBody>\r\n    <div className=\"card \">\r\n        <div className=\"card-header text-center\">\r\n            <h3>Producto de Indentidad</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n            <form>\r\n                <div>\r\n                    <label for=\"nombreTipoProducto\"> Nombre Producto: </label>\r\n                    <input id= \"nombreTipoProducto\" type=\"text\" value={this.state.tipoProductoSeleccionado.nombreTipoProducto} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'nombreTipoProducto') }\r\n                    />\r\n                    <label for=\"cantidadCaracteres\"> Caracteres: </label>\r\n                    <input id= \"cantidadCaracteres\" type=\"text\" value={this.state.tipoProductoSeleccionado.cantidadCaracteres} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'cantidadCaracteres') }\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={this.save}\r\n                    > REGISTRAR </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ModalBody>\r\n\r\n\r\n{(state, filtredData, instance)=>{\r\n    this.reactTable = state.pageRows.map(\r\n        tipoProducto => {return tipoProducto._original});\r\n    return(\r\n        <div>\r\n            {filtredData()}\r\n            <ExportToExcel tpProducto={this.reactTable}/>\r\n        </div>\r\n    )\r\n}}\r\n\r\n    <div className=\"col-sm\" style={buttonCard}>\r\n        <div className=\"card bg-success text-white\">\r\n            <div className=\"card-header\">Exportar</div>\r\n            <ReactHTMLTableExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"btn card-body text-white text-justify\"\r\n                table=\"table-to-xls\"\r\n                filename=\"filtredData\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"A Producto Excel.\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n*/","import React, { Component } from 'react';\r\n\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>TPD ID</th>\r\n                                <th>Codigo</th>\r\n                                <th>Traslado</th>  \r\n                            </tr>                \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.tpTraslado.map(tpTra =>{\r\n                                return(\r\n                                    <tr key={tpTra.id}>\r\n                                        <td>{tpTra.id}</td>\r\n                                        <td>{tpTra.codigoTipoTraslado}</td>\r\n                                        <td>{tpTra.nombreTipoTraslado}</td>   \r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","import React, { Component} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\n\r\nimport { Modal , ModalHeader, ModalBody, Alert } from 'reactstrap';\r\n\r\nimport data from '../../../db_data';\r\nimport ExportToExcel from \"../../Export/excel/tipoTraslado\";\r\n\r\nimport { post_Tipo_Traslado, put_Tipo_Traslado, del_Tipo_Traslado , get_Tipo_Traslado , get_Tipo_Traslado_Lista} from '../../Data/tiposData';\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nexport default class tipoTrasladoLista extends Component {\r\n\r\n    BaseUrl = data + '/api/tipos/traslado';\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            tipoTraslado:[],\r\n            filtered:[],\r\n            tipoTrasladoExcel:[],\r\n            message : {\r\n                text:'',\r\n                alert: ''\r\n            },\r\n            messageActivo:false,\r\n\r\n            codigoTipoTraslado: \"\",\r\n            nombreTipoTraslado: \"\",\r\n            tipoAccion:\"post\",\r\n            modalOpen: false,\r\n            tituloModal:\"\"\r\n        }\r\n    }\r\n\r\n    onFilteredChangeCustom = (value, accessor) => {\r\n        let filtered = this.state.filtered;\r\n        let insertNewFilter = 1;\r\n    \r\n        if (filtered.length) {\r\n          filtered.forEach((filter, i) => {\r\n            if (filter[\"id\"] === accessor) {\r\n              if (value === \"\" || !value.length) filtered.splice(i, 1);\r\n              else filter[\"value\"] = value;\r\n              insertNewFilter = 0;\r\n            }\r\n          });\r\n        }\r\n    \r\n        if (insertNewFilter) {\r\n          filtered.push({ id: accessor, value: value });\r\n        }\r\n    \r\n        this.setState({ filtered: filtered });\r\n      };\r\n    \r\n\r\n    listarTipoTraslado(codigoTipoTraslado){\r\n        if(codigoTipoTraslado !== \"\" && codigoTipoTraslado !== null){\r\n            get_Tipo_Traslado(codigoTipoTraslado).then(res => {\r\n                this.setState({ tipoTraslado : res })\r\n            });\r\n        }else{\r\n            get_Tipo_Traslado_Lista().then(res => {\r\n                this.setState({ tipoTraslado : res})\r\n            });\r\n        }\r\n    }\r\n    cambiarAlerta(message){\r\n        this.setState({ message:message });\r\n        this.mostrarAlerta(3000);  \r\n    }\r\n\r\n    guardarTipoTraslado = () =>{\r\n        const { nombreTipoTraslado, codigoTipoTraslado } = this.state;\r\n        const tipoTraslado = {nombreTipoTraslado, codigoTipoTraslado };\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };        \r\n        switch (this.state.tipoAccion) {\r\n            case \"post\":\r\n                post_Tipo_Traslado(tipoTraslado).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se guardo correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            case \"put\":\r\n                put_Tipo_Traslado(tipoTraslado).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se modifico correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    eliminarTipoTraslado(codigoTipoTraslado){\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };\r\n        if(codigoTipoTraslado !== \"\" && codigoTipoTraslado !== null){\r\n            del_Tipo_Traslado(codigoTipoTraslado).then(res => {\r\n                message.alert = \"danger\";\r\n                message.text = \"Se elimino correctamente\";\r\n                this.listarTipoTraslado(\"\");         \r\n            });\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    setValues = (e , field) => {       \r\n        this.setState({ [field]: e.target.value });\r\n    }\r\n\r\n    verificarAccion(codigoTipoTraslado,tituloModal){\r\n        if(codigoTipoTraslado !== null && codigoTipoTraslado !== \"\"){\r\n            get_Tipo_Traslado(codigoTipoTraslado).then(res =>{\r\n                if(res[0]){    \r\n                    this.setState({\r\n                        nombreTipoTraslado:res[0].nombreTipoTraslado,\r\n                        codigoTipoTraslado:res[0].codigoTipoTraslado,\r\n                        tipoAccion:\"put\",        \r\n                        tituloModal: tituloModal\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            this.setState({ \r\n                nombreTipoTraslado:\"\",\r\n                codigoTipoTraslado:\"\",\r\n                tipoAccion:\"post\",\r\n                tituloModal: tituloModal\r\n            });\r\n        }\r\n        this.toogleModal();\r\n    }\r\n    toogleModal(){   \r\n        this.setState({\r\n            modalOpen : ! this.state.modalOpen,\r\n        });\r\n        if(!this.state.modalOpen){\r\n            this.listarTipoTraslado(\"\");\r\n        }\r\n    }\r\n\r\n    mostrarAlerta = (tiempo) => {\r\n        setTimeout(()=>{\r\n            this.setState({ message : { text : '' , alert : ''} });            \r\n        },tiempo);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.listarTipoTraslado(\"\");\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"ID\",\r\n                accessor: \"id\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"CODIGO\",\r\n                accessor: \"codigoTipoTraslado\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"Traslado\",\r\n                accessor: \"nombreTipoTraslado\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header:\"ACCIONES\",\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-5\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                        onClick={() =>{\r\n                                            this.eliminarTipoTraslado(props.original.codigoTipoTraslado);\r\n                                        }}\r\n                                    >Borrar</button>\r\n                                </div>\r\n                                <div className=\"col-md-5 ml-auto\">\r\n                                    <button className=\"btn btn-warning\"\r\n                                    onClick={\r\n                                        e => this.verificarAccion(props.original.codigoTipoTraslado,\"Modificar\")                                           \r\n                                    }>Editar</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                },                \r\n                sortable: false,\r\n                filterable: false\r\n            }\r\n        ]\r\n        let buttonCard = {\r\n            cursor: 'pointer'\r\n        };\r\n        return (\r\n            <Menu>\r\n            <div className=\"container p-4\">\r\n                {/*<MaterialTable></MaterialTable>*/}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-11 mx-auto\">\r\n                        <div className=\"card \">\r\n                            <div className=\"card-header\">\r\n                                <h3>Tipo de Traslados en Existencia</h3>\r\n                            </div>\r\n                            <div className=\"m-2 text-center\">\r\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>{ this.state.message.text}</Alert> ) : '' }\r\n                            </div>                            \r\n                            <div className=\"row m-2\">\r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card text-white bg-info\"\r\n                                        onClick={()=>{\r\n                                            this.verificarAccion(\"\",\"Registrar\")\r\n                                            //this.ver();\r\n                                    }}>\r\n                                    <div className=\"card-header\">Registrar</div>\r\n                                        <button className=\"btn card-body text-white text-justify\">Tipo de Traslado.</button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card bg-success text-white\">\r\n                                        <div className=\"card-header\">Exportar</div>\r\n                                        <ReactHTMLTableExcel\r\n                                            id=\"test-table-xls-button\"\r\n                                            className=\"btn card-body text-white text-justify\"\r\n                                            table=\"table-to-xls\"\r\n                                            filename=\"tipoTrasladoExcel\"\r\n                                            sheet=\"hoja 1\"\r\n                                            buttonText=\"A Documento Excel.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ReactTable\r\n                                    columns = {columns}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.tipoTraslado}\r\n                                    filterable\r\n                                    filtered = {this.state.filtered}\r\n                                    onFilteredChange = {(filtered, column, value) => {\r\n                                        this.onFilteredChangeCustom(value, column.id || column.accessor);\r\n                                      }}\r\n                                      defaultFilterMethod={(filter, row, column) => {\r\n                                        const id = filter.pivotId || filter.id;\r\n                                        if (typeof filter.value === \"object\") {\r\n                                          return row[id] !== undefined\r\n                                            ? filter.value.indexOf(row[id]) > -1\r\n                                            : true;\r\n                                        } else {\r\n                                          return row[id] !== undefined\r\n                                            ? String(row[id]).indexOf(filter.value) > -1\r\n                                            : true;\r\n                                        }\r\n                                      }}\r\n                                    defaultPageSize={5}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                >\r\n                                {(state, filtredData, instance)=>{\r\n                                    this.reactTable = state.pageRows.map(\r\n                                        tipoTraslado => {return tipoTraslado._original});\r\n                                    return(\r\n                                        <div>\r\n                                            {filtredData()}\r\n                                            <ExportToExcel tpTraslado={this.reactTable}/>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                </ReactTable>\r\n                            </div>\r\n                            <Modal \r\n                                isOpen={this.state.modalOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModal.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <div className=\"card \">\r\n                                        <div className=\"card-header text-center\">\r\n                                            <h3>Tipo de Traslado</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body \">\r\n                                            {/*<form>*/}\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"nombreTipoTraslado\"> Nombre: </label>\r\n                                                    <input className=\"form-control\" id= \"nombreTipoTraslado\" type=\"text\" placeholder=\"Ejemplo: JPGE\"\r\n                                                        value = {this.state.nombreTipoTraslado} \r\n                                                        onChange = { e => this.setValues(e,'nombreTipoTraslado') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"text-center\">\r\n                                                    <button className=\"btn btn-primary\"\r\n                                                        onClick={this.guardarTipoTraslado}\r\n                                                    > REGISTRAR </button>\r\n                                                </div>\r\n                                            {/*</form>*/}\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n/*\r\n<ModalBody>\r\n    <div className=\"card \">\r\n        <div className=\"card-header text-center\">\r\n            <h3>Traslado de Indentidad</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n            <form>\r\n                <div>\r\n                    <label for=\"nombreTipoTraslado\"> Nombre Traslado: </label>\r\n                    <input id= \"nombreTipoTraslado\" type=\"text\" value={this.state.tipoTrasladoSeleccionado.nombreTipoTraslado} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'nombreTipoTraslado') }\r\n                    />\r\n                    <label for=\"cantidadCaracteres\"> Caracteres: </label>\r\n                    <input id= \"cantidadCaracteres\" type=\"text\" value={this.state.tipoTrasladoSeleccionado.cantidadCaracteres} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'cantidadCaracteres') }\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={this.save}\r\n                    > REGISTRAR </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ModalBody>\r\n\r\n\r\n{(state, filtredData, instance)=>{\r\n    this.reactTable = state.pageRows.map(\r\n        tipoTraslado => {return tipoTraslado._original});\r\n    return(\r\n        <div>\r\n            {filtredData()}\r\n            <ExportToExcel tpTraslado={this.reactTable}/>\r\n        </div>\r\n    )\r\n}}\r\n\r\n    <div className=\"col-sm\" style={buttonCard}>\r\n        <div className=\"card bg-success text-white\">\r\n            <div className=\"card-header\">Exportar</div>\r\n            <ReactHTMLTableExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"btn card-body text-white text-justify\"\r\n                table=\"table-to-xls\"\r\n                filename=\"filtredData\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"A Traslado Excel.\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n*/","import React, { Component } from 'react';\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>MED ID</th>\r\n                                <th>Codigo</th>\r\n                                <th>Media</th>\r\n                                <th>Url</th>\r\n                                <th>Tipo</th>\r\n                            </tr>                                           \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.medias.map(med =>{\r\n                                return(\r\n                                    <tr key={med.id}>\r\n                                        <td>{med.id}</td>\r\n                                        <td>{med.codigoMedia}</td>\r\n                                        <td>{med.nombreMedia}</td>\r\n                                        <td>{med.urlMedia}</td>  \r\n                                        <td>{med.nombreTipoMedia}</td> \r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","// AUTH: JORGE M\r\n// MEDIA API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/medias/';\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n// LISTAR MEDIAS\r\nexport function get_Media_Lista(){ \r\n    const urlFetch = BaseUrl ;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR MEDIA CODIGO\r\nexport function get_Media(codigoMedia){ \r\n    const urlFetch = BaseUrl + codigoMedia;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR MEDIA URL\r\nexport function get_Media_Url(urlMedia){ \r\n    const urlFetch = BaseUrl + \"url/\" + urlMedia;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//ELIMINAR MEDIA CODIGO\r\nexport function del_Media(codigoMedia){ \r\n    const urlFetch = BaseUrl + codigoMedia;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR MEDIA\r\nexport function post_Media(media){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(media),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//ELIMINAR MEDIA CODIGO\r\nexport function del_Media_File(urlMedia){ \r\n    const urlFetch = BaseUrl + \"file/\" + urlMedia;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR FILE MEDIA\r\nexport function post_Media_File(fileMedia){\r\n    const fd = new FormData();\r\n    fd.append('fileMedia',fileMedia);\r\n    const urlFetch = BaseUrl + 'file';\r\n    return new Promise((resolve, reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: fd\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR FILE MEDIA\r\nexport function put_Media_File(fileMedia){\r\n    const urlFetch = BaseUrl + 'file';\r\n    return new Promise((resolve, reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: fileMedia,\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR Media\r\nexport function put_Media(Media){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(Media),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}","import React, { Component} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\n\r\nimport { Modal , ModalHeader, ModalBody, Alert } from 'reactstrap';\r\n\r\nimport data from '../../../db_data';\r\nimport ExportToExcel from \"../../Export/excel/media\";\r\nimport \"./Media.css\";\r\n\r\nimport { get_Media, get_Media_Lista , post_Media , post_Media_File ,put_Media , del_Media, del_Media_File } from '../../Data/MediaData';\r\nimport { get_Tipo_Media_Nombre } from '../../Data/tiposData';\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nexport default class Media extends Component {\r\n\r\n    BaseUrl = data + '/api/medias';\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            media:{},\r\n\r\n            nombreFile:\"\",\r\n            file:null,\r\n            \r\n            medias:[],\r\n            filtered:[],\r\n            mediasExcel:[],\r\n            message : {\r\n                text:'',\r\n                alert: ''\r\n            },\r\n            messageActivo:false,\r\n\r\n            codigoMedia:\"\",\r\n            nombreMedia:\"\",\r\n            codigoTipoMedia:\"\",\r\n            urlMedia:\"\",\r\n\r\n\r\n\r\n            \r\n            mediaGuardar : {\r\n                codigoMedia : \"\",\r\n                nombreMedia : \"\",\r\n                altMedia : \"\",\r\n                urlMedia : \"\",\r\n                codigoTipoMedia : \"\",\r\n                codigoUsuario : \"\"\r\n            },\r\n\r\n            \r\n            tipoAccion:\"post\",\r\n            modalOpen: false,\r\n            tituloModal:\"\",\r\n\r\n            modalConfirmarOpen: false,\r\n            tipoEliminar : \"\",\r\n            codigoMediaEliminar : \"\",\r\n        }\r\n    }\r\n\r\n    toogleModalConfirmar = () => {\r\n        this.setState({ modalConfirmarOpen : ! this.state.modalConfirmarOpen });\r\n    }\r\n\r\n    mostrarModal = (codigoMedia) => {\r\n        this.setState({ codigoMediaEliminar : codigoMedia });\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    borrarConfirmado = () => {\r\n        const { codigoMediaEliminar } = this.state;\r\n        this.eliminarMedia(codigoMediaEliminar);\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    mostrarAlerta = (tiempo) => {\r\n        setTimeout(()=>{\r\n            this.setState({ message : { text : '' , alert : ''} });            \r\n        },tiempo);\r\n    }\r\n\r\n    onFilteredChangeCustom = (value, accessor) => {\r\n        let filtered = this.state.filtered;\r\n        let insertNewFilter = 1;\r\n    \r\n        if (filtered.length) {\r\n          filtered.forEach((filter, i) => {\r\n            if (filter[\"id\"] === accessor) {\r\n              if (value === \"\" || !value.length) filtered.splice(i, 1);\r\n              else filter[\"value\"] = value;\r\n              insertNewFilter = 0;\r\n            }\r\n          });\r\n        }\r\n    \r\n        if (insertNewFilter) {\r\n          filtered.push({ id: accessor, value: value });\r\n        }\r\n    \r\n        this.setState({ filtered: filtered });\r\n      };\r\n    \r\n\r\n    listarMedia(codigoMedia){\r\n        if(codigoMedia !== \"\" && codigoMedia !== null){\r\n            get_Media(codigoMedia).then(res => {\r\n                this.setState({ medias : res })\r\n            });\r\n        }else{\r\n            get_Media_Lista().then(res => {\r\n                this.setState({ medias : res})\r\n            });\r\n        }\r\n    }\r\n\r\n    cambiarAlerta(message){\r\n        this.setState({ message:message });\r\n        this.mostrarAlerta(3000);  \r\n    }\r\n\r\n    setMediaGuardar(){\r\n\r\n    }\r\n\r\n    buscarTipoMediaNombre = (nombreBusqueda) =>{\r\n\r\n        get_Tipo_Media_Nombre(nombreBusqueda).then((result)=>{\r\n            let mediaGuardarTmp = JSON.parse(JSON.stringify(this.state.mediaGuardar));\r\n            mediaGuardarTmp.codigoTipoMedia = result[0].codigoTipoMedia           \r\n            this.setState({  mediaGuardar:mediaGuardarTmp});\r\n        });\r\n\r\n    }\r\n    guadarFile = (file) => {\r\n        post_Media_File(file).then((result)=>{\r\n            let mediaGuardarTmp = JSON.parse(JSON.stringify(this.state.mediaGuardar));\r\n            mediaGuardarTmp.urlMedia = \"/img/\" + result.filename;           \r\n            this.setState({  mediaGuardar : mediaGuardarTmp});\r\n        });\r\n    }\r\n    \r\n    crearMediaObjecto = () =>{\r\n        const { file , nombreMedia , codigoMedia } = this.state;\r\n        const codigoUsuario  = localStorage.getItem('codigoUsuario');\r\n        \r\n        const nombreBusqueda = file.type.replace(\"/\",\"-\");\r\n        this.buscarTipoMediaNombre(nombreBusqueda);\r\n        this.guadarFile(file);\r\n\r\n        let mediaGuardarTmp = JSON.parse(JSON.stringify(this.state.mediaGuardar));\r\n        mediaGuardarTmp.codigoMedia = codigoMedia;\r\n        mediaGuardarTmp.nombreMedia = nombreMedia;\r\n        mediaGuardarTmp.altMedia = nombreMedia;\r\n        mediaGuardarTmp.codigoUsuario = codigoUsuario;\r\n            \r\n        this.setState({  mediaGuardar:mediaGuardarTmp });\r\n    }\r\n\r\n    guardarMedia = () =>{\r\n        const { file , nombreMedia , codigoMedia , codigoTipoMedia } = this.state;\r\n\r\n        const codigoUsuario  = localStorage.getItem('codigoUsuario');\r\n\r\n        const mediaGuardar = {\r\n            codigoMedia : codigoMedia,\r\n            nombreMedia : nombreMedia,\r\n            altMedia : nombreMedia,\r\n            urlMedia : \"/img/\" + file.name,\r\n            codigoTipoMedia : codigoTipoMedia,\r\n            codigoUsuario : codigoUsuario\r\n        };\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };\r\n        switch (this.state.tipoAccion) {\r\n            case \"post\":\r\n                post_Media(mediaGuardar).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se guardo correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            case \"put\":\r\n                put_Media(mediaGuardar).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se modifico correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        post_Media_File(file).then((result)=>{\r\n        });\r\n\r\n        this.cambiarAlerta(message);\r\n\r\n    }\r\n\r\n    eliminarMedia(codigoMedia){\r\n        const message = {\r\n            text:\"Algo salio mal vuelve a intertarlo\",\r\n            alert:\"danger\"  \r\n        };\r\n        if(codigoMedia !== \"\" && codigoMedia !== null){\r\n            get_Media(codigoMedia).then(res=>{\r\n                del_Media_File(res[0].urlMedia.replace(\"/img/\",\"\")).then(res => {\r\n                });\r\n            });\r\n\r\n            del_Media(codigoMedia).then(res => {\r\n                message.alert = \"success\";\r\n                message.text = \"Se elimino correctamente\";\r\n                this.listarMedia(\"\");\r\n            });\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    setValues = (e , field) => {       \r\n        this.setState({ [field]: e.target.value });\r\n    }\r\n\r\n    setFileMedia = e => {\r\n        let file = e.target.files[0];        \r\n        const nombreBusqueda = file.type.replace(\"/\",\"-\");\r\n        get_Tipo_Media_Nombre(nombreBusqueda).then((result)=>{\r\n            this.setState({\r\n                file : file,\r\n                codigoTipoMedia : result[0].codigoTipoMedia,\r\n                nombreFile : file.name\r\n            });\r\n            \r\n        });\r\n    }\r\n\r\n    verificarAccion(codigoMedia,tituloModal){\r\n        if(codigoMedia !== null && codigoMedia !== \"\"){\r\n            get_Media(codigoMedia).then(res =>{\r\n                if(res[0]){    \r\n                    this.setState({\r\n                        media:res[0],\r\n                        tipoAccion:\"put\",        \r\n                        tituloModal: tituloModal\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            this.setState({ \r\n                media:{},\r\n                tipoAccion:\"post\",\r\n                tituloModal: tituloModal\r\n            });\r\n        }\r\n        this.toogleModal();\r\n    }\r\n    toogleModal(){   \r\n        this.setState({\r\n            modalOpen : ! this.state.modalOpen,\r\n        });\r\n        if(!this.state.modalOpen){\r\n            this.listarMedia(\"\");\r\n        }        \r\n    }\r\n\r\n    exportarToExcel(){\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.listarMedia(\"\");\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"ID\",\r\n                accessor: \"id\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"CODIGO\",\r\n                accessor: \"codigoMedia\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"Imagen\",\r\n                Cell: props =>{\r\n                    return(\r\n                        <div className=\"media_file\">\r\n                            <img src={props.original.urlMedia} alt={props.original.altMedia} className=\"card-img-top\"/>\r\n                        </div>\r\n                    )\r\n                },\r\n                sortable: false,\r\n                filterable: false,\r\n                width:100,\r\n                minWidth:100,\r\n                maxWidth:100\r\n            },\r\n            {\r\n                Header: \"MEDIA\",\r\n                accessor: \"nombreMedia\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"ALT\",\r\n                accessor: \"altMedia\",\r\n                sortable: false,\r\n                filterable: false,\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"URL\",\r\n                accessor: \"urlMedia\",\r\n                sortable: false,\r\n                filterable: false,\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"TIPO\",\r\n                accessor: \"nombreTipoMedia\",\r\n                sortable: false,\r\n                filterable: false,\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"USUARIO\",\r\n                accessor: \"nombreUsuario\",\r\n                sortable: false,\r\n                filterable: false,\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header:\"ACCIONES\",\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <button className=\"btn btn-danger\"\r\n                                        onClick={() =>{\r\n                                            this.mostrarModal(props.original.codigoMedia);\r\n                                        }}\r\n                                >Borrar</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                },                \r\n                sortable: false,\r\n                filterable: false\r\n            }\r\n        ]\r\n        let buttonCard = {\r\n            cursor: 'pointer'\r\n        };\r\n        return (\r\n            <Menu>\r\n            <div className=\"container p-4\">\r\n                {/*<MaterialTable></MaterialTable>*/}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-11 mx-auto\">\r\n                        <div className=\"card \">\r\n                            <div className=\"card-header\">\r\n                                <h3>Medias en Existencia</h3>\r\n                            </div>\r\n                            <div className=\"m-2\">\r\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>\r\n                                { this.state.message.text} </Alert> ): '' }\r\n                            </div>                            \r\n                            <div className=\"row m-2\">\r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card text-white bg-info\"\r\n                                        onClick={()=>{\r\n                                            this.verificarAccion(\"\",\"Registrar\")\r\n                                            //this.ver();\r\n                                        }}>\r\n                                        <div className=\"card-header\">Registrar</div>\r\n                                        <button className=\"btn card-body text-white text-justify\">Archivo Media.</button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card bg-success text-white\">\r\n                                        <div className=\"card-header\">Exportar</div>\r\n                                        <ReactHTMLTableExcel\r\n                                            id=\"test-table-xls-button\"\r\n                                            className=\"btn card-body text-white text-justify\"\r\n                                            table=\"table-to-xls\"\r\n                                            filename=\"mediaExcel\"\r\n                                            sheet=\"hoja 1\"\r\n                                            buttonText=\"A Documento Excel.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ReactTable\r\n                                    columns = {columns}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.medias}\r\n                                    filterable\r\n                                    filtered = {this.state.filtered}\r\n                                    onFilteredChange = {(filtered, column, value) => {\r\n                                        this.onFilteredChangeCustom(value, column.id || column.accessor);\r\n                                      }}\r\n                                      defaultFilterMethod={(filter, row, column) => {\r\n                                        const id = filter.pivotId || filter.id;\r\n                                        if (typeof filter.value === \"object\") {\r\n                                          return row[id] !== undefined\r\n                                            ? filter.value.indexOf(row[id]) > -1\r\n                                            : true;\r\n                                        } else {\r\n                                          return row[id] !== undefined\r\n                                            //? String(row[id]).indexOf(filter.value) > -1\r\n                                            ? String(row[id].toLowerCase()).indexOf(filter.value.toLowerCase()) > -1                                        \r\n                                            : true;\r\n                                        }\r\n                                      }}\r\n                                    defaultPageSize={10}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                >\r\n                                {(state, filtredData, instance)=>{\r\n                                    this.reactTable = state.pageRows.map(\r\n                                        medias => { return medias._original });\r\n                                    return(\r\n                                        <div>\r\n                                            {filtredData()}\r\n                                            <ExportToExcel medias = { this.reactTable }/>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                </ReactTable>\r\n                            </div>\r\n                            <Modal \r\n                                isOpen={this.state.modalOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModal.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <div className=\"card \">\r\n                                        <div className=\"card-header text-center\">\r\n                                            <h3>Media</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body \">\r\n                                            {/*<form>*/}\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"nombreMedia\"> Nombre Archivo: </label>\r\n                                                    <input className=\"form-control\" id= \"nombreMedia\" type=\"text\" placeholder=\"Ejemplo: Foto Producto\"\r\n                                                        value = {this.state.media.nombreMedia}\r\n                                                        onChange = { e => this.setValues(e,'nombreMedia') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"mediaProducto\"> Archivo: </label>\r\n                                                    <div class=\"custom-file\">\r\n                                                        <input type=\"file\" class=\"custom-file-input\" id=\"customFileLang\" lang=\"es\"\r\n                                                        \r\n                                                            onChange = { e => this.setFileMedia(e) }\r\n                                                        />\r\n                                                        <label data-browse=\"Buscar\" class=\"custom-file-label\" for=\"customFileLang\">{ this.state.nombreFile}</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"text-center\">\r\n                                                    <button className=\"btn btn-primary\"\r\n                                                        onClick={this.guardarMedia}\r\n                                                    > REGISTRAR </button>\r\n                                                </div>\r\n                                            {/*</form>*/}\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n\r\n                            <Modal \r\n                                    isOpen={this.state.modalConfirmarOpen}\r\n                                    centered={true}\r\n                                    size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModalConfirmar.bind(this)}>Alerta</ModalHeader>    \r\n                                <ModalBody>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row justify-content-center text-center\">\r\n                                            <div className=\"col-md-12 mb-4\">\r\n                                                <span>Se eliminar√° el Registro, ¬øDesea Continuar? </span>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <button className=\"btn btn-danger\"\r\n                                                    onClick={this.borrarConfirmado}\r\n                                                >Eliminar</button>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <button className=\"btn btn-info\"\r\n                                                    onClick = {this.toogleModalConfirmar.bind(this)}\r\n                                                >Cancelar</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n/*\r\n\r\n    <div className=\"col-md-5\">\r\n        <button className=\"btn btn-danger\"\r\n            onClick={() =>{\r\n                this.eliminarMedia(props.original.codigoMedia);\r\n            }}\r\n        >Borrar</button>\r\n    </div>\r\n    <div className=\"col-md-5 ml-auto\">\r\n        <button className=\"btn btn-warning\"\r\n        onClick={\r\n            e => this.verificarAccion(props.original.codigoMedia,\"Modificar\")                                           \r\n        }>Editar</button>\r\n    </div>\r\n\r\n<ModalBody>\r\n    <div className=\"card \">\r\n        <div className=\"card-header text-center\">\r\n            <h3>Documento de Indentidad</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n            <form>\r\n                <div>\r\n                    <label for=\"nombreTipoDocumento\"> Nombre Documento: </label>\r\n                    <input id= \"nombreTipoDocumento\" type=\"text\" value={this.state.tipoDocumentoSeleccionado.nombreTipoDocumento} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'nombreTipoDocumento') }\r\n                    />\r\n                    <label for=\"cantidadCaracteres\"> Caracteres: </label>\r\n                    <input id= \"cantidadCaracteres\" type=\"text\" value={this.state.tipoDocumentoSeleccionado.cantidadCaracteres} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'cantidadCaracteres') }\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={this.save}\r\n                    > REGISTRAR </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ModalBody>\r\n\r\n\r\n{(state, filtredData, instance)=>{\r\n    this.reactTable = state.pageRows.map(\r\n        tipoDocumento => {return tipoDocumento._original});\r\n    return(\r\n        <div>\r\n            {filtredData()}\r\n            <ExportToExcel tpDocumento={this.reactTable}/>\r\n        </div>\r\n    )\r\n}}\r\n\r\n    <div className=\"col-sm\" style={buttonCard}>\r\n        <div className=\"card bg-success text-white\">\r\n            <div className=\"card-header\">Exportar</div>\r\n            <ReactHTMLTableExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"btn card-body text-white text-justify\"\r\n                table=\"table-to-xls\"\r\n                filename=\"filtredData\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"A Documento Excel.\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n*/","import React, { Component } from 'react';\r\n\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>TPD ID</th>\r\n                                <th>Codigo</th>\r\n                                <th>Producto</th>\r\n                                <th>Tipo</th>\r\n                                <th>Presentaci√≥n</th>\r\n                                <th>Ubicaci√≥n</th> \r\n                                <th>Existencias</th>\r\n                                <th>Minimo</th> \r\n                                <th>estado</th> \r\n                                <th>Caducidad</th> \r\n                            </tr>                                           \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.productos.map(pro =>{\r\n                                return(\r\n                                    <tr key={pro.id}>\r\n                                        <td>{pro.id}</td>\r\n                                        <td>{pro.codigoProducto}</td>\r\n                                        <td>{pro.descripcionProducto}</td>\r\n                                        <td>{pro.nombreTipoProducto}</td>  \r\n                                        <td>{pro.descripcionPresentacion}</td>    \r\n                                        <td>{pro.nombreLocal}</td>          \r\n                                        <td>{pro.stockExistente}</td>    \r\n                                        <td>{pro.stockMinimo}</td>    \r\n                                        <td>{pro.estadoProducto}</td>    \r\n                                        <td>{pro.fechaVencimiento}</td>   \r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","// AUTH: JORGE M\r\n// TIPOS API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/productos/';\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n// LISTAR PRODUCTO\r\nexport function get_Producto_Lista(){ \r\n    const urlFetch = BaseUrl ;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// LISTAR PRODUCTO POR LOCAL\r\nexport function get_Producto_Lista_Local(codigoLocal){\r\n    var urlFetch = BaseUrl + \"local/\";\r\n    if(codigoLocal !== \"\" && codigoLocal !== null){\r\n        urlFetch = urlFetch + codigoLocal;\r\n    }\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR PRODUCTO CODIGO\r\nexport function get_Producto(codigoProducto){ \r\n    const urlFetch = BaseUrl + codigoProducto;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR PRODUCTO CODIGO\r\nexport function get_Producto_Venta(codigoProducto){ \r\n    const urlFetch = BaseUrl + \"precio/venta/\" +codigoProducto;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR PRODUCTO DE TRASLADO\r\nexport function get_Producto_Traslado(codigoTraslado){ \r\n    const urlFetch = BaseUrl + \"traslado/\" + codigoTraslado;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR PRODUCTO PRECIO DE VENTA POR CODIGO DE LOCAL\r\nexport function post_Cantidad_Productos(Busqueda){ \r\n    const urlFetch = BaseUrl + 'cantidad/';\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(Busqueda),\r\n            headers: new Headers({ 'Content-type':'application/json' })\r\n        })\r\n        .then(response=>response.json())\r\n        .then(responseJson=>resolve(responseJson))\r\n        .catch(error=>reject(error));\r\n    });\r\n}\r\n\r\n// MOSTRAR PRODUCTO PRECIO DE VENTA POR CODIGO DE LOCAL\r\nexport function post_Producto_Local_Inventario_Paginado(Busqueda){\r\n    const urlFetch = BaseUrl + 'inventario/paginado/';\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(Busqueda),\r\n            headers: new Headers({ 'Content-type':'application/json' })\r\n        })\r\n        .then(response=>response.json())\r\n        .then(responseJson=>resolve(responseJson))\r\n        .catch(error=>reject(error));\r\n    });\r\n}\r\n\r\n// MOSTRAR PRODUCTO PRECIO DE VENTA POR CODIGO DE LOCAL\r\nexport function get_Producto_Local_Venta_Lista(codigoLocal){ \r\n    const urlFetch = BaseUrl + 'venta/lista/' +codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR PRODUCTO PRECIO DE COMPRA POR CODIGO DE LOCAL\r\nexport function get_Producto_Precio_Compra_Local_Lista(codigoLocal){ \r\n    const urlFetch = BaseUrl + 'precio/compra/' +codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//ELIMINAR PRODUCTO CODIGO\r\nexport function del_Producto(codigoProducto){ \r\n    const urlFetch = BaseUrl + codigoProducto;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR PRODUCTO\r\nexport function post_Producto_Ingreso(producto){\r\n    const urlFetch = BaseUrl + \"ingreso\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(producto),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR PRODUCTO\r\nexport function post_Producto(producto){\r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(producto),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR PRODUCTO FILE MEDIA\r\nexport function post_Producto_Media(productoMedia){ \r\n    const urlFetch = BaseUrl + \"/media\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: productoMedia,\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR PRODUCTO\r\nexport function put_Producto(producto){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(producto),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}","// AUTH: JORGE M\r\n// Presentacion API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/presentaciones/';\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n// LISTAR PresentacionS\r\nexport function get_Presentacion_Lista(){ \r\n    const urlFetch = BaseUrl ;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR Presentacion CODIGO\r\nexport function get_Presentacion(codigoPresentacion){ \r\n    const urlFetch = BaseUrl + codigoPresentacion;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//ELIMINAR Presentacion CODIGO\r\nexport function del_Presentacion(codigoPresentacion){ \r\n    const urlFetch = BaseUrl + codigoPresentacion;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR Presentacion\r\nexport function post_Presentacion(Presentacion){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(Presentacion),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR Presentacion\r\nexport function put_Presentacion(Presentacion){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(Presentacion),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}","import React from 'react'\r\nimport \"./Producto.css\";\r\n\r\nconst ProductoCard = ({productos , cargando , verificarAccion }) => {\r\n    if(cargando){\r\n        return <h2>Cargando...</h2>\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            <div className=\"row justify-content-center\">\r\n                {productos.map( (producto,index) => {\r\n                    return(    \r\n                        <div className=\"col-9 col-sm-6 col-md-3 productoItem\">\r\n                            <li key={index}>\r\n                                <div className=\"card cardProducto\">\r\n                                    <div className=\"card-header\">\r\n                                        <div className=\"nombreProducto\">\r\n                                            {producto.descripcionProducto}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body infoProducto\">\r\n                                        <div className=\"cardImagen\">\r\n                                            <img src={producto.urlMedia} alt={producto.descripcionProducto} className=\"imagenProducto img-fluid\"/>\r\n                                        </div>\r\n                                        <div>Marca: {producto.detalleProducto}</div>\r\n                                        <div hidden={true}>Vence: {producto.fechaVencimiento.substring(0,10)}</div>   \r\n                                        <div>{producto.nombreTipoProducto}</div>\r\n                                        <div>{producto.descripcionPresentacion}</div>  \r\n                                        <div className=\"form-group mt-2\">\r\n                                            <button type=\"button\" \r\n                                                class=\"btn btn-outline-success\"\r\n                                                onClick={() => verificarAccion(producto.codigoProducto)}\r\n                                            >Datos</button>\r\n                                        </div>                                             \r\n                                    </div>\r\n                                </div>      \r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ProductoCard\r\n/*\r\n    <div>Stock: {producto.stockExistente} Min: {producto.stockMinimo}</div> \r\n    <div>Precio: S/ {producto.valorPrecio.toFixed(2)}</div>\r\n*/","import React from 'react';\r\nimport '../Styles/Pagination.css';\r\n\r\nvar numeroRender = 0; // El numero que se dibujara la paginacion\r\n\r\nconst Paginacion = ( { totalElementos , elementosPage , cambiarPagina , paginaActual}) => {\r\n\r\n    const cantidadItems = 9; // Cantidad de items (botones) en la paginacion\r\n\r\n    const pageNumbers = [];\r\n    var itemsPage = [];\r\n    var classItem = \"\";\r\n    var mostrarUnaVes = true;\r\n    var cantidadPages = Math.trunc( totalElementos / elementosPage );\r\n    var paginaActualPage = paginaActual;\r\n\r\n    var cantidadRender = 0; // Cantidad de veces que se dibujara la paginacion\r\n\r\n    if((totalElementos % elementosPage) !== 0 ){ // Si Cantidad Imparar\r\n        cantidadPages = cantidadPages + 1;// Se aumenta uno para los Productos sobrantes que no se muestran por ser (Impar)\r\n        cantidadRender = Math.trunc( cantidadPages / cantidadItems ); // La cantidad de veces que se puede dibujar la paginacion\r\n        if((cantidadRender % cantidadItems) !== 0){ // Si la cantidad de veces a dibujar es impar\r\n            cantidadRender = cantidadRender + 1;\r\n        }\r\n\r\n        if(cantidadRender === 0){\r\n            cantidadRender = 1;\r\n        }\r\n    }\r\n\r\n    for(var i = 1; i <= cantidadPages; i++){\r\n        pageNumbers.push(i); // LLenar la paginacion con todas las paginas\r\n    }\r\n\r\n    function dibujarPaginacion () { // La numero de renderizacion de la paginacion\r\n        itemsPage = [];\r\n        for(var i = (cantidadItems * numeroRender) + 1; i <= (cantidadItems * (cantidadPages + 1)); i++){\r\n            if(i <= cantidadPages){\r\n                itemsPage.push(i);// Llenar la paginacion a dibujar con paginas\r\n            }\r\n        }\r\n    }\r\n    \r\n    dibujarPaginacion();\r\n\r\n    function paginaPrimera () {\r\n        cambiarPagina(1);\r\n        numeroRender = 0;\r\n        dibujarPaginacion();\r\n    }\r\n\r\n    function paginaUltimo () {\r\n        cambiarPagina(cantidadPages);\r\n        numeroRender = cantidadRender - 1;\r\n        dibujarPaginacion();\r\n    }\r\n\r\n    function paginaSiguiente () {\r\n        if(paginaActualPage < cantidadPages){ //Si la pagina actual es menor al total de paginas\r\n            cambiarPagina(paginaActualPage + 1);//Aumentara en uno\r\n        }\r\n\r\n        if(paginaActualPage === ( cantidadItems * ( numeroRender + 1 ))){ // Si esta en la ultima pagina de la paginacion\r\n            if(cantidadRender > numeroRender){// Si no estamos en el ultimo numeroRender de paginacion\r\n                numeroRender = numeroRender + 1;\r\n                dibujarPaginacion();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function paginaAnterior () {\r\n        if(paginaActualPage > 1){//Si la pagina actual es mayor que uno\r\n            cambiarPagina(paginaActualPage - 1);// Restara en uno \r\n        }\r\n\r\n        if(paginaActual === ((cantidadItems * numeroRender) + 1)){ // Si esta en el primera pagina de la paginacion\r\n            if(numeroRender > 0){ // Si no estamos en la primer numeroRender de paginacion\r\n                numeroRender = numeroRender - 1;\r\n                dibujarPaginacion();\r\n            }\r\n        }\r\n    }\r\n\r\n    function mostrarContinuar (mostrar) {\r\n        if(mostrar){\r\n            return(\r\n            <li className=\"page-item\">\r\n                <a className=\"page-link\" href=\"# \">...</a>\r\n            </li>)\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <nav>\r\n                <ul className=\"pagination justify-content-center\">\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" href=\"# \" aria-label=\"Previous\"\r\n                            onClick = { () => paginaPrimera() }\r\n                        >\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" href=\"# \" aria-label=\"Previous\"\r\n                            onClick = { () => paginaAnterior() }\r\n                        >\r\n                            <span aria-hidden=\"true\">&lsaquo;</span>\r\n                        </a>\r\n                    </li>\r\n                    {itemsPage.map(numero => {\r\n                        if(numero === paginaActualPage){\r\n                            classItem = \"page-item active\";\r\n                        }else{\r\n                            classItem = \"page-item\";\r\n                        }\r\n                        if(numero <= (cantidadItems * (numeroRender + 1))){\r\n                            return (\r\n                                <li key={numero} className={classItem}>\r\n                                    <a href=\"# \" className=\"page-link\"\r\n                                        onClick = { () => cambiarPagina(numero) }\r\n                                    >{numero}</a>\r\n                                </li>\r\n                            )\r\n                        }else{\r\n                            if(mostrarUnaVes){\r\n                                mostrarUnaVes = false;\r\n                                return( mostrarContinuar(true) )\r\n                            }else{\r\n                                return null;\r\n                            }\r\n                        }\r\n                    })}\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" href=\"# \" aria-label=\"Next\"\r\n                            onClick = { () => paginaSiguiente() }\r\n                        >\r\n                            <span aria-hidden=\"true\">&rsaquo;</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" href=\"# \" aria-label=\"Next\"\r\n                            onClick = { () => paginaUltimo() }\r\n                        >\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginacion\r\n","import React, { Component} from 'react';\r\n\r\nimport IconoAdd from '@material-ui/icons/AddToQueue';\r\nimport IconoExcel from '@material-ui/icons/ExplicitOutlined';\r\nimport IconoPdf from '@material-ui/icons/PictureAsPdf';\r\n\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\nimport ExportToExcel from \"../../Export/excel/producto\";\r\n\r\nimport { Modal , ModalHeader, ModalBody, Alert } from 'reactstrap';\r\n\r\nimport { post_Producto, put_Producto, del_Producto , get_Producto, post_Cantidad_Productos, post_Producto_Local_Inventario_Paginado} from '../../Data/productoData';\r\nimport \"./Producto.css\";\r\n\r\nimport { post_Media, post_Media_File , get_Media_Lista} from '../../Data/MediaData';\r\nimport { get_Tipo_Media_Nombre , get_Tipo_Producto_Lista} from '../../Data/tiposData';\r\nimport { get_Presentacion_Lista } from '../../Data/PresentacionData';\r\nimport { get_Local_Lista } from '../../Data/LocalData';\r\n\r\nimport { get_Rol_Usuario } from '../../Data/RolUsuarioData';\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nimport ProductoCard from './ProductoCard';\r\nimport Paginacion from '../../Pages/Pagination';\r\n\r\nconst estadoInicial = {\r\n\r\n    message : {\r\n        text:'',\r\n        alert: ''\r\n    },\r\n    messageActivo:false,\r\n\r\n    producto:{\r\n        codigoProducto:\"\",\r\n        descripcionProducto:\"\",\r\n        detalleProducto:\"\",\r\n        codigoTipoProducto:\"\",\r\n        codigoPresentacion:\"\",\r\n        codigoMedia:\"MED-00000000004\",\r\n        codigoLocal:\"\",\r\n        valorPrecio:0,\r\n        stockExistente:0,\r\n        stockMinimo:0,\r\n        estadoProducto:1,\r\n        fechaVencimiento:\"\",\r\n        nombreTipoProducto:\"\",\r\n        descripcionPresentacion:\"\",\r\n        nombreLocal:\"\",\r\n    },\r\n    \r\n    codigoProducto: \"\",\r\n    fechaVencimiento:\"\",\r\n\r\n    productos : [],\r\n    sugerenciasProducto : [],\r\n\r\n    media:{\r\n        codigoMedia:\"\",\r\n        nombreMedia:\"\",\r\n        altMedia:\"\",\r\n        urlMedia:\"\", \r\n        codigoTipoMedia:\"\",\r\n        codigoUsuario:\"\",\r\n    },\r\n    medias:[],\r\n\r\n    tipoProductos:[],\r\n    presentaciones:[],\r\n    locales:[],\r\n\r\n    tipoAccion:\"post\",\r\n    codigoMedia:\"\",\r\n\r\n    modalOpen: false,\r\n    modalFormMediaOpen:false,\r\n    modalListaMediaOpen:false,\r\n\r\n    nombreFile:\"\",\r\n    file:null,\r\n\r\n    fileTemporal:null,\r\n \r\n    tituloModal:\"\",\r\n\r\n    tipoAdmi:false,\r\n\r\n    codigoLocal : localStorage.getItem(\"codigoLocal\"),\r\n\r\n    modalConfirmarOpen: false,\r\n    tipoEliminar : \"\",\r\n    codigoProductoEliminar : \"\",\r\n    \r\n\r\n    \r\n    nombreProductoBuscar : \"\",\r\n    cargando : true,\r\n    currentPage : 1,\r\n    productosPage : 16,\r\n    cantidadPages : 0,\r\n\r\n    cantidadProductos:0,\r\n\r\n    heightWindows : \"\",             \r\n};\r\n\r\nexport default class Producto extends Component {\r\n   \r\n    constructor (props){\r\n        super(props);\r\n        this.state = estadoInicial;\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.cambiarPagina = this.cambiarPagina.bind(this);\r\n    }\r\n\r\n    cambiarPagina = (pagina) => {\r\n        this.setState({currentPage:pagina},()=>this.listarProducto());//Cambia a la pagina\r\n    }\r\n\r\n    toogleModalConfirmar = () => {\r\n        this.setState({ modalConfirmarOpen : ! this.state.modalConfirmarOpen });\r\n    }\r\n\r\n    mostrarModal = (codigoProducto) => {\r\n        this.setState({ codigoProductoEliminar : codigoProducto });\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    borrarConfirmado = () => {\r\n        const { codigoProductoEliminar } = this.state;\r\n        this.eliminarProducto(codigoProductoEliminar);\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    setProducto = (e , field) => {\r\n        const { producto } = this.state;\r\n        producto[field] = e.target.value;\r\n        this.setState({ producto });\r\n    }\r\n\r\n    setMedia = (e , field) => {\r\n        const { media } = this.state;\r\n        media[field] = e.target.value;       \r\n        this.setState({ media });\r\n    }\r\n    \r\n    setFileMedia = e => {\r\n        if(e.target.files[0]){\r\n            let file = e.target.files[0];     \r\n            const nombreBusqueda = file.type.replace(\"/\",\"-\");\r\n            const { media } = this.state;\r\n            get_Tipo_Media_Nombre(nombreBusqueda).then((result)=>{\r\n                media[\"codigoTipoMedia\"] = result[0].codigoTipoMedia;\r\n                this.setState({\r\n                    file : file,\r\n                    fileTemporal : URL.createObjectURL(file),\r\n                    media: media,\r\n                    nombreFile : file.name\r\n                });\r\n            });\r\n        }        \r\n    }\r\n\r\n    onChange(e){\r\n        const { producto } = this.state;\r\n        producto[e.target.id] = e.target.value;\r\n        this.setState({ producto });\r\n    }\r\n\r\n    toogleModal(){\r\n        this.setState({\r\n            modalOpen : ! this.state.modalOpen,\r\n        });    \r\n    }\r\n\r\n    mostrarAlerta = (tiempo) => {\r\n        setTimeout(()=>{\r\n            this.setState({ message : { text : '' , alert : ''} });            \r\n        },tiempo);\r\n    }\r\n\r\n    guardarMedia = () =>{\r\n        const codigoUsuario  = localStorage.getItem('codigoUsuario');\r\n        if(this.state.file){\r\n            const { file , media } = this.state;\r\n            media[\"nombreMedia\"] = file.name;\r\n            media[\"altMedia\"] = file.name;\r\n            media[\"urlMedia\"] = \"/img/\" + file.name;\r\n            media[\"codigoUsuario\"] = codigoUsuario;\r\n            this.setState({ media });\r\n\r\n            post_Media(media).then((result)=>{\r\n                this.setState({ codigoMedia : result[0][0].codigoMedia });\r\n                post_Media_File(file).then((result)=>{\r\n                    this.guardarProducto(true);\r\n                });\r\n            });           \r\n        }else{\r\n            if(this.state.producto.codigoProducto !== null && this.state.producto.codigoProducto !== \"\"){\r\n                this.guardarProducto(false);\r\n            }else{\r\n                alert(\"Ingrese una Imagen\");\r\n            }\r\n        }\r\n    }\r\n\r\n    ObtenerRolesUsuario = (codigoUsuario) => {\r\n        get_Rol_Usuario(codigoUsuario).then( res => {\r\n            if(res[0].nombreRol === \"ROL-SUPERADMIN\" || res[0].nombreRol ===\"ROL-ADMIN\"){\r\n                this.setState({\r\n                    tipoAdmi: !this.state.tipoAdmi,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    listarProducto = () => {\r\n        var inputBusqueda = document.getElementById(\"busquedaProducto\");\r\n        \r\n        var localBusqueda = this.state.codigoLocal;\r\n        var textoBusqueda=\"\";\r\n        if(inputBusqueda.value.length>0){textoBusqueda=inputBusqueda.value}\r\n        \r\n        const Busqueda={codigoLocal:localBusqueda,textoBusqueda:textoBusqueda,inicio:(this.state.productosPage*(this.state.currentPage-1)),resultados:this.state.productosPage};\r\n        post_Producto_Local_Inventario_Paginado(Busqueda).then(productos => {\r\n            post_Cantidad_Productos(Busqueda).then(cantidad => {\r\n                this.setState({cantidadProductos:cantidad[0].cantidadProductos,productos:productos,sugerenciasProducto:productos,cargando:false});\r\n                //document.getElementById(\"busquedaProducto\").value=\"\";\r\n            });\r\n        });\r\n    }\r\n\r\n    listarTipoProducto(){\r\n        get_Tipo_Producto_Lista().then((res)=>{\r\n            this.setState({ tipoProductos : res });\r\n        });\r\n    }\r\n\r\n    listarPresentacionProducto(){\r\n        get_Presentacion_Lista().then((res) =>{\r\n            this.setState({ presentaciones : res });\r\n        });\r\n    }\r\n\r\n    listarMedia(){\r\n        get_Media_Lista().then((res) =>{\r\n            this.setState({ medias : res });\r\n        });\r\n    }\r\n\r\n    listarLocales(){\r\n        get_Local_Lista().then((res)=>{\r\n            this.setState({ locales : res });\r\n        });\r\n    } \r\n    \r\n    cambiarAlerta(message){\r\n        this.setState({ message:message });\r\n        this.mostrarAlerta(3000);  \r\n    }\r\n\r\n    guardarProductoPrueba = () => {\r\n        if(this.state.producto.descripcionProducto){\r\n            if(this.state.producto.detalleProducto){\r\n                if(this.state.producto.codigoTipoProducto){\r\n                    if(this.state.producto.codigoPresentacion){          \r\n                        this.guardarMedia();\r\n                    }else{ alert(\"Ingrese la Presentaci√≥n\") }\r\n                }else{ alert(\"Ingrese el Tipo\") }\r\n            }else{ alert(\"Ingrese el Detalle\") }\r\n        }else{ alert(\"Ingrese una Descripci√≥n\") }\r\n    }\r\n\r\n    guardarProducto = (ingresoMedia) => {  \r\n        const { producto } = this.state;\r\n\r\n\r\n        if(ingresoMedia){ //Si se ingresara una Media\r\n            producto[\"codigoMedia\"] = this.state.codigoMedia;\r\n        }\r\n\r\n        producto[\"codigoLocal\"] = this.state.codigoLocal;\r\n        producto[\"fechaVencimiento\"] = this.state.fechaVencimiento;\r\n        \r\n        this.setState({ producto });\r\n        const message = {\r\n            text:\"Algo salio mal vuelve a intertarlo\",\r\n            alert:\"danger\"  \r\n        };\r\n\r\n        switch (this.state.tipoAccion) {\r\n            case \"post\":\r\n                post_Producto(producto).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se guardo correctamente\";\r\n                    this.listarProducto();\r\n                    this.cambiarAlerta(message);\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            case \"put\":\r\n                put_Producto(producto).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se modifico correctamente\";                  \r\n                    this.listarProducto();\r\n                    this.cambiarAlerta(message);\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            producto:{},\r\n            media:{},\r\n            codigoMedia:\"\",\r\n            nombreFile:\"\",\r\n            file:null\r\n        });\r\n    } \r\n\r\n    eliminarProducto(codigoProducto){\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };\r\n        if(codigoProducto !== \"\" && codigoProducto !== null){\r\n            del_Producto(codigoProducto).then(res => {\r\n                message.alert = \"danger\";\r\n                message.text = \"Se elimino correctamente\";\r\n                this.listarProducto();         \r\n            });\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    obtenerFechaHoy(){\r\n        var fechaHoy = new Date();\r\n        \r\n        var a√±oDate = fechaHoy.getFullYear();\r\n        var mesDate = fechaHoy.getMonth() + 1;\r\n        var diaDate = fechaHoy.getDate();\r\n\r\n        var fechaVencimiento = a√±oDate + \"-\";\r\n        if(mesDate < 10){\r\n            fechaVencimiento = fechaVencimiento + \"0\" + mesDate; \r\n        }\r\n        fechaVencimiento = fechaVencimiento + \"-\";\r\n        if(diaDate < 10){\r\n            fechaVencimiento = fechaVencimiento + \"0\" + diaDate; \r\n        }else{\r\n            fechaVencimiento = fechaVencimiento + diaDate; \r\n        }\r\n        const { producto } = this.state;\r\n        producto[\"fechaVencimiento\"] = fechaVencimiento;\r\n\r\n        this.setState({\r\n            fechaVencimiento : fechaVencimiento,\r\n            producto: producto\r\n        });            \r\n    }\r\n\r\n    verificarAccion = (codigoProducto) => {\r\n        if(codigoProducto !== null && codigoProducto !== \"\"){\r\n            get_Producto((codigoProducto + \"_\" + this.state.codigoLocal)).then(res =>{\r\n                if(res[0]){\r\n                    res[0].fechaVencimiento = res[0].fechaVencimiento.substring(0,10);\r\n                    this.setState({\r\n                        producto:res[0],\r\n                        codigoProducto:res[0].codigoProducto,\r\n                        fechaVencimiento: res[0].fechaVencimiento.substring(0,10),\r\n                        nombreFile : res[0].urlMedia.replace(\"/img/\",\"\"),\r\n                        fileTemporal : res[0].urlMedia,\r\n                        tipoAccion:\"put\",        \r\n                        tituloModal: \"Modificar Producto\"\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            this.obtenerFechaHoy();\r\n            const productoNuevo = {\r\n                fechaVencimiento: this.state.producto.fechaVencimiento,\r\n                stockExistente:0,\r\n                stockMinimo:0,\r\n                valorPrecio:0,\r\n                nombreTipoProducto:\"Seleccione un Tipo\",\r\n                codigoTipoProducto:\"-\",\r\n                descripcionPresentacion:\"Seleccione la Presentacion\",\r\n                nombreLocal:\"Seleccione el Local\",\r\n            }\r\n\r\n            this.setState({ \r\n                producto:productoNuevo,\r\n                nombreFile:\"\",\r\n                fileTemporal:\"/img/Imagen-Caja-Presentacion.png\",\r\n                codigoProducto:\"\",\r\n                tipoAccion:\"post\",\r\n                tituloModal: \"Registrar Producto\"\r\n            });\r\n        }\r\n        this.toogleModal();\r\n    }\r\n\r\n    resetEstado = () => {\r\n        this.setState(estadoInicial);\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.ObtenerRolesUsuario(localStorage.getItem(\"codigoUsuario\")); // y LISTAR PRODUCTOS LUEGO DE VER QUIEN\r\n        this.listarTipoProducto();\r\n        this.listarPresentacionProducto();\r\n        this.listarMedia();\r\n        this.listarLocales();\r\n        this.listarProducto();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Menu>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">{/* hidden={!this.state.tipoAdmi*/}\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-8 col-sm-8 col-md-9\">\r\n                                        <h3>Productos en Existencia</h3>\r\n                                    </div>\r\n                                    <div className=\"col-4 col-sm-4 col-md-3\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4\">\r\n                                                <button \r\n                                                    className=\"btn btn-info btn-circle\"\r\n                                                    onClick={()=>{this.verificarAccion(\"\")}}\r\n                                                > <IconoAdd /> </button>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"col-4\">\r\n                                                <ReactHTMLTableExcel\r\n                                                    id=\"test-table-xls-button\"\r\n                                                    className=\"btn btn-success btn-circle\"\r\n                                                    table=\"table-to-xls\"\r\n                                                    filename=\"productosExcel\"\r\n                                                    sheet=\"hoja 1\"\r\n                                                    buttonText={<IconoExcel />}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-4\">\r\n                                                <button className=\"btn btn-danger btn-circle\"> <IconoPdf /> </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"m-2 text-center\">\r\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>{ this.state.message.text}</Alert> ) : '' }\r\n                            </div>                            \r\n                            <div className=\"row justify-content-center mx-4\">\r\n                                <div className=\"col-10 col-sm-10 col-md-10 form-group\">\r\n                                    <input className = \"form-control\" type = \"text\"\r\n                                        placeholder = \"Buscar todos los Productos\" id=\"busquedaProducto\"\r\n                                    ></input>\r\n                                </div>\r\n                                <div className=\"col-2 col-sm-2 col-md-2 form-group\">\r\n                                    <button className=\"btn btn-info\" onClick={()=>{this.listarProducto()}}>Buscar</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <Paginacion \r\n                                    totalElementos = {this.state.cantidadProductos} \r\n                                    elementosPage = {this.state.productosPage} \r\n                                    cambiarPagina = {this.cambiarPagina}\r\n                                    paginaActual = {this.state.currentPage}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mr-3\">\r\n                                <ProductoCard productos={this.state.sugerenciasProducto} cargando={this.state.cargando} verificarAccion={this.verificarAccion}/>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <Paginacion \r\n                                    totalElementos = {this.state.cantidadProductos} \r\n                                    elementosPage = {this.state.productosPage} \r\n                                    cambiarPagina = {this.cambiarPagina}\r\n                                    paginaActual = {this.state.currentPage}\r\n                                />\r\n                            </div>\r\n                            <ExportToExcel productos={this.state.sugerenciasProducto}/>\r\n\r\n                            <Modal \r\n                                isOpen={this.state.modalOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModal.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <div className=\"card \">\r\n                                        <div className=\"card-body \">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"descripcionProducto\"> Nombre: </label>\r\n                                                    <input className=\"form-control\" id= \"descripcionProducto\" type=\"text\" placeholder=\"Ejemplo: Aceite\"\r\n                                                        value = {this.state.producto.descripcionProducto} \r\n                                                        onChange = { e => this.setProducto(e,'descripcionProducto') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"detalleProducto\"> Marca: </label>\r\n                                                    <input className=\"form-control\" id= \"detalleProducto\" type=\"text\" placeholder=\"Ejemplo: De Coco\"\r\n                                                        value = {this.state.producto.detalleProducto} \r\n                                                        onChange = { e => this.setProducto(e,'detalleProducto') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"codigotipoProducto\"> Tipo: </label>\r\n                                                    <select className={\"form-control custom-select \"} id=\"codigoTipoProducto\" onChange={this.onChange}>\r\n                                                        <option value = {this.state.producto.codigoTipoProducto}>{this.state.producto.nombreTipoProducto}</option>\r\n                                                        {this.state.tipoProductos.map((tpPro) => \r\n                                                        ( <option value={tpPro.codigoTipoProducto} key={tpPro.id}>{tpPro.nombreTipoProducto}</option>))}\r\n                                                    </select>\r\n                                                </div>                    \r\n\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"codigoPresentacion\"> Presentacion: </label>\r\n                                                    <select className={\"form-control custom-select \"} id=\"codigoPresentacion\" onChange={this.onChange}>\r\n                                                        <option value = {this.state.producto.codigoPresentacion}>{this.state.producto.descripcionPresentacion}</option>\r\n                                                        {this.state.presentaciones.map((pre) => \r\n                                                        ( <option value={pre.codigoPresentacion} key={pre.id}>{pre.descripcionPresentacion}</option>))}\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"col-md-12 form-group\">\r\n                                                    <label for=\"mediaProducto\"> Imagen:</label>\r\n                                                    <div class=\"custom-file\">\r\n                                                        <input type=\"file\" class=\"custom-file-input\" id=\"customFileLang\" lang=\"es\"\r\n                                                            onChange = { e => this.setFileMedia(e) }\r\n                                                        />\r\n                                                        <label data-browse=\"Buscar\" class=\"custom-file-label\" for=\"customFileLang\">{ this.state.nombreFile}</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-6\">\r\n                                                            <div className=\"cardImagen text-center\">\r\n                                                                <img src={this.state.fileTemporal} alt={this.state.producto.descripcionProducto} className=\"imagenProducto\"/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label for=\"valorPrecio\"> Precio S/.: </label>\r\n                                                                <input className=\"form-control\" id= \"valorPrecio\" type=\"number\"\r\n                                                                    placeholder = \"0\"\r\n                                                                    value1 = {parseFloat(this.state.producto.valorPrecio).toFixed(2)} \r\n                                                                    value = {this.state.producto.valorPrecio} \r\n                                                                    onChange = { e => this.setProducto(e,'valorPrecio') }\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label for=\"stockExistente\"> Stock: </label>\r\n                                                                <input className=\"form-control\" id= \"stockExistente\" type=\"number\"\r\n                                                                    value = {this.state.producto.stockExistente} \r\n                                                                    onChange = { e => this.setProducto(e,'stockExistente') }\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label for=\"stockMinimo\"> Min: </label>\r\n                                                                <input className=\"form-control\" id= \"stockMinimo\" type=\"number\"\r\n                                                                    value = {this.state.producto.stockMinimo} \r\n                                                                    onChange = { e => this.setProducto(e,'stockMinimo') }\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div hidden={true} className=\"col-md-6 form-group\">\r\n                                                    <label for=\"codigoLocal\"> Ubicaci√≥n: </label>\r\n                                                    <select className={\"form-control custom-select \"} id=\"codigoLocal\" onChange={this.onChange}>\r\n                                                        <option value = {this.state.codigoLocal}>\r\n                                                            {this.state.producto.nombreLocal}\r\n                                                        </option>\r\n                                                        {this.state.locales.map((loc) => \r\n                                                        ( <option value={loc.codigoLocal} key={loc.id}>{loc.nombreLocal}</option>))}\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div hidden={true} className=\"col-md-6 form-group\">\r\n                                                    <label for=\"fechaVencimiento\"> Fecha Vencimiento: </label>\r\n                                                    <input className=\"form-control\" id= \"fechaVencimiento\" type=\"date\" data-date-format=\"YYYY MM DD\"\r\n                                                        value = {this.state.producto.fechaVencimiento} \r\n                                                        onChange = { e => this.setProducto(e,'fechaVencimiento') }\r\n                                                    />\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div className=\"text-center\">\r\n                                                <button className=\"btn btn-primary\"\r\n                                                    onClick={ this.guardarProductoPrueba}\r\n                                                > GUARDAR </button>\r\n                                                &nbsp;\r\n                                                <button className=\"btn btn-danger\"\r\n                                                    onClick={()=>this.toogleModal()}\r\n                                                > CANCELAR </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                            <Modal \r\n                                    isOpen={this.state.modalConfirmarOpen}\r\n                                    centered={true}\r\n                                    size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModalConfirmar.bind(this)}>Alerta</ModalHeader>    \r\n                                <ModalBody>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row justify-content-center text-center\">\r\n                                            <div className=\"col-md-12 mb-4\">\r\n                                                <span>Se eliminar√° el Registro, ¬øDesea Continuar? </span>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <button className=\"btn btn-danger\"\r\n                                                    onClick={this.borrarConfirmado}\r\n                                                >Eliminar</button>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <button className=\"btn btn-info\"\r\n                                                    onClick = {this.toogleModalConfirmar.bind(this)}\r\n                                                >Cancelar</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </Menu>\r\n        )\r\n    }\r\n}","// AUTH: JORGE M\r\n// VentaDetalle API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/ventas/detalles/';\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n// LISTAR VentaDetalles\r\n\r\nexport function get_Venta_Detalle_Lista(){ \r\n    const urlFetch = BaseUrl + 'lista/';\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// MOSTRAR DETALLE VENTA POR CODIGO_VD\r\nexport function get_Venta_Detalle_CodigoVD(codigoVD){ \r\n    const urlFetch = BaseUrl + 'codigovd/'+codigoVD;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// MOSTRAR DETALLE VENTA POR CODIGO DE VENTA\r\nexport function get_Venta_Detalle_Codigo_Venta(codigoVenta){ \r\n    const urlFetch = BaseUrl + 'codigoventa/' + codigoVenta;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MOSTRAR DETALLE VENTA POR CODIGO DE VENTA PARA VISTA\r\nexport function get_Venta_Detalle_Codigo_Venta_Vista(codigoVenta){ \r\n    const urlFetch = BaseUrl + 'codigoventa/vista/'+codigoVenta;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//ELIMINAR DETALLE DE VENTA POR CODIGO\r\nexport function del_Venta_Detalle_CodigoVD(codigoVD){ \r\n    const urlFetch = BaseUrl + 'codigovd/' + codigoVD;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//ELIMINAR DETALLES DE VENTA POR CODIGO DE VENTA\r\nexport function del_Venta_Detalle_Codigo_Venta(codigoVenta){ \r\n    const urlFetch = BaseUrl + 'codigoventa/' + codigoVenta;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//CREAR DETALLE DE VENTA\r\nexport function post_Venta_Detalle(VentaDetalle){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(VentaDetalle),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//CREAR DETALLE DE VENTA TEMPORAL\r\nexport function post_Venta_Detalle_Temporal(VentaDetalle){ \r\n    const urlFetch = BaseUrl + \"temporal\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(VentaDetalle),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n//MODIFICAR DETALLE DE VENTA POR CODIGO\r\nexport function put_Venta_Detalle_Temporal(VentaDetalle){ \r\n    const urlFetch = BaseUrl + \"temporal\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(VentaDetalle),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR DETALLE DE VENTA POR CODIGO\r\nexport function put_Venta_Detalle(VentaDetalle){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(VentaDetalle),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n","// AUTH: JORGE M\n// GET CLIENTE API FROM SERVER NODE EXPRESS\n\nimport data from '../../db_data';\nconst BaseUrl = data + '/api/clientes/';\n\n// MOSTRAR CLIENTE CODIGO\nexport function get_Cliente(codigoCliente){\n    return new Promise((resolve,reject)=>{\n        fetch(BaseUrl + codigoCliente)\n        .then((Cliente) => Cliente.json())\n        .then((ClienteJson) => {\n            resolve(ClienteJson);\n        })\n        .catch((error)=>{\n            reject(error);\n        });\n    });\n}\n\n// MOSTRAR CLIENTES\nexport function get_Cliente_Lista(){\n    return new Promise((resolve,reject)=>{\n        fetch(BaseUrl)\n        .then((Clientes) => Clientes.json())\n        .then((ClientesJson) => {\n            resolve(ClientesJson);\n        })\n        .catch((error)=>{\n            reject(error);\n        });\n    });\n}\n\n//ELIMINAR CLIENTE CODIGO\n\nexport function del_Cliente(codigoCliente){\n    return new Promise((resolve,reject)=>{\n        fetch(BaseUrl + codigoCliente,{\n            method:'DELETE',\n            headers: new Headers({\n                'Content-type':'application/json'\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolve(responseJson);\n        })\n        .catch((error)=>{\n            reject(error);\n        });\n    });\n}\n\n// AGREGAR CLIENTE\nexport function post_Cliente(ClienteData){\n        \n    return new Promise((resolve,reject)=>{\n        fetch(BaseUrl,{\n            method:'POST',\n            body: JSON.stringify(ClienteData),\n            headers: new Headers({\n                'Content-type':'application/json'\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolve(responseJson);\n        })\n        .catch((error)=>{\n            reject(error);\n        });\n    });\n}\n\n","import React  from 'react'\r\n\r\nconst cliente  = ( props ) => {\r\n    return (\r\n    <div className=\"card \">\r\n        <div className=\"card-header text-center\">\r\n            <h3>Cliente Nuevo</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n            <div className=\"form-group\">\r\n                <label for=\"detalleProducto\"> DOCUMENTO: </label>\r\n                <select className=\"form-control\" id= \"detalleProducto\"> \r\n                    {props.tiposDocumentos.map((tpDocu) => {\r\n                        return(\r\n                            <option value={tpDocu.codigoTipoDocumento} key={tpDocu.id}>{tpDocu.nombreTipoDocumento}</option>   \r\n                        )\r\n                    })}                    \r\n                </select>\r\n            </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"numeroDocumento\"> NUMERO: </label>\r\n                    <input className=\"form-control\" id= \"numeroDocumento\" type=\"text\" \r\n                        onChange={e => props.setCliente(e)}\r\n                    />\r\n                </div>\r\n                <div  hidden={true} className=\"form-group\">\r\n                    <label for=\"telefonoCliente\"> TELEFONO: </label>\r\n                    <input className=\"form-control\" id= \"telefonoCliente\" type=\"text\"\r\n                        onChange={e => props.setCliente(e)}\r\n                     />\r\n                </div>\r\n                <div  hidden={true} className=\"form-group hide\">\r\n                    <label for=\"correoCliente\">   CORREO: </label>\r\n                    <input className=\"form-control\" id= \"correoCliente\" type=\"text\" \r\n                        onChange={e => props.setCliente(e)}\r\n                    />\r\n                </div>\r\n                <div  hidden={true} className=\"form-group hide\">\r\n                    <label for=\"direccionCliente\"> DIRECCI√ìN: </label>\r\n                    <input className=\"form-control\" id= \"direccionCliente\" type=\"text\" \r\n                        onChange={e => props.setCliente(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"nombreCliente\"> NOMBRE: </label>\r\n                    <input className=\"form-control\" id= \"nombreCliente\" type=\"text\"\r\n                        onChange={e => props.setCliente(e)}\r\n                    />\r\n                </div>\r\n                <div  hidden={true} className=\"form-group hide\">\r\n                    <label for=\"enRepresentacion\"> EN REPRESENTACION: </label>\r\n                    <input className=\"form-control\" id= \"enRepresentacion\" type=\"text\"\r\n                        onChange={e => props.setCliente(e)}\r\n                    />\r\n                </div>\r\n                <div hidden={true} className=\"form-group hide\">\r\n                    <label for=\"razonSocial\"> RAZON SOCIAL: </label>\r\n                    <input className=\"form-control\" id= \"razonSocial\" type=\"text\"\r\n                        onChange={e => props.setCliente(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={props.registrarCliente}\r\n                    > REGISTRAR </button>\r\n                </div>\r\n            {/*</form>*/}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default cliente\r\n","import React, { Component } from 'react'\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Modal , ModalHeader, ModalBody } from 'reactstrap';\r\n\r\n\r\nimport { get_Producto_Local_Venta_Lista, get_Producto_Venta } from '../../Data/productoData';\r\nimport { post_Venta_Detalle_Temporal, get_Venta_Detalle_Codigo_Venta_Vista, put_Venta_Detalle_Temporal, del_Venta_Detalle_CodigoVD, del_Venta_Detalle_Codigo_Venta } from '../../Data/VentaDetalleData';\r\nimport { get_Venta_Vacio, put_Venta, del_Venta } from '../../Data/VentaData';\r\nimport { get_Tipo_Documento_Lista } from '../../Data/tiposData';\r\nimport { get_Cliente_Lista, post_Cliente } from '../../Data/Cliente';\r\n\r\nimport ClienteForm from '../Cliente/ClienteForm';\r\n\r\nimport \"./Venta.css\";\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nimport { DeleteForeverOutlined , DoneOutlineRounded , RemoveShoppingCartOutlined , PersonAddRounded } from '@material-ui/icons';\r\n\r\nconst estadoInicial = {\r\n    productos:[],\r\n    productosBusqueda:[],\r\n\r\n    sugerenciasProducto:[],\r\n\r\n    codigoVenta:\"\",\r\n    codigoProducto:\"\",\r\n    nombreProductoBuscar:\"\",\r\n    tipoBuscadorProducto:\"descripcionProducto\",\r\n    \r\n    venta : {\r\n        codigoVenta:\"\",\r\n        codigoUsuario:\"\",\r\n        codigoCliente:\"\",\r\n        codigoLocal:\"\",\r\n        valorTotalVenta:0,\r\n        valorModificado:0,\r\n        valorDescuento:0,\r\n        ventaDetalles:[],\r\n    },\r\n\r\n    detalle : {\r\n        codigoVD:\"\",\r\n        codigoVenta:\"\",\r\n        codigoProducto:\"\",\r\n        codigoPrecio:\"\",\r\n        cantidadProducto:\"\",\r\n        valorTotalVD:\"\",\r\n        valorModificado:\"\",\r\n        valorDescuento:\"\"\r\n    },\r\n    detallesVentas : [],\r\n    detalles: [],\r\n\r\n    tiposDocumentos:[],\r\n\r\n    sugerenciasCliente:[],\r\n    clientes:[],\r\n    cliente:{\r\n        codigoCliente:\"\",\r\n        codigoTipoDocumento:\"\",\r\n        numeroDocumento:\"\",\r\n        telefonoCliente:\"\",\r\n        correoCliente:\"\",\r\n        direccionCliente:\"\",\r\n        nombreCliente:\"\",\r\n        enRepresentacion:\"\",\r\n        razonSocial:\"\",\r\n    },\r\n\r\n    confirmarCrearVenta : false,\r\n    confirmarEliminar : false,\r\n\r\n    tipoAccion : \"\",\r\n\r\n    modalClienteOpen :false,\r\n    modalConfirmarOpen: false,\r\n\r\n    creacionCliente : false,\r\n    tituloModal:\"\",\r\n\r\n    nombreCliente:\"\",\r\n\r\n    codigoVDTemporal : \"\",\r\n\r\n    montoRecibido : 0.00,\r\n    valorTotalVenta : 0.00,\r\n\r\n    mensajeAlerta : {\r\n        textoMensaje : \"\",\r\n        tipoBotonConfirmar : \"\",\r\n        textoBotonConfirmar : \"\",\r\n        mostrarConfirmar : false,\r\n        tipoBotonCancelar : \"\",\r\n        textoBotonCancelar : \"\",\r\n        mostrarCancelar : false,\r\n    }\r\n\r\n}\r\n\r\nexport class venta extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = estadoInicial;\r\n        this.onChangeBuscadorProducto = this.onChangeBuscadorProducto.bind(this);\r\n    }\r\n\r\n    setMontoRecibido = (montoRecibido) => {\r\n        this.setState({ montoRecibido })\r\n    }\r\n\r\n    setCliente = (e) => {\r\n        const { cliente } = this.state;\r\n        cliente[e.target.id] = e.target.value;\r\n        if(e.target.id === \"nombreCliente\"){\r\n            var nombreCliente = e.target.value;\r\n            this.setState({ nombreCliente });\r\n        }\r\n        this.setState({ cliente });\r\n    }\r\n\r\n    registrarCliente = () => {\r\n        const { cliente } = this.state;\r\n        if(cliente.nombreCliente.length > 0){\r\n            post_Cliente(cliente)\r\n            .then(res => {\r\n                this.setState({ \r\n                    creacionCliente : true,\r\n                    nombreCliente: res[0].nombreCliente,\r\n                    cliente : res[0]\r\n                });\r\n            });   \r\n        }\r\n        this.listarClientes();\r\n        this.toogleModalCliente();\r\n    }\r\n\r\n    limpiarCliente = () => {\r\n        const { cliente } = this.state;\r\n        cliente.codigoCliente = \"\";\r\n        cliente.codigoTipoDocumento= \"\";\r\n        cliente.numeroDocumento= \"\";\r\n        cliente.telefonoCliente= \"\";\r\n        cliente.correoCliente= \"\";\r\n        cliente.direccionCliente= \"\";\r\n        cliente.nombreCliente= \"\";\r\n        cliente.enRepresentacion= \"\";\r\n        cliente.razonSocial= \"\";\r\n\r\n        this.setState({ cliente });\r\n    }\r\n\r\n    toogleModalCliente = () => {\r\n        if(!this.state.creacionCliente){\r\n            this.limpiarCliente();\r\n        }\r\n        this.setState({\r\n            tituloModal : \"REGISTRAR\",\r\n            modalClienteOpen : ! this.state.modalClienteOpen,\r\n        });\r\n    }\r\n\r\n    toogleModalConfirmar = () => {\r\n        this.setState({ modalConfirmarOpen : ! this.state.modalConfirmarOpen });\r\n    }\r\n\r\n    onChangeTipoBuscadorProducto = (event) => {\r\n        const tipoBuscadorProducto = event.target.value;\r\n        this.setState(() => ({ tipoBuscadorProducto }));\r\n    }\r\n\r\n    onChangeBuscadorProducto = (event) => {\r\n        const textoBuscar =  event.target.value;\r\n        let sugerenciasProducto = [];\r\n\r\n        if(textoBuscar.length > 0){\r\n            //console.log(this.state.productos);\r\n            const regex = new RegExp(`^${textoBuscar}`, 'i');          \r\n            sugerenciasProducto = this.state.productos.sort().filter(producto => regex.test(producto[this.state.tipoBuscadorProducto]));\r\n        }\r\n        this.setState(()=>({ sugerenciasProducto , nombreProductoBuscar : textoBuscar }));\r\n    }\r\n\r\n    onChangeBuscadorCliente = (event) => {\r\n        const textoBuscar =  event.target.value;\r\n        let sugerenciasCliente = [];\r\n        this.setCliente(event);\r\n        if(textoBuscar.length > 0){\r\n            const regex = new RegExp(`^${textoBuscar}`, 'i');          \r\n            sugerenciasCliente = this.state.clientes.sort().filter(cliente => regex.test(cliente[\"nombreCliente\"]));\r\n        }\r\n        this.setState(()=>({ sugerenciasCliente }));\r\n    }\r\n\r\n    setValorTotalVenta = () => {\r\n        var valorTotalVenta = 0;\r\n        this.state.detalles.forEach(detalle => {\r\n            valorTotalVenta = valorTotalVenta + detalle.valorTotalVD; \r\n        });\r\n        this.setState({ valorTotalVenta });\r\n    }\r\n\r\n    borrarDetalleVenta = (codigoVD) =>{\r\n        del_Venta_Detalle_CodigoVD(codigoVD)\r\n        .then(res => {\r\n            this.listarDetallesVentasVista();\r\n        });\r\n    }\r\n\r\n    buscarIndexDetalles = (detalle) => {\r\n        const { detalles } = this.state;\r\n        const index = detalles.indexOf(detalle);\r\n        return index;\r\n    }\r\n\r\n    buscarIndexProductos = (producto) => {\r\n        const { productos } = this.state;\r\n        const index = productos.indexOf(producto);\r\n        return index;\r\n    }\r\n\r\n    borrarDetalleVentaTemporal = () =>{\r\n\r\n        const { detalle } = this.state;  \r\n        const index = this.buscarIndexDetalles(detalle);\r\n        var detalles = Object.assign( [] , this.state.detalles);\r\n        detalles.splice(index,1);\r\n        this.setState({ \r\n            detalles : detalles,\r\n\r\n        }, () => {\r\n            this.setValorTotalVenta();\r\n        });\r\n        del_Venta_Detalle_CodigoVD(detalle.codigoVD).then( res => { });\r\n    }\r\n\r\n    borrarProductoDeSugeriancia = (producto) => {\r\n        const index = this.buscarIndexProductos(producto);\r\n        var productos = Object.assign([], this.state.productos);\r\n        productos.splice(index,1);\r\n        this.setState({ productos : productos });\r\n    }\r\n\r\n    botonConfirmado = () => {\r\n        const { tipoAccion } = this.state;\r\n\r\n        if(tipoAccion === \"ELIMINAR-DETALLE\"){\r\n            this.borrarDetalleVentaTemporal();\r\n            this.toogleModalConfirmar();\r\n        }\r\n        if(tipoAccion === \"ANULAR-VENTA\"){\r\n            this.anularVenta();\r\n        }\r\n        if(tipoAccion === \"CONFIRMAR-VENTA\"){\r\n            this.confirmarGuardarVenta();\r\n            this.toogleModalConfirmar();\r\n        }\r\n    }\r\n\r\n    verificarEliminar = (detalle, tipoAccion) => {\r\n        const { mensajeAlerta } = this.state;\r\n        switch (tipoAccion) {\r\n            case \"ELIMINAR-DETALLE\":\r\n                    mensajeAlerta[\"textoMensaje\"]=\"Se eliminar√° el Registro, ¬øDesea Continuar?\";\r\n                    mensajeAlerta[\"tipoBotonConfirmar\"]=\"btn btn-danger\";\r\n                    mensajeAlerta[\"textoBotonConfirmar\"]=\"Eliminar\";\r\n                    mensajeAlerta[\"mostrarConfirmar\"]=true;\r\n                    mensajeAlerta[\"tipoBotonCancelar\"]=\"btn btn-info\";\r\n                    mensajeAlerta[\"textoBotonCancelar\"]=\"Cancelar\"; \r\n                    mensajeAlerta[\"mostrarCancelar\"]=true;\r\n                break;\r\n            case \"ANULAR-VENTA\":\r\n                    mensajeAlerta[\"textoMensaje\"]=\"Se anular√° la Venta, ¬øDesea Continuar?\";\r\n                    mensajeAlerta[\"tipoBotonConfirmar\"]=\"btn btn-danger\";\r\n                    mensajeAlerta[\"textoBotonConfirmar\"]=\"Anular\";\r\n                    mensajeAlerta[\"mostrarConfirmar\"]=true;\r\n                    mensajeAlerta[\"tipoBotonCancelar\"]=\"btn btn-info\";\r\n                    mensajeAlerta[\"textoBotonCancelar\"]=\"Cancelar\";\r\n                    mensajeAlerta[\"mostrarCancelar\"]=true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ detalle : detalle , tipoAccion : tipoAccion , mensajeAlerta : mensajeAlerta});\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    crearDetalleVenta = (Detalle) => {\r\n        put_Venta_Detalle_Temporal(Detalle)\r\n            .then(res => {\r\n        });\r\n    }\r\n\r\n    agregarProductos = (producto) =>{\r\n        this.setState({\r\n            productos : this.state.productos.concat(producto),\r\n        });    \r\n    }\r\n\r\n    crearDetalleVentaTemporal = (Producto , cantidad) => {\r\n        const detalleVentaBD = {\r\n            codigoVenta : this.state.codigoVenta,\r\n            codigoProducto : Producto.codigoProducto,\r\n            codigoPrecio : Producto.codigoPrecio,\r\n\r\n        }\r\n        post_Venta_Detalle_Temporal(detalleVentaBD).then( res => {\r\n            this.setState({\r\n                codigoVDTemporal :  res[0][0].codigoVD\r\n            }, () => {\r\n                const detalleVenta = {\r\n                    urlMedia : Producto.urlMedia,\r\n                    descripcionProducto : Producto.descripcionProducto,\r\n                    detalleProducto : Producto.detalleProducto, // Nuevo\r\n                    descripcionPresentacion : Producto.descripcionPresentacion,\r\n                    nombreTipoProducto : Producto.nombreTipoProducto, // Nuevo \r\n                    valorPrecio : Producto.valorPrecio,\r\n                    cantidadProducto : cantidad,\r\n                    stockExistente: Producto.stockExistente,\r\n                    valorTotalVD : Producto.valorPrecio * cantidad,\r\n                    codigoVD : this.state.codigoVDTemporal,\r\n                    codigoProducto : Producto.codigoProducto,\r\n                    codigoPrecio : Producto.codigoPrecio,\r\n                    codigoVenta : this.state.codigoVenta,\r\n                    codigoLocal : localStorage.getItem(\"codigoLocal\"),\r\n                    valorModificado : 0,\r\n                    valorDescuento : 0,\r\n                }\r\n                this.setState({\r\n                    detalles : this.state.detalles.concat(detalleVenta),\r\n                }, () => {\r\n                    this.setValorTotalVenta();\r\n                });        \r\n            });\r\n        });\r\n    }\r\n\r\n    editarDetalleVentaTemporal = (e ,detalle) => { // SE RECIBE EL DETALLE DE VENTA\r\n        const index = this.buscarIndexDetalles(detalle); // SE OBTIENE LA UBICACION DEL DETALLE\r\n        const detalleEditar = Object.assign( {} , this.state.detalles[index] ); // SE CREA UN DETALLE DE VENTA A PARTIR DE LA LISTA DE DETALLES\r\n        const cantidadProducto = e.target.value;\r\n        detalleEditar.cantidadProducto = cantidadProducto; //\r\n        detalleEditar.valorTotalVD = detalle.valorPrecio * cantidadProducto;\r\n        const detalles = Object.assign( [] , this.state.detalles);\r\n        detalles[index] = detalleEditar;\r\n        this.setState({ detalles : detalles }, () => {\r\n            this.setValorTotalVenta();\r\n        });\r\n    }\r\n\r\n    verificarProductoAgregar = (Producto) => {\r\n        const { detalles } = this.state;\r\n        var existe = false;\r\n        detalles.forEach(det => {\r\n            if(det.codigoProducto === Producto.codigoProducto){\r\n                existe = true;\r\n            }\r\n        });\r\n        return existe;\r\n    }\r\n\r\n    seleccionarProducto (Producto) {\r\n        const existeProducto = this.verificarProductoAgregar(Producto);\r\n        if(!existeProducto){         \r\n            get_Producto_Venta(Producto.codigoProducto).then(res => {\r\n                if(res[0].stockExistente > 0){\r\n                    this.crearDetalleVentaTemporal(res[0],1);  \r\n                    this.setState(() => ({\r\n                        nombreProductoBuscar: \"\",\r\n                        sugerenciasProducto: [],\r\n                    }));\r\n                }else{\r\n                    alert(\"Sin Stock Disponible\");\r\n                }\r\n            });\r\n        }else{\r\n            alert(\"Producto Ya Fue Registrado\");\r\n        }\r\n    }\r\n\r\n    seleccionarCliente (Cliente) {\r\n        const clienteSeleccion = Cliente;   \r\n        this.setState(() => ({\r\n            nombreCliente:clienteSeleccion.nombreCliente,\r\n            cliente : clienteSeleccion,\r\n            sugerenciasCliente : [],\r\n        }));\r\n    }\r\n    \r\n    mostrarSugerenciasProductoLista () {\r\n        const { sugerenciasProducto } =  this.state;\r\n        if(sugerenciasProducto.length === 0){\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"AutoCompleteText\">\r\n                <ul>\r\n                    {sugerenciasProducto.map((item) => \r\n                        <li key={item.codigoProducto} onClick={()=>this.seleccionarProducto(item)}>\r\n                            {item.descripcionProducto + \" - \" + item.detalleProducto}\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    mostrarSugerenciasClienteLista () {\r\n        const { sugerenciasCliente } =  this.state;\r\n        if(sugerenciasCliente.length === 0){\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"AutoCompleteText\">\r\n                <ul>\r\n                    {sugerenciasCliente.map((item) => \r\n                        <li key={item.id}\r\n                            onClick= {()=>\r\n                                this.seleccionarCliente(item)\r\n                            }\r\n                        >\r\n                            {item.nombreCliente}\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    crearVentaVacio(){\r\n        const codigoUsuario = localStorage.getItem(\"codigoUsuario\");\r\n        const codigoLocal = localStorage.getItem(\"codigoLocal\");\r\n\r\n        get_Venta_Vacio( codigoUsuario , codigoLocal)\r\n        .then(res => {\r\n            this.setState({\r\n                codigoVenta : res[0].codigoVentaGenerado\r\n            });\r\n        });\r\n    }\r\n\r\n    listarProductosPrecioLocal(codigoLocal){\r\n        get_Producto_Local_Venta_Lista(codigoLocal).then(res => {\r\n            this.setState({ productos : res });\r\n        });\r\n    }\r\n\r\n    listarDetallesVentasVista(){\r\n        get_Venta_Detalle_Codigo_Venta_Vista(this.state.codigoVenta)\r\n         .then(res => {\r\n             this.setState({ detallesVentas : res });\r\n         });\r\n    }\r\n\r\n    listarTiposDocumentos(){\r\n        get_Tipo_Documento_Lista()\r\n        .then(res=> {\r\n            this.setState({ tiposDocumentos : res });\r\n        });\r\n    }\r\n\r\n    listarClientes(){\r\n        get_Cliente_Lista()\r\n        .then(res => {\r\n            this.setState({ clientes : res });\r\n        });\r\n    }\r\n\r\n    llenarListas = () => {\r\n        const codigoLocal = localStorage.getItem(\"codigoLocal\");\r\n        this.listarProductosPrecioLocal(codigoLocal);\r\n        this.listarTiposDocumentos();\r\n        this.listarClientes();\r\n    }\r\n\r\n    resetEstado = () => {\r\n        this.setState(estadoInicial);\r\n        window.removeEventListener('beforeunload',(e) => {\r\n            this.anularVenta();\r\n            e.returnValue = \"Se cancelo la vent, Desea Salir?\";\r\n        });\r\n    }\r\n\r\n    confirmarGuardarVenta = () => {\r\n        const { detalles } = this.state;\r\n        detalles.forEach(detalle => {\r\n            this.crearDetalleVenta(detalle);\r\n        });\r\n        const ventaGuardar = {\r\n            codigoVenta : this.state.codigoVenta,\r\n            codigoUsuario : localStorage.getItem(\"codigoUsuario\"),\r\n            codigoCliente : this.state.cliente.codigoCliente,\r\n            codigoLocal :localStorage.getItem(\"codigoLocal\"),\r\n            valorTotalVenta : this.state.valorTotalVenta,\r\n            valorModificado : this.state.valorTotalVenta,\r\n            valorDescuento : 0,\r\n            montoRecibido : this.state.montoRecibido\r\n        }\r\n        put_Venta(ventaGuardar).then(res => {\r\n            if(res){\r\n                this.resetEstado();\r\n            }\r\n        });\r\n    }\r\n\r\n    guardarVenta = () => {\r\n        const { detalles, cliente , mensajeAlerta} = this.state;\r\n\r\n        if(detalles.length > 0 ){\r\n            if(cliente.codigoCliente.length > 0){\r\n                if(this.state.montoRecibido >= this.state.valorTotalVenta){\r\n                    mensajeAlerta[\"textoMensaje\"]=\"Se vender√° \".concat(\" Producto(s) con Valor Total S/. \" , this.state.valorTotalVenta.toFixed(2));\r\n                    mensajeAlerta[\"tipoBotonConfirmar\"] = \"btn btn-success\";\r\n                    mensajeAlerta[\"textoBotonConfirmar\"] = \"Confirmar\";\r\n                    mensajeAlerta[\"mostrarConfirmar\"] = true;\r\n                    mensajeAlerta[\"tipoBotonCancelar\"] = \"btn btn-danger\";\r\n                    mensajeAlerta[\"textoBotonCancelar\"] = \"Cancelar\";\r\n                    mensajeAlerta[\"mostrarCancelar\"] = true;\r\n                }\r\n                else{\r\n                    mensajeAlerta[\"textoMensaje\"]=\"El monto recibido es menor al valor total de Venta.\";\r\n                    mensajeAlerta[\"mostrarConfirmar\"] = false;\r\n                    mensajeAlerta[\"tipoBotonCancelar\"] = \"btn btn-danger\";\r\n                    mensajeAlerta[\"textoBotonCancelar\"] = \"Aceptar\";\r\n                    mensajeAlerta[\"mostrarCancelar\"] = true;\r\n                }\r\n            }else{\r\n                mensajeAlerta[\"textoMensaje\"]=\"No se registro un Cliente\";\r\n                mensajeAlerta[\"mostrarConfirmar\"] = false;\r\n                mensajeAlerta[\"tipoBotonCancelar\"] = \"btn btn-danger\";\r\n                mensajeAlerta[\"textoBotonCancelar\"] = \"Aceptar\";\r\n                mensajeAlerta[\"mostrarCancelar\"] = true;\r\n            }\r\n        }else{\r\n            mensajeAlerta[\"textoMensaje\"]=\"No se registro Productos para la Venta\";\r\n            mensajeAlerta[\"mostrarConfirmar\"] = false;\r\n            mensajeAlerta[\"tipoBotonCancelar\"] = \"btn btn-danger\";\r\n            mensajeAlerta[\"textoBotonCancelar\"] = \"Aceptar\";\r\n            mensajeAlerta[\"mostrarCancelar\"] = true;\r\n        }\r\n        this.setState({ mensajeAlerta , tipoAccion : \"CONFIRMAR-VENTA\" });\r\n        this.toogleModalConfirmar();   \r\n    }\r\n\r\n    eliminarVenta = (codigoVenta) => {\r\n        del_Venta(codigoVenta).then(res => {\r\n        });\r\n        del_Venta_Detalle_Codigo_Venta(codigoVenta).then( res => {\r\n        });\r\n        this.resetEstado();\r\n    }\r\n\r\n    anularVenta = () => {\r\n        if(this.state.codigoVenta.length > 0){\r\n            this.eliminarVenta(this.state.codigoVenta);  \r\n        }\r\n    }\r\n\r\n    confirmarCrearVenta = () => {\r\n        window.addEventListener('beforeunload',(e) => {\r\n            this.anularVenta();\r\n            e.returnValue = \"Se cancelo la venta, Desea Salir?\";\r\n        });\r\n        this.setState({\r\n            confirmarCrearVenta : ! this.state.confirmarCrearVenta\r\n        },() => {\r\n            this.llenarListas();\r\n            this.crearVentaVacio();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.confirmarCrearVenta){\r\n            return(\r\n                <Menu>\r\n                <div className=\"container p-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-4 mx-auto\">\r\n                            <button\r\n                                className=\"form-control btn btn-success\"\r\n                                onClick={this.confirmarCrearVenta}\r\n                            >Confirmar Crear Venta</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </Menu>\r\n            )\r\n        }else{\r\n            const { nombreProductoBuscar } =  this.state\r\n            const columns = [\r\n                {\r\n                    Header: \"ITEM\",\r\n                    style:{\r\n                        textAlign: \"center\"\r\n                    },\r\n                    Cell: props =>{\r\n                        return(\r\n                            <label>{props.original.codigoVD}</label>\r\n                        )\r\n                    },\r\n                    show:false\r\n                },\r\n                {\r\n                    Header:\"IMAGEN\",\r\n                    Cell: props =>{\r\n                        return(\r\n                            <div className=\"\">\r\n                                <img src={props.original.urlMedia} alt={props.original.descripcionProducto} className=\"card-img-top media_producto\"/>\r\n                            </div>\r\n                        )\r\n                    },\r\n                    maxWidth: 200\r\n                },\r\n                {\r\n                    Header: \"PRODUCTO\",\r\n                    style:{\r\n                        textAlign: \"center\"\r\n                    },\r\n                    Cell: props => {\r\n                        return(\r\n                            <div className=\"mt-2 infoProducto\">\r\n                                <div>{props.original.descripcionProducto}</div>\r\n                                <div>{props.original.detalleProducto}</div>\r\n                                <div>{props.original.nombreTipoProducto}</div>\r\n                                <div>{props.original.descripcionPresentacion}</div>\r\n                                <div>Stock: {props.original.stockExistente}</div>\r\n                                <div>Precio: S/.{(props.original.valorPrecio).toFixed(2)}</div> \r\n                            </div>\r\n                        )\r\n                    },\r\n                    width : 250,\r\n                    minWidth: 150,\r\n                    maxWidth: 450\r\n                },\r\n                {\r\n                    Header: \"SUB. TOTAL\",\r\n                    style:{\r\n                        textAlign: \"center\"\r\n                    },\r\n                    Cell: props => {\r\n                        return(\r\n                            <div className=\"container\">\r\n                                <div className=\"row justify-content-center mt-1\">\r\n                                    <div className=\"col-11 form-group\">\r\n                                        <input className=\"form-control text-center\" id= \"cantidadProducto\" type=\"number\" min=\"1\"\r\n                                            max={\"\"+props.original.stockExistente+\"\"} placeholder={props.original.cantidadProducto}\r\n                                            value={props.original.cantidadProducto}\r\n                                            onChange = { e => { this.editarDetalleVentaTemporal( e , props.original)}}\r\n                                        />   \r\n                                    </div>\r\n                                    <div className=\"col-11 form-group\">\r\n                                        <input className=\"form-control text-center\" id= \"descripcionProducto\" type=\"text\" readOnly\r\n                                            value = {\"S/. \" + (props.original.valorTotalVD).toFixed(2)}> \r\n                                        </input>\r\n                                    </div>\r\n                                    <div className=\"col-11\">\r\n                                        <button className=\"btn btn-danger\"\r\n                                            onClick = {() => {this.verificarEliminar(props.original,\"ELIMINAR-DETALLE\")}}\r\n                                        > <DeleteForeverOutlined/> </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>                                                    \r\n                        )\r\n                    }\r\n                },\r\n            ]\r\n\r\n            return (\r\n                <Menu>\r\n                <div className=\"container p-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"container col-md-8\">\r\n                            <div className=\"container\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h3>Venta de Productos</h3>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-4 form group\">\r\n                                                <select className=\"form-control custom-select\"\r\n                                                    onChange={this.onChangeTipoBuscadorProducto}\r\n                                                >\r\n                                                    <option value=\"descripcionProducto\">NOMBRE</option>\r\n                                                    <option value=\"detalleProducto\">MARCA</option>\r\n                                                    <option value=\"codigoProducto\">CODIGO</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <input className=\"form-control\" type=\"text\"\r\n                                                    placeholder=\"Busqueda de Producto\"\r\n                                                    value={nombreProductoBuscar}\r\n                                                    onChange={this.onChangeBuscadorProducto}\r\n                                                    autoComplete={\"off\"}\r\n                                                ></input>\r\n                                                {this.mostrarSugerenciasProductoLista()}\r\n                                            </div>\r\n                                            <div className=\"col-md-12 mt-3\">\r\n                                                <ReactTable\r\n                                                    columns = {columns}\r\n                                                    noDataText = {\"Cargando Datos...\"}\r\n                                                    data = {this.state.detalles}\r\n                                                    filterable={false}\r\n                                                    defaultPageSize={5}\r\n                                                    showPaginationTop={false}\r\n                                                    showPaginationBottom={false}\r\n                                                >\r\n                                                </ReactTable>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container mt-3\">\r\n                                <div className=\"row justify-content-center text-center\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <button className=\"btn btn-info\"\r\n                                            onClick={this.guardarVenta}\r\n                                        > <DoneOutlineRounded/> </button>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <button className=\"btn btn-danger\"\r\n                                            onClick = {() => {this.verificarEliminar(\"\",\"ANULAR-VENTA\")}}\r\n                                        > <RemoveShoppingCartOutlined/> </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container col-md-4\">\r\n                            <div className=\"bg-primary\">\r\n                                <h1>S/. {(this.state.valorTotalVenta).toFixed(2)}</h1>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label htmlFor=\"documentoVenta\"> DOCUMENTO: </label>\r\n                                    <select className=\"form-control\" id= \"documentoVenta\"> \r\n                                        <option>Boleta</option>\r\n                                        <option>Factura</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label htmlFor=\"tipoPagoVenta\"> TIPO PAGO: </label>\r\n                                    <select className=\"form-control\" id= \"tipoPagoVenta\"> \r\n                                        <option>Efectivo</option>\r\n                                        <option>Tarjeta</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label htmlFor=\"serieVenta\"> SERIE: </label>\r\n                                    <input className=\"form-control\" id= \"serieVenta\" type=\"text\" placeholder=\"000\"/>\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label htmlFor=\"numeroVenta\"> N¬∞ DE VENTA: </label>\r\n                                    <input className=\"form-control\" id= \"numeroVenta\" type=\"text\" value={this.state.codigoVenta} readOnly/>\r\n                                </div>\r\n                                <div className=\"col-md-12 form-group\">\r\n                                    <label htmlFor=\"nombreCliente\"> CLIENTE: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-9\">\r\n                                            <input className=\"form-control\" id= \"nombreCliente\" type=\"text\"\r\n                                                //value={this.state.cliente.nombreCliente}\r\n                                                value={this.state.nombreCliente}\r\n                                                onChange={this.onChangeBuscadorCliente}\r\n                                                autoComplete={\"off\"}\r\n                                                />\r\n                                            {this.mostrarSugerenciasClienteLista()}\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <button className=\"form-control btn btn-info\"\r\n                                                onClick={this.toogleModalCliente}\r\n                                            > <PersonAddRounded/> </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12 form-group\">\r\n                                    <label htmlFor=\"montoRecibido\"> MONTO RECIBIDO S/. </label>\r\n                                    <input className=\"form-control\" id= \"montoRecibido\" type=\"number\" placeholder=\"0\"\r\n                                        onChange={e => {this.setMontoRecibido(e.target.value)}}\r\n                                        value={this.state.montoRecibido}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <Divider className=\"mb-3\" />\r\n                            <div className=\"row\">                           \r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label>SUB TOTAL</label>\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label>\r\n                                    S/. { (parseFloat(this.state.valorTotalVenta) - (parseFloat(this.state.valorTotalVenta) * 0.18)).toFixed(2) }\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label>I.G.V (18%)</label>\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label>\r\n                                        S/. {(parseFloat(this.state.valorTotalVenta) * 0.18).toFixed(2) }\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label>TOTAL</label>\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label>\r\n                                        S/. {(parseFloat(this.state.valorTotalVenta)).toFixed(2)}\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label>VUELTO: </label>\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label>\r\n                                        S/. {(parseFloat(this.state.montoRecibido - this.state.valorTotalVenta)).toFixed(2)}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <Modal \r\n                                    isOpen={this.state.modalClienteOpen}\r\n                                    centered={true}\r\n                                    size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModalCliente.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n                                <ModalBody>\r\n                                    <ClienteForm \r\n                                        tiposDocumentos = {this.state.tiposDocumentos}\r\n                                        setCliente = {this.setCliente}\r\n                                        registrarCliente = {this.registrarCliente}\r\n                                    ></ClienteForm>\r\n                                </ModalBody>\r\n                            </Modal>\r\n\r\n                            <Modal \r\n                                isOpen={this.state.modalConfirmarOpen}\r\n                                centered={true}\r\n                                size={\"xs\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModalConfirmar.bind(this)}>Alerta</ModalHeader>    \r\n                                <ModalBody>\r\n                                    <div className=\"\">\r\n                                        <div className=\"row justify-content-center text-center\">\r\n                                            <div className=\"col-md-12 mb-4\">\r\n                                                {/*<span>Se eliminar√° el Registro, ¬øDesea Continuar?</span>*/}\r\n                                                <span>{this.state.mensajeAlerta.textoMensaje}</span>\r\n                                            </div>\r\n                                            <div className=\"col-3 col-sm-3 col-md-3\" hidden={!this.state.mensajeAlerta.mostrarConfirmar}>\r\n                                                <button className={this.state.mensajeAlerta.tipoBotonConfirmar}\r\n                                                    onClick={this.botonConfirmado}\r\n                                                >{this.state.mensajeAlerta.textoBotonConfirmar}</button>\r\n                                            </div>\r\n                                            <div className=\"col-3 col-sm-3 col-md-3\" hidden={!this.state.mensajeAlerta.mostrarCancelar}>\r\n                                                <button className={this.state.mensajeAlerta.tipoBotonCancelar}\r\n                                                    onClick = {this.toogleModalConfirmar.bind(this)}\r\n                                                >{this.state.mensajeAlerta.textoBotonCancelar}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </Menu>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default venta\r\n","import React, { Component } from 'react'\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport { Modal , ModalHeader, ModalBody } from 'reactstrap';\r\n\r\nimport { get_Venta_Local } from '../../Data/VentaData';\r\nimport { get_Venta_Detalle_Codigo_Venta_Vista } from '../../Data/VentaDetalleData';\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nconst estadoInicial = { \r\n    ventasRealizadas:[],\r\n    detallesVenta:[],\r\n\r\n    codigoLocal : localStorage.getItem(\"codigoLocal\"),\r\n    modalDetalleOpen: false,\r\n}\r\n\r\nexport class VentaLista extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = estadoInicial;\r\n    }\r\n\r\n    toogleModalDetalle = () => {\r\n        this.setState({ modalDetalleOpen : ! this.state.modalDetalleOpen });\r\n    }\r\n\r\n    mostrarDetalleVenta = (codigoVenta) => {\r\n        this.listarDetallesVenta(codigoVenta);\r\n        this.toogleModalDetalle();\r\n    }\r\n\r\n    listarVentasRealizadas = () => {\r\n        get_Venta_Local(this.state.codigoLocal).then( res => {\r\n            console.log(res);\r\n            this.setState({ ventasRealizadas : res });\r\n        });\r\n    }\r\n\r\n    listarDetallesVenta = (codigoVenta) => {\r\n        get_Venta_Detalle_Codigo_Venta_Vista(codigoVenta).then( res => {\r\n            this.setState({ detallesVenta : res });\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.listarVentasRealizadas();\r\n    }\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            {\r\n                Header: \"CODIGO\",\r\n                accessor: \"codigoVenta\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"CLIENTE\",\r\n                accessor: \"nombreCliente\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"TRABAJADOR\",\r\n                accessor: \"nombreTrabajador\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"FECHA\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props =>{\r\n                    var fecha = new Date(props.original.fechaRegistro)\r\n                    return(\r\n                        <label>\r\n                            {\r\n                                fecha.getFullYear() + \"/\" + (fecha.getMonth() + 1) + \"/\" + fecha.getDate()\r\n                                + \" -- \" + fecha.getHours() + \":\" + fecha.getMinutes()\r\n                            }\r\n                        </label>\r\n                )}\r\n            },\r\n            {\r\n                Header: \"TOTAL\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props => {\r\n                    return(\r\n                        <label>{ \"S/.\" +(props.original.valorTotalVenta).toFixed(2)  }</label>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: \"DETALLE\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <button\r\n                                className=\"btn btn-info\"\r\n                                onClick={() => { this.mostrarDetalleVenta(props.original.codigoVenta)}}\r\n                            >Ver</button>\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n\r\n        ]\r\n        const columnsDetalleVenta = [\r\n            {\r\n                Header:\"IMAGEN\",\r\n                Cell: props =>{\r\n                    return(\r\n                        <div className=\"media_producto\">\r\n                            <img src={props.original.urlMedia} alt={props.original.descripcionProducto} className=\"card-img-top\"/>\r\n                        </div>\r\n                    )\r\n                },\r\n                width:100,\r\n                minWidth:100,\r\n                maxWidth:100\r\n            },\r\n            {\r\n                Header: \"PRODUCTO\",\r\n                accessor:\"descripcionProducto\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"PRESENTACI√ìN\",\r\n                accessor : \"descripcionPresentacion\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"STOCK\",\r\n                accessor : \"stockExistente\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"VAL. UNIDAD\",\r\n                accessor:\"valorPrecio\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"CANT.\",\r\n                accessor: \"cantidadProducto\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"VAL. TOTAL\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props => {\r\n                    var valorTotalVD = props.original.valorTotalVD;\r\n                    return(\r\n                        <input className=\"form-control text-center\" id= \"descripcionProducto\" type=\"text\" readOnly\r\n                            value = {valorTotalVD}> \r\n                        </input>\r\n                    )\r\n                }\r\n            },\r\n        ]\r\n        return (\r\n            <Menu>\r\n            <div className=\"container p-4\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h3> Ventas Realizadas </h3>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <ReactTable\r\n                            columns = {columns}\r\n                            noDataText = {\"Cargando Datos...\"}\r\n                            data = {this.state.ventasRealizadas}\r\n                            defaultPageSize={5}\r\n                        >\r\n                        </ReactTable>\r\n                    </div>\r\n                </div>\r\n                <Modal \r\n                    isOpen={this.state.modalDetalleOpen}\r\n                    centered={true}\r\n                    size={\"xl\"}\r\n                    className={\"pl-5\"}\r\n                >\r\n                    <ModalHeader toggle={this.toogleModalDetalle.bind(this)}>Dellate De Venta</ModalHeader>    \r\n                    <ModalBody>\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center text-center\">\r\n                                <div className=\"col-md-12\">\r\n                                    <ReactTable\r\n                                    columns = {columnsDetalleVenta}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.detallesVenta}\r\n                                    defaultPageSize={5}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                    >\r\n                                    </ReactTable>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VentaLista\r\n","import React, { Component } from 'react';\r\n\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>MED ID</th>\r\n                                <th>Codigo</th>\r\n                                <th>Sucursal</th>\r\n                                <th>Tipo</th>\r\n                                <th>Local</th>\r\n                                <th>Direccion</th>\r\n                                <th>Telefono</th>\r\n                                <th>Horario</th>\r\n                                <th>IP</th>\r\n                                <th>MAC</th>\r\n                            </tr>                                           \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.locales.map(loc =>{\r\n                                return(\r\n                                    <tr key={loc.id}>\r\n                                        <td>{loc.id}</td>\r\n                                        <td>{loc.codigoLocal}</td>\r\n                                        {/*<td>{loc.codigoSucursal}</td>*/}\r\n                                        <td>{loc.nombreSucursal}</td>\r\n                                        {/*<td>{loc.codigoTipoLocal}</td>*/}\r\n                                        <td>{loc.nombreTipoLocal}</td>\r\n                                        <td>{loc.nombreLocal}</td>\r\n                                        <td>{loc.direccionLocal}</td>\r\n                                        <td>{loc.numeroTelefono}</td>\r\n                                        <td>{loc.horarioAtencion}</td>\r\n                                        <td>{loc.ipLocal}</td>\r\n                                        <td>{loc.macLocal}</td>\r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","// AUTH: JORGE M\r\n// SUCURSAL API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/sucursales/';\r\n\r\n// LISTAR SUCURSALES\r\nexport function get_Sucursal_Lista(){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// LISTAR SUCURSALES POR CODIGO\r\nexport function get_Sucursal(codigoSucursal){ \r\n    const urlFetch = BaseUrl + codigoSucursal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//ELIMINAR SUCURSAL CODIGO\r\nexport function del_Sucursal(codigoSucursal){ \r\n    const urlFetch = BaseUrl + codigoSucursal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR SUCURSAL\r\nexport function post_Sucursal(sucursal){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(sucursal),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR SUCURSAL\r\nexport function put_Sucursal(sucursal){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(sucursal),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nexport class ProductoLista extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            productos : props.productos\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"Producto\",\r\n                Cell: props =>{\r\n                    return(\r\n                        <div>\r\n                           <span> {props.original.descripcionProducto + \" - \" +props.original.detalleProducto}</span>\r\n                           <br></br>\r\n                           <span><b>{\" Stock: \"}</b>{props.original.stockExistente}</span>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        ]\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card \">\r\n                    <div className=\"card-header\">\r\n                        <h3>Productos en Existencia</h3>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <ReactTable\r\n                            columns = {columns}\r\n                            noDataText = {\"Cargando Datos...\"}\r\n                            data = {this.state.productos}\r\n                            filterable\r\n                            defaultPageSize={5}\r\n                            showPaginationTop={true}\r\n                            showPaginationBottom={false}\r\n                        >\r\n                        </ReactTable>\r\n                    </div>   \r\n                </div>             \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductoLista\r\n","import React, { Component} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\n\r\nimport { Modal , ModalHeader, ModalBody, Alert } from 'reactstrap';\r\n\r\nimport data from '../../../db_data';\r\nimport ExportToExcel from \"../../Export/excel/Local\";\r\n\r\nimport { get_Local_Tipo_Lista ,  get_Local , del_Local , post_Local, put_Local } from '../../Data/LocalData';\r\n\r\nimport { get_Tipo_Local_Lista } from '../../Data/tiposData';\r\nimport { get_Sucursal_Lista } from '../../Data/SucursalData';\r\n\r\n\r\nimport ProductoLista from \"../Producto/ProductoLista\";\r\n\r\n//import { get_Producto_Precio_Venta_Local_Lista } from '../../Data/productoData';\r\nimport { get_Producto_Local_Venta_Lista } from '../../Data/productoData';\r\n\r\nimport Menu from '../../Pages/menu'\r\n\r\nexport default class LocalLista extends Component {\r\n\r\n    BaseUrl = data + '/api/locales';\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            local:{\r\n                codigoLocal : \"\",\r\n                codigoSucursal : \"\",\r\n                codigoTipoLocal : \"\",\r\n                nombreLocal : \"\",\r\n                direccionLocal : \"\",\r\n                numeroTelefono : \"\",\r\n                horarioAtencion : \"\",\r\n                ipLocal : \"\",\r\n                macLocal : \"\",\r\n\r\n                nombreTipoLocal:\"Seleccione Tipo\",\r\n                nombreSucursal:\"Seleccione Sucursal\",\r\n            },\r\n        \r\n            locales:[],\r\n            localExcel:[],\r\n            filtered:[],\r\n        \r\n            sucursales:[],\r\n            tiposLocales:[],\r\n        \r\n            productos:[],\r\n            modalListaProductosOpen : false,\r\n\r\n            message : {\r\n                text:'',\r\n                alert: ''\r\n            },\r\n            messageActivo:false,\r\n            tipoAccion:\"post\",\r\n            modalFormOpen: false,\r\n            tituloModal:\"\",\r\n            nombreTipoLocal: props.nombreTipoLocal,\r\n\r\n            modalConfirmarOpen: false,\r\n            tipoEliminar : \"\",\r\n            codigoLocalEliminar : \"\",\r\n\r\n        };\r\n        this.setLocal = this.setLocal.bind(this);\r\n        this.toogleModalListaProducto = this.toogleModalListaProducto.bind(this);\r\n    }\r\n\r\n    toogleModalConfirmar = () => {\r\n        this.setState({ modalConfirmarOpen : ! this.state.modalConfirmarOpen });\r\n    }\r\n\r\n    mostrarModal = (codigoLocalEliminar) => {\r\n        this.setState({ codigoLocalEliminar : codigoLocalEliminar });\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    borrarConfirmado = () => {\r\n        const { codigoLocalEliminar } = this.state;\r\n        this.eliminiarLocal(codigoLocalEliminar);\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    setLocal(e){\r\n        const { local } = this.state;\r\n        local[e.target.id] = e.target.value;\r\n        this.setState({ local });\r\n    }\r\n\r\n    onFilteredChangeCustom = (value, accessor) => {\r\n        let filtered = this.state.filtered;\r\n        let insertNewFilter = 1;\r\n    \r\n        if (filtered.length) {\r\n          filtered.forEach((filter, i) => {\r\n            if (filter[\"id\"] === accessor) {\r\n              if (value === \"\" || !value.length) filtered.splice(i, 1);\r\n              else filter[\"value\"] = value;\r\n              insertNewFilter = 0;\r\n            }\r\n          });\r\n        }\r\n    \r\n        if (insertNewFilter) {\r\n          filtered.push({ id: accessor, value: value });\r\n        }\r\n    \r\n        this.setState({ filtered: filtered });\r\n    };\r\n\r\n    mostrarAlerta = (tiempo) => {\r\n        setTimeout(()=>{\r\n            this.setState({ message : { text : '' , alert : ''} });            \r\n        },tiempo);\r\n    }\r\n    cambiarAlerta(message){\r\n        this.setState({ message:message });\r\n        this.mostrarAlerta(3000);  \r\n    }\r\n\r\n    toogleModalListaProducto(){\r\n        this.setState({\r\n            modalListaProductosOpen : ! this.state.modalListaProductosOpen\r\n        });\r\n    }\r\n\r\n    toogleModalForm(){   \r\n        this.setState({\r\n            modalFormOpen : ! this.state.modalFormOpen,\r\n        });\r\n        if(!this.state.modalFormOpen){\r\n            this.listarLocal(this.state.nombreTipoLocal);\r\n        }     \r\n    }\r\n\r\n    verificarAccion(codigoLocal,tituloModal){\r\n        if(codigoLocal !== null && codigoLocal !== \"\"){\r\n            get_Local(codigoLocal).then(res =>{\r\n                if(res[0]){\r\n                    this.setState({\r\n                        local:res[0],\r\n                        tipoAccion:\"put\",        \r\n                        tituloModal: tituloModal\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            this.setState({ \r\n                tipoAccion:\"post\",\r\n                tituloModal: tituloModal\r\n            });\r\n        }\r\n        this.toogleModalForm();\r\n    }\r\n\r\n\r\n    eliminiarLocal = (codigoLocal) => {\r\n        del_Local(codigoLocal)\r\n        .then(res => {\r\n            this.listarLocal(this.state.nombreTipoLocal);\r\n        });\r\n    }\r\n\r\n    guardarLocal = () =>{\r\n        const { local } = this.state;\r\n        const message = {\r\n            text:\"Algo salio mal vuelve a intertarlo\",\r\n            alert:\"danger\"  \r\n        };        \r\n        switch (this.state.tipoAccion) {\r\n            case \"post\":\r\n                post_Local(local).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se guardo correctamente\";\r\n                    this.toogleModalForm();\r\n                });\r\n                break;\r\n            case \"put\":\r\n                put_Local(local).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se modifico correctamente\";\r\n                    this.toogleModalForm();\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    listarLocal(nombreTipoLocal){\r\n        if(nombreTipoLocal !== \"\" && nombreTipoLocal !== null){\r\n            get_Local_Tipo_Lista(nombreTipoLocal, \"\").then(res => {\r\n                this.setState({ locales : res })\r\n            });\r\n        }\r\n    }\r\n\r\n    listarSucursal(){\r\n        get_Sucursal_Lista()\r\n        .then( res => {\r\n            this.setState({ sucursales : res });\r\n        });\r\n    }\r\n\r\n    listarTipoLocal(){\r\n        get_Tipo_Local_Lista()\r\n        .then( res => {\r\n            this.setState({ tiposLocales : res });\r\n        });\r\n    }\r\n\r\n    listarProducto(codigoLocalSeleccionado){\r\n        if(!this.state.modalListaProductosOpen){\r\n            get_Producto_Local_Venta_Lista(codigoLocalSeleccionado)\r\n            .then(res => {\r\n                this.setState({ productos : res }, () => this.toogleModalListaProducto());\r\n            });\r\n        }\r\n    }\r\n\r\n    llenarListas(){\r\n        this.listarLocal(this.state.nombreTipoLocal);\r\n        this.listarSucursal();\r\n        this.listarTipoLocal();\r\n        //this.listarProducto(codigoLocal);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.llenarListas();\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"ID\",\r\n                accessor: \"id\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"CODIGO LOCAL\",\r\n                accessor: \"codigoLocal\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"CODIGO SUCURSAL\",\r\n                accessor: \"codigoSucursal\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"CODIGO TIPO LOCAL\",\r\n                accessor: \"codigoTipoLocal\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"MAC LOCAL\",\r\n                accessor: \"macLocal\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"IP LOCAL\",\r\n                accessor: \"ipLocal\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"LOCAL\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell : props => {\r\n                    return (\r\n                        <div className = \"container\">\r\n                            <span>{props.original.nombreTipoLocal + \" : \" + props.original.nombreSucursal}</span>\r\n                            <span>{props.original.nombreLocal + \" : \" + props.original.direccionLocal}</span>\r\n                            <span>{props.original.numeroTelefono  + \" : \" + props.original.horarioAtencion}</span>\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header:\"ACCIONES\",\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-4\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                        onClick={() => this.mostrarModal(props.original.codigoLocal)}\r\n                                    >Borrar</button>\r\n                                </div>\r\n                                <div className=\"col-md-4 ml-auto\">\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick = {() => this.verificarAccion(props.original.codigoLocal,\"MODIFICAR\")}\r\n                                    >Editar</button>\r\n                                </div>\r\n                                <div className=\"col-md-4 ml-auto\">\r\n                                    <button className=\"btn btn-info\"\r\n                                        onClick = {() => this.listarProducto(props.original.codigoLocal)}\r\n                                    >Productos</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                },                \r\n                sortable: false,\r\n                filterable: false\r\n            }\r\n        ]\r\n        let buttonCard = {\r\n            cursor: 'pointer'\r\n        };\r\n        return (\r\n            <Menu>\r\n            <div className=\"container p-4\">\r\n                {/*<MaterialTable></MaterialTable>*/}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-11 mx-auto\">\r\n                        <div className=\"card \">\r\n                            <div className=\"card-header\">\r\n                                <h3>{this.state.nombreTipoLocal}(S) EN EXISTENCIA</h3>\r\n                            </div>    \r\n                            <div className=\"m-2 text-center\">\r\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>{ this.state.message.text}</Alert> ) : '' }\r\n                            </div>                      \r\n                            <div className=\"row m-2\">\r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card text-white bg-info\">\r\n                                        <div className=\"card-header\">Registrar</div>\r\n                                        <button className=\"btn card-body text-white text-justify\"\r\n                                            onClick={()=>{\r\n                                                this.verificarAccion(\"\",\"REGISTRAR\")\r\n                                            }}\r\n                                        >Tipo de Local.</button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card bg-success text-white\">\r\n                                        <div className=\"card-header\">Exportar</div>\r\n                                        <ReactHTMLTableExcel\r\n                                            id=\"test-table-xls-button\"\r\n                                            className=\"btn card-body text-white text-justify\"\r\n                                            table=\"table-to-xls\"\r\n                                            filename=\"LocalExcel\"\r\n                                            sheet=\"hoja 1\"\r\n                                            buttonText=\"A Documento Excel.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ReactTable\r\n                                    columns = {columns}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.locales}\r\n                                    filterable\r\n                                    filtered = {this.state.filtered}\r\n                                    onFilteredChange = {(filtered, column, value) => {\r\n                                        this.onFilteredChangeCustom(value, column.id || column.accessor);\r\n                                      }}\r\n                                      defaultFilterMethod={(filter, row, column) => {\r\n                                        const id = filter.pivotId || filter.id;\r\n                                        if (typeof filter.value === \"object\") {\r\n                                          return row[id] !== undefined\r\n                                            ? filter.value.indexOf(row[id]) > -1\r\n                                            : true;\r\n                                        } else {\r\n                                          return row[id] !== undefined\r\n                                            ? String(row[id]).indexOf(filter.value) > -1\r\n                                            : true;\r\n                                        }\r\n                                      }}\r\n                                    defaultPageSize={5}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                >\r\n                                {(state, filtredData, instance)=>{\r\n                                    this.reactTable = state.pageRows.map(\r\n                                        local => {return local._original});\r\n                                    return(\r\n                                        <div>\r\n                                            {filtredData()}\r\n                                            <ExportToExcel locales = {this.reactTable}/>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                </ReactTable>\r\n                            </div>\r\n\r\n                            <Modal \r\n                                isOpen={this.state.modalListaProductosOpen}\r\n                                centered={true}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModalListaProducto.bind(this)}>Productos en Existencia</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <ProductoLista productos = { this.state.productos }></ProductoLista>\r\n                                </ModalBody>\r\n                            </Modal>\r\n\r\n                            <Modal \r\n                                isOpen={this.state.modalFormOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModalForm.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <div className=\"card \">\r\n                                        <div className=\"card-header text-center\">\r\n                                            <h3>Local</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body \">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"codigoSucursal\"> Sucursal: </label>\r\n                                                    <select className={\"form-control custom-select \"} id=\"codigoSucursal\" onChange={this.setLocal}>\r\n                                                        <option value = {this.state.local.codigoSucursal}>\r\n                                                                {this.state.local.nombreSucursal}\r\n                                                        </option>\r\n                                                        {this.state.sucursales.map( sucursal =>\r\n                                                            <option key={sucursal.id} value={sucursal.codigoSucursal}>{sucursal.nombreSucursal}</option>\r\n                                                        )}\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"codigoTipoLocal\"> Local: </label>\r\n                                                    <select className={\"form-control custom-select \"} id=\"codigoTipoLocal\" onChange={this.setLocal}>\r\n                                                        <option value = {this.state.local.codigoTipoLocal}>\r\n                                                                {this.state.local.nombreTipoLocal}\r\n                                                        </option>\r\n                                                        {this.state.tiposLocales.map( tpLoc =>\r\n                                                            <option key={tpLoc.id} value={tpLoc.codigoTipoLocal}>{tpLoc.nombreTipoLocal}</option>\r\n                                                        )}\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"nombreLocal\"> Nombre: </label>\r\n                                                    <input id= \"nombreLocal\" className=\"form-control\" type=\"text\" value={this.state.local.nombreLocal}\r\n                                                        onChange={this.setLocal}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"direccionLocal\"> Direccion: </label>\r\n                                                    <input id= \"direccionLocal\" className=\"form-control\" type=\"text\" value={this.state.local.direccionLocal}\r\n                                                        onChange={this.setLocal}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"numeroTelefono\"> Telefono: </label>\r\n                                                    <input id= \"numeroTelefono\" className=\"form-control\" type=\"text\" value={this.state.local.numeroTelefono}\r\n                                                        onChange={this.setLocal}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"horarioAtencion\"> Horario: </label>\r\n                                                    <input id= \"horarioAtencion\" className=\"form-control\" type=\"text\" value={this.state.local.horarioAtencion}\r\n                                                        onChange={this.setLocal}\r\n                                                    />\r\n                                                </div>\r\n                                                <div hidden={true} className=\"col-md-6 form-group\">\r\n                                                    <label for=\"ipLocal\"> IP: </label>\r\n                                                    <input id= \"ipLocal\" className=\"form-control\" type=\"text\" value={this.state.local.ipLocal}\r\n                                                        onChange={this.setLocal}\r\n                                                    />\r\n                                                </div>\r\n                                                <div hidden={true} className=\"col-md-6 form-group\">\r\n                                                    <label for=\"macLocal\"> MAC: </label>\r\n                                                    <input id= \"macLocal\" className=\"form-control\" type=\"text\" value={this.state.local.macLocal}\r\n                                                        onChange={this.setLocal}\r\n                                                    />\r\n                                                </div>\r\n                                            </div> \r\n                                            <div className=\"text-center\">\r\n                                                <button className=\"btn btn-primary\"\r\n                                                    onClick={this.guardarLocal}\r\n                                                > REGISTRAR </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                            <Modal \r\n                                    isOpen={this.state.modalConfirmarOpen}\r\n                                    centered={true}\r\n                                    size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModalConfirmar.bind(this)}>Alerta</ModalHeader>    \r\n                                <ModalBody>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row justify-content-center text-center\">\r\n                                            <div className=\"col-md-12 mb-4\">\r\n                                                <span>Se eliminar√° el Registro, ¬øDesea Continuar? </span>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <button className=\"btn btn-danger\"\r\n                                                    onClick={this.borrarConfirmado}\r\n                                                >Eliminar</button>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <button className=\"btn btn-info\"\r\n                                                    onClick = {this.toogleModalConfirmar.bind(this)}\r\n                                                >Cancelar</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n/*\r\n<ModalBody>\r\n    <div className=\"card \">\r\n        <div className=\"card-header text-center\">\r\n            <h3>Local de Indentidad</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n            <form>\r\n                <div>\r\n                    <label for=\"nombreLocal\"> Nombre Local: </label>\r\n                    <input id= \"nombreLocal\" type=\"text\" value={this.state.LocalSeleccionado.nombreLocal} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'nombreLocal') }\r\n                    />\r\n                    <label for=\"cantidadCaracteres\"> Caracteres: </label>\r\n                    <input id= \"cantidadCaracteres\" type=\"text\" value={this.state.LocalSeleccionado.cantidadCaracteres} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'cantidadCaracteres') }\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={this.save}\r\n                    > REGISTRAR </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ModalBody>\r\n\r\n\r\n{(state, filtredData, instance)=>{\r\n    this.reactTable = state.pageRows.map(\r\n        Local => {return Local._original});\r\n    return(\r\n        <div>\r\n            {filtredData()}\r\n            <ExportToExcel tpLocal={this.reactTable}/>\r\n        </div>\r\n    )\r\n}}\r\n\r\n    <div className=\"col-sm\" style={buttonCard}>\r\n        <div className=\"card bg-success text-white\">\r\n            <div className=\"card-header\">Exportar</div>\r\n            <ReactHTMLTableExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"btn card-body text-white text-justify\"\r\n                table=\"table-to-xls\"\r\n                filename=\"filtredData\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"A Local Excel.\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n*/","import React, { Component } from 'react';\r\n\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>TPD ID</th>\r\n                                <th>Codigo</th>\r\n                                <th>Sucursal</th>  \r\n                            </tr>                \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.sucursales.map(suc =>{\r\n                                return(\r\n                                    <tr key={suc.id}>\r\n                                        <td>{suc.id}</td>\r\n                                        <td>{suc.codigoSucursal}</td>\r\n                                        <td>{suc.nombreSucursal}</td>  \r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","import React, { Component} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\n\r\nimport { Modal , ModalHeader, ModalBody, Alert } from 'reactstrap';\r\n\r\nimport data from '../../../db_data';\r\nimport ExportToExcel from \"../../Export/excel/Sucursal\";\r\n\r\nimport { post_Sucursal, put_Sucursal, del_Sucursal , get_Sucursal , get_Sucursal_Lista} from '../../Data/SucursalData';\r\nimport Menu from '../../Pages/menu';\r\n\r\nexport default class SucursalLista extends Component {\r\n\r\n    BaseUrl = data + '/api/sucursales';\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            sucursal:[],\r\n            filtered:[],\r\n            SucursalExcel:[],\r\n            message : {\r\n                text:'',\r\n                alert: ''\r\n            },\r\n            messageActivo:false,\r\n\r\n            codigoSucursal: \"\",\r\n            nombreSucursal: \"\",\r\n\r\n            tipoAccion:\"post\",\r\n            modalOpen: false,\r\n            tituloModal:\"\"\r\n        }\r\n    }\r\n\r\n    onFilteredChangeCustom = (value, accessor) => {\r\n        let filtered = this.state.filtered;\r\n        let insertNewFilter = 1;\r\n    \r\n        if (filtered.length) {\r\n          filtered.forEach((filter, i) => {\r\n            if (filter[\"id\"] === accessor) {\r\n              if (value === \"\" || !value.length) filtered.splice(i, 1);\r\n              else filter[\"value\"] = value;\r\n              insertNewFilter = 0;\r\n            }\r\n          });\r\n        }\r\n    \r\n        if (insertNewFilter) {\r\n          filtered.push({ id: accessor, value: value });\r\n        }\r\n    \r\n        this.setState({ filtered: filtered });\r\n      };\r\n    \r\n\r\n    listarSucursal(codigoSucursal){\r\n        if(codigoSucursal !== \"\" && codigoSucursal !== null){\r\n            get_Sucursal(codigoSucursal).then(res => {\r\n                this.setState({ sucursal : res })\r\n            });\r\n        }else{\r\n            get_Sucursal_Lista().then(res => {\r\n                this.setState({ sucursal : res})\r\n            });\r\n        }\r\n    }\r\n\r\n    cambiarAlerta(message){\r\n        this.setState({ message:message });\r\n        this.mostrarAlerta(3000);  \r\n    }\r\n\r\n    guardarSucursal = () =>{\r\n        const { nombreSucursal, codigoSucursal } = this.state;\r\n        const sucursal = {nombreSucursal, codigoSucursal };\r\n        const message = {\r\n            text:\"Algo salio mal vuelve a intertarlo\",\r\n            alert:\"danger\"  \r\n        };        \r\n        switch (this.state.tipoAccion) {\r\n            case \"post\":\r\n                post_Sucursal(sucursal).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se guardo correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            case \"put\":\r\n                put_Sucursal(sucursal).then((result)=>{\r\n                    message.alert = \"success\";\r\n                    message.text = \"Se modifico correctamente\";\r\n                    this.toogleModal();\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    eliminarSucursal(codigoSucursal){\r\n        const message = { text : \"\" , alert : \"\" };\r\n        if(codigoSucursal !== \"\" && codigoSucursal !== null){\r\n            del_Sucursal(codigoSucursal).then(res => {\r\n                message.alert = \"danger\";\r\n                message.text = \"Se elimino correctamente\";\r\n                this.listarSucursal(\"\");         \r\n            });\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    setValues = (e , field) => {       \r\n        this.setState({ [field]: e.target.value });\r\n    }\r\n\r\n    verificarAccion(codigoSucursal,tituloModal){\r\n        if(codigoSucursal !== null && codigoSucursal !== \"\"){\r\n            get_Sucursal(codigoSucursal).then(res =>{\r\n                if(res[0]){    \r\n                    this.setState({\r\n                        nombreSucursal:res[0].nombreSucursal,\r\n                        codigoSucursal:res[0].codigoSucursal,\r\n                        tipoAccion:\"put\",        \r\n                        tituloModal: tituloModal\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            this.setState({ \r\n                nombreSucursal:\"\",\r\n                codigoSucursal:\"\",\r\n                tipoAccion:\"post\",\r\n                tituloModal: tituloModal\r\n            });\r\n        }\r\n        this.toogleModal();\r\n    }\r\n    toogleModal(){   \r\n        this.setState({\r\n            modalOpen : ! this.state.modalOpen,\r\n        });\r\n        if(!this.state.modalOpen){\r\n            this.listarSucursal(\"\");\r\n        } \r\n    }\r\n\r\n    mostrarAlerta = (tiempo) => {\r\n        setTimeout(()=>{\r\n            this.setState({ message : { text : '' , alert : ''} });            \r\n        },tiempo);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.listarSucursal(\"\");\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"ID\",\r\n                accessor: \"id\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:false\r\n            },\r\n            {\r\n                Header: \"CODIGO\",\r\n                accessor: \"codigoSucursal\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"Local\",\r\n                accessor: \"nombreSucursal\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header:\"ACCIONES\",\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-5\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                        onClick={() =>{\r\n                                            this.eliminarSucursal(props.original.codigoSucursal);\r\n                                        }}\r\n                                    >Borrar</button>\r\n                                </div>\r\n                                <div className=\"col-md-5 ml-auto\">\r\n                                    <button className=\"btn btn-warning\"\r\n                                    onClick={\r\n                                        e => this.verificarAccion(props.original.codigoSucursal,\"Modificar\")                                           \r\n                                    }>Editar</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                },                \r\n                sortable: false,\r\n                filterable: false\r\n            }\r\n        ]\r\n        let buttonCard = {\r\n            cursor: 'pointer'\r\n        };\r\n        return (\r\n            <Menu>\r\n            <div className=\"container p-4\">\r\n                {/*<MaterialTable></MaterialTable>*/}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-11 mx-auto\">\r\n                        <div className=\"card \">\r\n                            <div className=\"card-header\">\r\n                                <h3>Sucursales Registrados</h3>\r\n                            </div>\r\n                            <div className=\"m-2 text-center\">\r\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>{ this.state.message.text}</Alert> ) : '' }\r\n                            </div>                            \r\n                            <div className=\"row m-2\">\r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card text-white bg-info\"\r\n                                        onClick={()=>{\r\n                                            this.verificarAccion(\"\",\"Registrar\")\r\n                                            //this.ver();\r\n                                    }}>\r\n                                    <div className=\"card-header\">Registrar</div>\r\n                                        <button className=\"btn card-body text-white text-justify\">Sucursal.</button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card bg-success text-white\">\r\n                                        <div className=\"card-header\">Exportar</div>\r\n                                        <ReactHTMLTableExcel\r\n                                            id=\"test-table-xls-button\"\r\n                                            className=\"btn card-body text-white text-justify\"\r\n                                            table=\"table-to-xls\"\r\n                                            filename=\"SucursalExcel\"\r\n                                            sheet=\"hoja 1\"\r\n                                            buttonText=\"A Documento Excel.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ReactTable\r\n                                    columns = {columns}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.sucursal}\r\n                                    filterable\r\n                                    filtered = {this.state.filtered}\r\n                                    onFilteredChange = {(filtered, column, value) => {\r\n                                        this.onFilteredChangeCustom(value, column.id || column.accessor);\r\n                                      }}\r\n                                      defaultFilterMethod={(filter, row, column) => {\r\n                                        const id = filter.pivotId || filter.id;\r\n                                        if (typeof filter.value === \"object\") {\r\n                                          return row[id] !== undefined\r\n                                            ? filter.value.indexOf(row[id]) > -1\r\n                                            : true;\r\n                                        } else {\r\n                                          return row[id] !== undefined\r\n                                            ? String(row[id]).indexOf(filter.value) > -1\r\n                                            : true;\r\n                                        }\r\n                                      }}\r\n                                    defaultPageSize={5}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                >\r\n                                {(state, filtredData, instance)=>{\r\n                                    this.reactTable = state.pageRows.map(\r\n                                        sucursal => {return sucursal._original});\r\n                                    return(\r\n                                        <div>\r\n                                            {filtredData()}\r\n                                            <ExportToExcel sucursales = { this.reactTable }/>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                </ReactTable>\r\n                            </div>\r\n                            <Modal \r\n                                isOpen={this.state.modalOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModal.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <div className=\"card \">\r\n                                        <div className=\"card-header text-center\">\r\n                                            <h3>Tipo de Local</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body \">\r\n                                            {/*<form>*/}\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"nombreSucursal\"> Nombre Local: </label>\r\n                                                    <input className=\"form-control\" id= \"nombreSucursal\" type=\"text\" placeholder=\"Ejemplo: Almacen\"\r\n                                                        value = {this.state.nombreSucursal} \r\n                                                        onChange = { e => this.setValues(e,'nombreSucursal') }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"text-center\">\r\n                                                    <button className=\"btn btn-primary\"\r\n                                                        onClick={this.guardarSucursal}\r\n                                                    > REGISTRAR </button>\r\n                                                </div>\r\n                                            {/*</form>*/}\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n/*\r\n<ModalBody>\r\n    <div className=\"card \">\r\n        <div className=\"card-header text-center\">\r\n            <h3>Local de Indentidad</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n            <form>\r\n                <div>\r\n                    <label for=\"nombreSucursal\"> Nombre Local: </label>\r\n                    <input id= \"nombreSucursal\" type=\"text\" value={this.state.SucursalSeleccionado.nombreSucursal} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'nombreSucursal') }\r\n                    />\r\n                    <label for=\"cantidadCaracteres\"> Caracteres: </label>\r\n                    <input id= \"cantidadCaracteres\" type=\"text\" value={this.state.SucursalSeleccionado.cantidadCaracteres} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'cantidadCaracteres') }\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={this.save}\r\n                    > REGISTRAR </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ModalBody>\r\n\r\n\r\n{(state, filtredData, instance)=>{\r\n    this.reactTable = state.pageRows.map(\r\n        Sucursal => {return Sucursal._original});\r\n    return(\r\n        <div>\r\n            {filtredData()}\r\n            <ExportToExcel tpLocal={this.reactTable}/>\r\n        </div>\r\n    )\r\n}}\r\n\r\n    <div className=\"col-sm\" style={buttonCard}>\r\n        <div className=\"card bg-success text-white\">\r\n            <div className=\"card-header\">Exportar</div>\r\n            <ReactHTMLTableExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"btn card-body text-white text-justify\"\r\n                table=\"table-to-xls\"\r\n                filename=\"filtredData\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"A Local Excel.\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n*/","import React, { Component } from 'react';\r\n\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>TPD ID</th>\r\n                                <th>Codigo</th>\r\n                                <th>Nombre</th>  \r\n                                <th>Trabajador</th>\r\n                                <th>Ultimo Ingreso</th>\r\n                            </tr>                \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.usuarios.map(usu =>{\r\n                                return(\r\n                                    <tr key={usu.id}>\r\n                                        <td>{usu.id}</td>\r\n                                        <td>{usu.codigoUsuario}</td>\r\n                                        <td>{usu.nombreUsuario}</td>                                        \r\n                                        <td>{usu.codigoTrabajador}</td>       \r\n                                        <td>{usu.ultimoIngreso}</td>     \r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","// AUTH: JORGE M\r\n// TRABAJADOR API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/trabajadores/';\r\n\r\n// LISTAR TRABAJADORES\r\nexport function get_Trabajador_Lista(){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n \r\n// LISTAR TRABAJADOR POR CODIGO\r\nexport function get_Trabajador(codigoTrabajador){ \r\n    const urlFetch = BaseUrl + codigoTrabajador;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//ELIMINAR TRABAJADOR CODIGO\r\nexport function del_Trabajador(codigoTrabajador){ \r\n    const urlFetch = BaseUrl + codigoTrabajador;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//GUARDAR TRABAJADOR\r\nexport function post_Trabajador(Trabajador){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(Trabajador),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR TRABAJADOR\r\nexport function put_Trabajador(Trabajador){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(Trabajador),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n","import React, { Component } from 'react'\r\nimport { get_Usuario_Conexiones } from '../../Data/UsuarioData';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nexport class UsuarioConexiones extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            codigoUsuario: props.codigoUsuario,\r\n            conexionesUsuario:[]\r\n        }\r\n    }\r\n    listarConexiones(){\r\n        const { codigoUsuario } = this.state;\r\n        get_Usuario_Conexiones(codigoUsuario)\r\n        .then(res => {\r\n            this.setState({ conexionesUsuario : res });\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        this.listarConexiones();\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"LOCAL\",\r\n                accessor: \"nombreLocal\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"ESTADO\",\r\n                Cell: props => {\r\n                    if(props.original.conexionUsuario === props.original.estadoSesion){\r\n                        if(props.original.estadoSesion){\r\n                            return(<span>Conectado</span>)\r\n                        }                       \r\n                    }else{\r\n                        return(\r\n                        <span>Desconectado</span>)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                Header: \"F. INGRESO\",\r\n                accessor: \"fechaIngreso\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"F. SALIDA\",\r\n                accessor: \"fechaSalida\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n        ]\r\n        return (\r\n            <div>\r\n                <ReactTable\r\n                    columns = {columns}\r\n                    noDataText = {\"Cargando Datos...\"}\r\n                    data = {this.state.conexionesUsuario}\r\n                    filterable\r\n                    defaultPageSize={5}\r\n                    showPaginationTop={true}\r\n                    showPaginationBottom={false}\r\n                >\r\n                </ReactTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsuarioConexiones\r\n","import React, { Component} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\n\r\nimport { Modal , ModalHeader, ModalBody, Alert } from 'reactstrap';\r\n\r\nimport data from '../../../db_data';\r\nimport ExportToExcel from \"../../Export/excel/Usuario\";\r\n\r\nimport { post_Usuario, put_Usuario, del_Usuario , get_Usuario , get_Usuario_Lista , get_Usuario_Trabajador } from '../../Data/UsuarioData';\r\nimport { get_Trabajador , del_Trabajador , post_Trabajador , put_Trabajador  } from '../../Data/TrabajadorData';\r\n\r\n\r\nimport UsuarioConexion from './UsuarioConexiones';\r\nimport { get_Tipo_Media_Nombre, get_Tipo_Documento_Lista } from '../../Data/tiposData';\r\nimport { post_Media, post_Media_File } from '../../Data/MediaData';\r\n\r\n\r\nconst usuarioIncial = {\r\n    codigoUsuario : \"\",\r\n    nombreUsuario : \"\",\r\n    contraUsuario : \"\",\r\n    codigoTrabajador : \"\",\r\n    codigoMedia : \"MED-00000000001\",\r\n    estadoUsuario : 1,\r\n    conexionUsuario : 0,\r\n}\r\n\r\nconst trabajadorInical = {\r\n    codigoTrabajador : \"\",\r\n    nombreTrabajador : \"\",\r\n    apePaTrabajador : \"\",\r\n    apeMaTrabajador : \"\",\r\n    codigoTipoDocumento : \"TP-DOC-001\",\r\n    nombreTipoDocumento :\"\",\r\n    numDocuTrabajador : \"\",\r\n    numTeleTrabajador : \"\",\r\n    correoTrabajador : \"\",\r\n    direccionTrabajador : \"\",\r\n    especialidadTrabajador : \"\",\r\n    estadoTrabajador : true,\r\n    fechaNacimiento : \"\",\r\n    codigoMedia : \"MED-00000000001\",\r\n    urlMedia:\"\",\r\n}\r\n\r\n\r\n\r\nexport default class UsuarioLista extends Component {\r\n\r\n    BaseUrl = data + '/api/usuarios';\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n\r\n            tiposDocumentos : [],\r\n\r\n            conexionesUsuario:[],\r\n            codigoUsuarioConexion:\"\",\r\n            \r\n            usuarios : [],\r\n            usuario : usuarioIncial,\r\n\r\n            trabajadores : [],\r\n            trabajador : trabajadorInical,\r\n\r\n            codigoMediaTrabajador:\"\",\r\n            codigoTrabajadorRegistrado:\"\",\r\n\r\n\r\n            media:{\r\n                codigoMedia:\"\",\r\n                nombreMedia:\"\",\r\n                altMedia:\"\",\r\n                urlMedia:\"\", \r\n                codigoTipoMedia:\"\",\r\n                codigoUsuario:\"\",\r\n            },\r\n\r\n            codigoTipoDocumento:\"\",\r\n\r\n            file:null,\r\n            nombreFile:\"\",\r\n\r\n            filtered:[],\r\n            UsuarioExcel:[],\r\n            message : {\r\n                text:'',\r\n                alert: ''\r\n            },\r\n            messageActivo:false,\r\n\r\n            tipoAccion:\"post\",\r\n            modalOpen: false,\r\n            modalUsuarioOpen:false,\r\n            modalConexionesOpen:false,\r\n\r\n            mostrarFormTrabajador:false,\r\n\r\n            tituloModal:\"\"\r\n        }\r\n    }\r\n\r\n    mostrarFormTrabajador = () => {\r\n        this.setState({\r\n            mostrarFormTrabajador : ! this.state.mostrarFormTrabajador\r\n        });\r\n    }\r\n\r\n    setFileMedia = e => {\r\n        let file = e.target.files[0];    \r\n        const nombreBusqueda = file.type.replace(\"/\",\"-\");\r\n        const { media } = this.state;\r\n        const codigoUsuario  = localStorage.getItem('codigoUsuario');\r\n        get_Tipo_Media_Nombre(nombreBusqueda).then((result)=>{\r\n            media[\"codigoTipoMedia\"] = result[0].codigoTipoMedia;\r\n            media[\"nombreMedia\"] = file.name;\r\n            media[\"altMedia\"] = file.name;\r\n            media[\"urlMedia\"] = \"/img/\" + file.name;\r\n            media[\"codigoUsuario\"] = codigoUsuario;\r\n            this.setState({\r\n                file : file,\r\n                media: media,\r\n                nombreFile : file.name\r\n            });\r\n        });\r\n        \r\n    }\r\n    guardarMedia = () =>{\r\n        const { file , media } = this.state;\r\n        if(file !== null ){\r\n            post_Media(media).then((result)=>{\r\n                this.setState({ codigoMediaTrabajador  :result[0][0].codigoMedia });\r\n                post_Media_File(file).then((result)=>{\r\n                });\r\n                this.guardarUsuario();\r\n            });              \r\n        }\r\n    }\r\n\r\n    onFilteredChangeCustom = (value, accessor) => {\r\n        let filtered = this.state.filtered;\r\n        let insertNewFilter = 1;\r\n    \r\n        if (filtered.length) {\r\n          filtered.forEach((filter, i) => {\r\n            if (filter[\"id\"] === accessor) {\r\n              if (value === \"\" || !value.length) filtered.splice(i, 1);\r\n              else filter[\"value\"] = value;\r\n              insertNewFilter = 0;\r\n            }\r\n          });\r\n        }\r\n    \r\n        if (insertNewFilter) {\r\n          filtered.push({ id: accessor, value: value });\r\n        }\r\n    \r\n        this.setState({ filtered: filtered });\r\n    };\r\n\r\n    listarTiposDocumentos = () => {\r\n        get_Tipo_Documento_Lista()\r\n        .then( res => {\r\n            this.setState({\r\n                tiposDocumentos : res\r\n            });\r\n        });\r\n    }\r\n\r\n    listarTrabajador(){\r\n        //get_Trabajador_Lista()\r\n        //get_Usuario_Trabajador_Conexion(\"\")\r\n        get_Usuario_Trabajador(\"\")\r\n        .then( res => {\r\n            this.setState({ trabajadores : res});\r\n        });\r\n    }\r\n    \r\n\r\n    listarUsuario(codigoUsuario){\r\n        if(codigoUsuario !== \"\" && codigoUsuario !== null){\r\n            get_Usuario(codigoUsuario).then(res => {\r\n                this.setState({ usuarios : res })\r\n            });\r\n        }else{\r\n            get_Usuario_Lista().then(res => {\r\n                this.setState({ usuarios : res})\r\n            });\r\n        }\r\n    }\r\n\r\n    llenarListas(){\r\n        this.listarUsuario(\"\");\r\n        this.listarTrabajador();\r\n    }\r\n\r\n    cambiarAlerta(message){\r\n        this.setState({ message:message });\r\n        this.mostrarAlerta(3000);  \r\n    }\r\n\r\n    guardarUsuario2 = () => {\r\n        this.guardarMedia();\r\n    }\r\n\r\n    guardarUsuario = () =>{\r\n        const { usuario , trabajador} = this.state;\r\n        const message = {\r\n            text:\"Algo salio mal vuelve a intertarlo\",\r\n            alert:\"danger\"  \r\n        };\r\n        trabajador[\"codigoMedia\"] = this.state.codigoMediaTrabajador;\r\n        trabajador[\"estadoTrabajador\"] = 1;\r\n        switch (this.state.tipoAccion) {\r\n            case \"post\":\r\n                post_Trabajador(trabajador).then((res) => {\r\n                    this.setState({ \r\n                        codigoTrabajadorRegistrado:res[0][0].codigoTrabajador\r\n                    },() => { \r\n                        usuario[\"codigoTrabajador\"] = this.state.codigoTrabajadorRegistrado;\r\n                        usuario[\"codigoMedia\"] = \"MED-00000000001\";\r\n                        usuario[\"estadoUsuario\"] = 1;\r\n                        usuario[\"conexionUsuario\"] = 0;\r\n                        post_Usuario(usuario).then(res => {\r\n                            message.alert = \"success\";\r\n                            message.text = \"Se modifico correctamente\";\r\n                            this.toogleModalUsuario();\r\n                        });\r\n                     });\r\n                });\r\n                break;\r\n            case \"put\":\r\n                put_Usuario(usuario).then((result) => {\r\n                    put_Trabajador(trabajador).then((res) => {\r\n                        message.alert = \"success\";\r\n                        message.text = \"Se modifico correctamente\";\r\n                        this.toogleModalUsuario();\r\n                    });\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    eliminarUsuario(usuarioTrabajador){\r\n        const message = {\r\n            text:\"\",\r\n            alert:\"\"  \r\n        };\r\n        const { codigoUsuario , codigoTrabajador } = usuarioTrabajador;\r\n        if(codigoUsuario !== \"\" && codigoUsuario !== null){\r\n            del_Usuario(codigoUsuario).then(res => {\r\n                del_Trabajador(codigoTrabajador).then(res => {\r\n                    message.alert = \"danger\";\r\n                    message.text = \"Se elimino correctamente\";\r\n                    this.llenarListas();  \r\n                });       \r\n            });\r\n        }\r\n        this.cambiarAlerta(message);\r\n    }\r\n\r\n    setUsuario = (e) => {\r\n        const { usuario } = this.state;\r\n        usuario[e.target.id] = e.target.value;\r\n        this.setState({ usuario });\r\n    }\r\n\r\n    setTrabajador = (e) => {\r\n        const { trabajador } = this.state;\r\n        trabajador[e.target.id] = e.target.value;\r\n        this.setState({ trabajador }); \r\n    }\r\n\r\n    verificarAccion(usuario,tituloModal){\r\n        const { codigoUsuario , codigoTrabajador } = usuario;\r\n        if(codigoUsuario !== \"\" && codigoTrabajador !== \"\" && codigoUsuario !== null && codigoTrabajador !== null){\r\n            get_Usuario(codigoUsuario).then( resUsu => {\r\n                get_Trabajador(codigoTrabajador).then( resTra => {\r\n                    resTra[0].fechaNacimiento = resTra[0].fechaNacimiento.substring(0,10)\r\n                    this.setState({\r\n                        usuario: resUsu[0],\r\n                        trabajador : resTra[0],\r\n                        tipoAccion:\"put\",        \r\n                        tituloModal: tituloModal\r\n                    });\r\n                });\r\n            });    \r\n        }\r\n        else{\r\n            this.setState({ \r\n                usuario : usuarioIncial,\r\n                trabajador : trabajadorInical,\r\n                tipoAccion : \"post\",\r\n                tituloModal : tituloModal\r\n            });\r\n        }\r\n        this.toogleModalUsuario();\r\n    }\r\n\r\n    toogleModalUsuario(){   \r\n        this.setState({\r\n            modalUsuarioOpen : ! this.state.modalUsuarioOpen,\r\n        });\r\n        if(!this.state.modalUsuarioOpen){\r\n            this.llenarListas();\r\n        }        \r\n    }\r\n\r\n    toogleModalConexiones(){  \r\n        this.setState({\r\n            modalConexionesOpen : ! this.state.modalConexionesOpen,\r\n        });      \r\n    }\r\n\r\n    verificarAccionConexiones(codigoUsuario){\r\n        if(codigoUsuario !== \"\" && codigoUsuario !== null){\r\n            this.setState({ codigoUsuarioConexion : codigoUsuario });\r\n        }\r\n        this.toogleModalConexiones();\r\n    }\r\n\r\n\r\n    mostrarAlerta = (tiempo) => {\r\n        setTimeout(()=>{\r\n            this.setState({ message : { text : '' , alert : ''} });            \r\n        },tiempo);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.llenarListas();\r\n        this.listarTiposDocumentos();\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: \"ID_USUARIO\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props => { return(\r\n                    <span>{props.original.nombreUsuario}</span>\r\n                )}\r\n            },\r\n            {\r\n                Header: \"NOMBRES\",\r\n                //accessor: \"nombreTrabajador\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props => { return(\r\n                    <span>{props.original.nombreTrabajador}</span>\r\n                )}\r\n            },\r\n            {\r\n                Header: \"APELLIDOS\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell : props => { return(\r\n                    <div>\r\n                        <span>{props.original.apePaTrabajador +\" \" + props.original.apeMaTrabajador}</span>\r\n                    </div>\r\n                )}\r\n            },\r\n            {\r\n                Header: \"CONTACTO\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props => { return(\r\n                    <div>\r\n                        <span>{ props.original.correoTrabajador + \" \" + props.original.numTeleTrabajador}</span>\r\n                    </div>\r\n                )}\r\n            },\r\n            {\r\n                Header: \"CONEXI√ìN\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props => {\r\n                    \r\n                    if(props.original.conexionUsuario){\r\n                        return(\r\n                            <div>\r\n                                <span>Usuario Conectado</span>\r\n                            </div>\r\n                        )\r\n                    }else{\r\n                        return(\r\n                            <div>\r\n                                <span>Usuario Desconectado</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                Header:\"ACCIONES\",\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-3\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                        onClick={() =>{\r\n                                            this.eliminarUsuario(props.original);\r\n                                        }}\r\n                                    >Borrar</button>\r\n                                </div>\r\n                                <div className=\"col-md-3 ml-auto\">\r\n                                    <button className=\"btn btn-warning\"\r\n                                    onClick={\r\n                                        e => this.verificarAccion(props.original,\"Modificar\")                                           \r\n                                    }>Editar</button>\r\n                                </div>\r\n                                <div className=\"col-md-3 ml-auto\">\r\n                                    <button className=\"btn btn-info\"\r\n                                    onClick={\r\n                                        e => this.verificarAccionConexiones(props.original.codigoUsuario)}\r\n                                    >Conexiones</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                },                \r\n                sortable: false,\r\n                filterable: false\r\n            }\r\n        ]\r\n        let buttonCard = {\r\n            cursor: 'pointer'\r\n        };\r\n        return (\r\n            <div className=\"container p-4\">\r\n                {/*<MaterialTable></MaterialTable>*/}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-11 mx-auto\">\r\n                        <div className=\"card \">\r\n                            <div className=\"card-header\">\r\n                                <h3>Usuarios Registrados</h3>\r\n                            </div>\r\n                            <div className=\"m-2 text-center\">\r\n                                { this.state.message.text !==''?( <Alert color={this.state.message.alert}>{ this.state.message.text}</Alert> ) : '' }\r\n                            </div>                            \r\n                            <div className=\"row m-2\">\r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card text-white bg-info\"\r\n                                        onClick={()=>{\r\n                                            this.verificarAccion(\"\",\"Registrar\")\r\n                                            //this.ver();\r\n                                    }}>\r\n                                    <div className=\"card-header\">Registrar</div>\r\n                                        <button className=\"btn card-body text-white text-justify\">Usuario.</button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-sm\" style={buttonCard}>\r\n                                    <div className=\"card bg-success text-white\">\r\n                                        <div className=\"card-header\">Exportar</div>\r\n                                        <ReactHTMLTableExcel\r\n                                            id=\"test-table-xls-button\"\r\n                                            className=\"btn card-body text-white text-justify\"\r\n                                            table=\"table-to-xls\"\r\n                                            filename=\"UsuarioExcel\"\r\n                                            sheet=\"hoja 1\"\r\n                                            buttonText=\"A Documento Excel.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ReactTable\r\n                                    columns = {columns}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.trabajadores}\r\n                                    filterable\r\n                                    filtered = {this.state.filtered}\r\n                                    onFilteredChange = {(filtered, column, value) => {\r\n                                        this.onFilteredChangeCustom(value, column.id || column.accessor);\r\n                                      }}\r\n                                      defaultFilterMethod={(filter, row, column) => {\r\n                                        const id = filter.pivotId || filter.id;\r\n                                        if (typeof filter.value === \"object\") {\r\n                                          return row[id] !== undefined\r\n                                            ? filter.value.indexOf(row[id]) > -1\r\n                                            : true;\r\n                                        } else {\r\n                                          return row[id] !== undefined\r\n                                            ? String(row[id]).indexOf(filter.value) > -1\r\n                                            : true;\r\n                                        }\r\n                                      }}\r\n                                    defaultPageSize={5}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                >\r\n                                {(state, filtredData, instance)=>{\r\n                                    this.reactTable = state.pageRows.map(\r\n                                        Usuario => {return Usuario._original});\r\n                                    return(\r\n                                        <div>\r\n                                            {filtredData()}\r\n                                            <ExportToExcel usuarios = { this.reactTable }/>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                </ReactTable>\r\n                            </div>\r\n                            <Modal\r\n                                isOpen={this.state.modalConexionesOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModalConexiones.bind(this)}>Conexiones del Usuario</ModalHeader>\r\n                                <ModalBody>\r\n                                    \r\n                                    <UsuarioConexion codigoUsuario={this.state.codigoUsuarioConexion}></UsuarioConexion>\r\n\r\n\r\n                                </ModalBody>\r\n                            </Modal>\r\n                            <Modal \r\n                                isOpen={this.state.modalUsuarioOpen}\r\n                                centered={true}\r\n                                size={\"xm\"}\r\n                            >\r\n                                <ModalHeader toggle={this.toogleModalUsuario.bind(this)}>{this.state.tituloModal}</ModalHeader>    \r\n\r\n                                <ModalBody>\r\n                                    <div className=\"card \">\r\n                                        <div className=\"card-header text-center\">\r\n                                            <h3>Usuario</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body \">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"nombreUsuario\"> ID Usuario: </label>\r\n                                                    <input className=\"form-control\" id= \"nombreUsuario\" type=\"text\" placeholder=\"Ejemplo: Jorge\"\r\n                                                        value = {this.state.usuario.nombreUsuario} \r\n                                                        onChange = { e => this.setUsuario(e) }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-md-6 form-group\">\r\n                                                    <label for=\"contraUsuario\"> Contrase√±a: </label>\r\n                                                    <input className=\"form-control\" id= \"contraUsuario\" type=\"password\"\r\n                                                        onChange = { e => this.setUsuario(e) }\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-md-12 form-group\">\r\n                                                    <div class=\"form-check\">\r\n                                                        <input class=\"form-check-input position-static\" type=\"checkbox\" \r\n                                                            onChange = {this.mostrarFormTrabajador}\r\n                                                        />\r\n                                                        <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                                                            Registrar Datos de Trabajador\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"container\" hidden = {!this.state.mostrarFormTrabajador}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-6 form-group\">\r\n                                                            <label for=\"apePaTrabajador\"> AP Paterno: </label>\r\n                                                            <input className=\"form-control\" id= \"apePaTrabajador\" type=\"text\"\r\n                                                                value={this.state.trabajador.apePaTrabajador}\r\n                                                                onChange = { e => this.setTrabajador(e) }\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6 form-group\">\r\n                                                            <label for=\"apeMaTrabajador\"> AP Materno: </label>\r\n                                                            <input className=\"form-control\" id= \"apeMaTrabajador\" type=\"text\"\r\n                                                                value={this.state.trabajador.apeMaTrabajador}\r\n                                                                onChange = { e => this.setTrabajador(e) }\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6 form-group\">\r\n                                                            <label for=\"nombreTrabajador\"> Nombres: </label>\r\n                                                            <input className=\"form-control\" id= \"nombreTrabajador\" type=\"text\"\r\n                                                                value={this.state.trabajador.nombreTrabajador}\r\n                                                                onChange = { e => this.setTrabajador(e) }\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6 form-group\">\r\n                                                            <label for=\"numTeleTrabajador\"> Telefono: </label>\r\n                                                            <input className=\"form-control\" id= \"numTeleTrabajador\" type=\"text\"\r\n                                                                value={this.state.trabajador.numTeleTrabajador}\r\n                                                                onChange = { e => this.setTrabajador(e) }\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6 form-group\">\r\n                                                            <label for=\"codigoTipoDocumento\"> Documento: </label>\r\n                                                            <select className=\"form-control\" id=\"codigoTipoDocumento\"\r\n                                                                onChange = { e => this.setTrabajador(e) }\r\n                                                            >\r\n                                                                <option value={this.state.trabajador.codigoTipoDocumento}>{this.state.trabajador.nombreTipoDocumento}</option>\r\n                                                                {this.state.tiposDocumentos.map( tpDocu => { return (\r\n                                                                    <option key={tpDocu.id} value={tpDocu.codigoTipoDocumento}>{tpDocu.nombreTipoDocumento}</option>\r\n                                                                )})}\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6 form-group\">\r\n                                                            <label for=\"numDocuTrabajador\"> Numero: </label>\r\n                                                            <input className=\"form-control\" id= \"numDocuTrabajador\" type=\"text\"\r\n                                                                value={this.state.trabajador.numDocuTrabajador}\r\n                                                                onChange = { e => this.setTrabajador(e) }\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6 form-group\">\r\n                                                            <label for=\"correoTrabajador\"> Correo: </label>\r\n                                                            <input className=\"form-control\" id= \"correoTrabajador\" type=\"text\"\r\n                                                                value={this.state.trabajador.correoTrabajador}\r\n                                                                onChange = { e => this.setTrabajador(e) }\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6 form-group\">\r\n                                                            <label for=\"fechaNacimiento\"> Fecha Nacimiento: </label>\r\n                                                            <input className=\"form-control\" id= \"fechaNacimiento\" type=\"date\"\r\n                                                                data-date-format=\"YYYY MM DD\"\r\n                                                                value={this.state.trabajador.fechaNacimiento}\r\n                                                                onChange = { e => this.setTrabajador(e) }\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6 form-group\">\r\n                                                            <label for=\"direccionTrabajador\"> Direccion: </label>\r\n                                                            <input className=\"form-control\" id= \"direccionTrabajador\" type=\"text\"\r\n                                                                value={this.state.trabajador.direccionTrabajador}\r\n                                                                onChange = { e => this.setTrabajador(e) }\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6 form-group\">\r\n                                                            <label for=\"especialidadTrabajador\"> Especialidad: </label>\r\n                                                            <input className=\"form-control\" id= \"especialidadTrabajador\" type=\"text\"\r\n                                                               value={this.state.trabajador.especialidadTrabajador}\r\n                                                               onChange = { e => this.setTrabajador(e) }\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-md-12 form-group\">\r\n                                                    <label for=\"mediaUsuario\"> Imagen:</label>\r\n                                                    <div class=\"custom-file\">\r\n                                                        <input type=\"file\" class=\"custom-file-input\" id=\"customFileLang\" lang=\"es\"\r\n                                                            onChange = { e => this.setFileMedia(e) }\r\n                                                        />\r\n                                                        <label data-browse=\"Buscar\" class=\"custom-file-label\" for=\"customFileLang\">{ this.state.trabajador.urlMedia}</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-center\">\r\n                                                <button className=\"btn btn-primary\"\r\n                                                    onClick={this.guardarUsuario2}\r\n                                                > REGISTRAR </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n/*\r\n<ModalBody>\r\n    <div className=\"card \">\r\n        <div className=\"card-header text-center\">\r\n            <h3>Local de Indentidad</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n            <form>\r\n                <div>\r\n                    <label for=\"nombreUsuario\"> Nombre Local: </label>\r\n                    <input id= \"nombreUsuario\" type=\"text\" value={this.state.UsuarioSeleccionado.nombreUsuario} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'nombreUsuario') }\r\n                    />\r\n                    <label for=\"cantidadCaracteres\"> Caracteres: </label>\r\n                    <input id= \"cantidadCaracteres\" type=\"text\" value={this.state.UsuarioSeleccionado.cantidadCaracteres} placeholder=\"Ejemplo: DNI\"\r\n                        onChange = { e => this.setValues(e,'cantidadCaracteres') }\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={this.save}\r\n                    > REGISTRAR </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ModalBody>\r\n\r\n\r\n{(state, filtredData, instance)=>{\r\n    this.reactTable = state.pageRows.map(\r\n        Usuario => {return Usuario._original});\r\n    return(\r\n        <div>\r\n            {filtredData()}\r\n            <ExportToExcel tpLocal={this.reactTable}/>\r\n        </div>\r\n    )\r\n}}\r\n\r\n    <div className=\"col-sm\" style={buttonCard}>\r\n        <div className=\"card bg-success text-white\">\r\n            <div className=\"card-header\">Exportar</div>\r\n            <ReactHTMLTableExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"btn card-body text-white text-justify\"\r\n                table=\"table-to-xls\"\r\n                filename=\"filtredData\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"A Local Excel.\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n*/","// AUTH: JORGE M\r\n// TRASLADO API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/traslados/';\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n//MOSTRAR TRASLADOS PENDIENTES POR LOCAL\r\nexport function get_Traslado_Pendiente_Local(codigoLocal){ \r\n    const urlFetch = BaseUrl + \"pendientes/\" + codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MOSTRAR TODOS LOS TRASLADOS POR LOCAL\r\nexport function get_Traslado_Local(codigoLocal){ \r\n    const urlFetch = BaseUrl + \"todos/\" + codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MOSTRAR TRASLADOS PENDIENTES POR LOCAL\r\nexport function get_Traslado_Local_Envio(codigoLocal){ \r\n    const urlFetch = BaseUrl + \"envios/\" + codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MOSTRAR TRASLADOS PENDIENTES POR LOCAL\r\nexport function get_Traslado_Local_Ingreso(codigoLocal){ \r\n    const urlFetch = BaseUrl + \"ingresos/\" + codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MOSTRAR TRASLADOS PENDIENTES PARA REPORTE\r\nexport function get_Traslado_Reporte_Pendiente(fechas){ \r\n    const urlFetch = BaseUrl + \"reporte/pendiente/\" + fechas;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MOSTRAR TRASLADOS PARA REPORTE\r\nexport function get_Traslado_Reporte(fechas){ \r\n    const urlFetch = BaseUrl + \"reporte/\" + fechas;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//CREAR TRASLADO VACIO\r\nexport function post_Traslado_Vacio(codigosCreacion){ \r\n    const urlFetch = BaseUrl + \"vacio\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(codigosCreacion),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//CONFIRMAR TRASLADO\r\nexport function put_Traslado_Confirmar(traslado){ \r\n    const urlFetch = BaseUrl + \"confirmar\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(traslado),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR TRASLADO\r\nexport function put_Traslado(traslado){ \r\n    return new Promise((resolve,reject)=>{\r\n        fetch(BaseUrl,{\r\n            method:'PUT',\r\n            body: JSON.stringify(traslado),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//ELIMINAR TRASLADO\r\nexport function del_Traslado(codigoTraslado){ \r\n    const urlFetch = BaseUrl + codigoTraslado;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//ELIMINAR DETALLES DE TRASLADO y TRASLADO VACIO POR CODIGO DE LOCAL\r\nexport function del_Traslado_Vacio(codigoLocal){ \r\n    const urlFetch = BaseUrl + \"vacio/\" + codigoLocal;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n","// AUTH: JORGE M\r\n// TRASLADO_DETALLE API FROM SERVER NODE EXPRESS\r\n\r\nimport data from '../../db_data';\r\nconst BaseUrl = data + '/api/traslados/detalles/';\r\n\r\n// ----------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n// ELIMINAR DETALLES DE TRASLADO POR CODIGO DE TRASLADO ENVIO\r\nexport function del_Traslado_Detalle_CodigoTD(codigoTD){\r\n    let urlFetch = BaseUrl + codigoTD;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n// ELIMINAR DETALLES DE TRASLADO POR CODIGO DE TRASLADO ENVIO\r\nexport function del_Traslado_Detalle_Envio(codigoTraslado){\r\n    let urlFetch = BaseUrl + \"envio/\" + codigoTraslado;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'DELETE',\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//MOSTRAR DETALLES DE TRASLADO\r\nexport function get_Traslado_Detalle_Codigo_Traslado_Vista(codigoTraslado){ \r\n    const urlFetch = BaseUrl + \"codigotraslado/\" + codigoTraslado;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//CREAR DETALLE DE TRASLADO TEMPORAL\r\nexport function post_Traslado_Detalle_Temporal(detalleTraslado){ \r\n    const urlFetch = BaseUrl + \"temporal\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(detalleTraslado),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//CREAR DETALLE DE TRASLADO\r\nexport function post_Traslado_Detalle(detalleTraslado){ \r\n    const urlFetch = BaseUrl;\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'POST',\r\n            body: JSON.stringify(detalleTraslado),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n//MODIFICAR DETALLE DE TRASLADO TEMPORAL\r\nexport function put_Traslado_Detalle_Temporal(traslado){ \r\n    const urlFetch = BaseUrl + \"temporal\";\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(urlFetch,{\r\n            method:'PUT',\r\n            body: JSON.stringify(traslado),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}","import React, { Component } from 'react'\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport \"./Traslado.css\";\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n//import { get_Producto_Precio_Venta_Local_Lista } from '../../Data/productoData';\r\nimport { get_Producto_Local_Venta_Lista, get_Producto_Venta } from '../../Data/productoData';\r\n\r\n\r\nimport { post_Traslado_Vacio , put_Traslado , del_Traslado } from '../../Data/TrasladoData';\r\nimport { get_Local, get_Local_Tipo_Lista } from '../../Data/LocalData';\r\nimport { post_Traslado_Detalle , post_Traslado_Detalle_Temporal ,\r\n        put_Traslado_Detalle_Temporal , del_Traslado_Detalle_Envio,\r\n        del_Traslado_Detalle_CodigoTD } from '../../Data/TrasladoDetalleData';\r\nimport { Modal , ModalHeader, ModalBody } from 'reactstrap';\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nimport { DeleteForeverOutlined , DoneOutlineRounded , RemoveShoppingCartOutlined } from '@material-ui/icons';\r\n\r\nconst estadoInicial = {\r\n\r\n    productosVenta : [],\r\n    sugerenciasProducto:[],\r\n\r\n    detallesEnvio: [],\r\n\r\n    locales:[],\r\n    local:{}, // Local origen\r\n\r\n    nombreProductoBuscar:\"\",\r\n    tipoBuscadorProducto:\"descripcionProducto\",\r\n\r\n    nombreTiendaDestino : \"\",\r\n\r\n    codigoTraslado : \"\",\r\n\r\n    traslado:{\r\n        id : \"\",\r\n        codigoTraslado : \"\",\r\n        codigoUsuario : localStorage.getItem(\"codigoUsuario\"),\r\n        codigoTipoTraslado : \"\" ,\r\n        origenTraslado : localStorage.getItem(\"codigoLocal\"),\r\n        destinoTraslado : \"\",\r\n        fechaVencimiento : \"\",\r\n        valorTotal : \"\",\r\n        observacionOrigen : \"\",\r\n        observacionDestino : \"\",\r\n        fechaRegistro : \"\",\r\n        codigoUsuarioConfirmacion : \"\",\r\n        confirmacion : 0,\r\n        fechaConfirmacion : \"\",\r\n    },\r\n\r\n    codigoTDTemporal : \"\",\r\n\r\n    fechaVencimiento : \"\",\r\n    observacionOrigen : \"\",\r\n    valorTotalEnvio:0,\r\n\r\n    confirmarCrearTraslado: false,\r\n\r\n    confirmarEliminar : false,\r\n    tipoAccion : false,\r\n\r\n    detalle: {},\r\n\r\n    totalProducto : 0,\r\n\r\n    mensajeAlerta : {\r\n        textoMensaje : \"\",\r\n        tipoBotonConfirmar : \"\",\r\n        textoBotonConfirmar : \"\",\r\n        mostrarConfirmar : false,\r\n        tipoBotonCancelar : \"\",\r\n        textoBotonCancelar : \"\",\r\n        mostrarCancelar : false,\r\n    }\r\n}\r\n\r\nexport class Envio extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = estadoInicial;\r\n    }\r\n\r\n    obtenerFechaHoy(){\r\n        var fechaHoy = new Date();\r\n        var a√±oDate = fechaHoy.getFullYear();\r\n        var mesDate = fechaHoy.getMonth() + 1;\r\n        var diaDate = fechaHoy.getDate();\r\n\r\n        var fecha = a√±oDate + \"-\";\r\n        if(mesDate < 10){\r\n            fecha = fecha + \"0\" + mesDate;\r\n        }else{\r\n            fecha = fecha +\"\"+ mesDate;\r\n        }\r\n        fecha = fecha + \"-\";\r\n        if(diaDate < 10){\r\n            fecha = fecha + \"0\" + diaDate;\r\n        }else{\r\n            fecha = fecha + \"\" + diaDate;\r\n        }\r\n\r\n        this.setState({\r\n            traslado : {\r\n                ...this.state.traslado,\r\n                fechaVencimiento : fecha\r\n            },\r\n            fechaVencimiento : fecha\r\n        });\r\n    }\r\n\r\n    buscarIndexProductos = (producto) => {\r\n        const { productosVenta } = this.state;\r\n        const index = productosVenta.indexOf(producto);\r\n        return index;\r\n    }\r\n\r\n    toogleModalConfirmar = () => {\r\n        this.setState({ modalConfirmarOpen : ! this.state.modalConfirmarOpen });\r\n    }\r\n\r\n    crearMensajeAlerta = (mensajeAlertaParam) => {\r\n        const { mensajeAlerta } = this.state;\r\n        mensajeAlerta[\"textoMensaje\"]=mensajeAlertaParam.textoMensaje;\r\n        mensajeAlerta[\"tipoBotonConfirmar\"]=mensajeAlertaParam.tipoBotonConfirmar;\r\n        mensajeAlerta[\"textoBotonConfirmar\"]=mensajeAlertaParam.textoBotonConfirmar;\r\n        mensajeAlerta[\"tipoBotonCancelar\"]=mensajeAlertaParam.tipoBotonCancelar;\r\n        mensajeAlerta[\"textoBotonCancelar\"]=mensajeAlertaParam.textoBotonCancelar; \r\n        mensajeAlerta[\"mostrarCancelar\"]=mensajeAlertaParam.mostrarCancelar;\r\n        this.setState({ mensajeAlerta });\r\n    }\r\n\r\n    verificarEliminar = (detalle, tipoAccion) => {\r\n        const { mensajeAlerta } = this.state;\r\n\r\n        switch (tipoAccion) {\r\n            case \"ELIMINAR-DETALLE\":\r\n                    mensajeAlerta[\"textoMensaje\"]=\"Se eliminar√° el Registro, ¬øDesea Continuar?\";\r\n                    mensajeAlerta[\"tipoBotonConfirmar\"]=\"btn btn-danger\";\r\n                    mensajeAlerta[\"textoBotonConfirmar\"]=\"Eliminar\";\r\n                    mensajeAlerta[\"mostrarConfirmar\"]=true;\r\n                    mensajeAlerta[\"tipoBotonCancelar\"]=\"btn btn-info\";\r\n                    mensajeAlerta[\"textoBotonCancelar\"]=\"Cancelar\"; \r\n                    mensajeAlerta[\"mostrarCancelar\"]=true;\r\n                break;\r\n            case \"ANULAR-TRASLADO\":\r\n                    mensajeAlerta[\"textoMensaje\"]=\"Se anular√° el Envio, ¬øDesea Continuar?\";\r\n                    mensajeAlerta[\"tipoBotonConfirmar\"]=\"btn btn-danger\";\r\n                    mensajeAlerta[\"textoBotonConfirmar\"]=\"Anular\";\r\n                    mensajeAlerta[\"mostrarConfirmar\"]=true;\r\n                    mensajeAlerta[\"tipoBotonCancelar\"]=\"btn btn-info\";\r\n                    mensajeAlerta[\"textoBotonCancelar\"]=\"Cancelar\";\r\n                    mensajeAlerta[\"mostrarCancelar\"]=true;\r\n                break;\r\n                default:\r\n                    break;\r\n        }\r\n        this.setState({ detalle : detalle , tipoAccion : tipoAccion , mensajeAlerta : mensajeAlerta});\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    botonConfirmado = () => {\r\n        const { tipoAccion } = this.state;\r\n        if(tipoAccion === \"ELIMINAR-DETALLE\"){\r\n            this.borrarDetalleTrasladoTemporal();\r\n            this.toogleModalConfirmar();\r\n        }\r\n        if(tipoAccion === \"ANULAR-TRASLADO\"){\r\n            this.anularTraslado();\r\n        }\r\n        if(tipoAccion === \"CONFIRMAR-ENVIO\"){\r\n            this.confirmarGuardarEnvio();\r\n            this.toogleModalConfirmar();\r\n        }\r\n    }\r\n\r\n    setTraslado = (e) => {\r\n\r\n        const { traslado } = this.state;\r\n        var { fechaVencimiento , observacionOrigen , nombreTiendaDestino } = this.state;\r\n        traslado[e.target.id] = e.target.value;\r\n\r\n        if(e.target.id === \"fechaVencimiento\"){\r\n            fechaVencimiento = e.target.value;\r\n        }\r\n        if(e.target.id === \"observacionOrigen\"){\r\n            observacionOrigen = e.target.value;\r\n        }\r\n        if(e.target.id === \"destinoTraslado\"){\r\n            nombreTiendaDestino = e.target.options[e.target.selectedIndex].text;\r\n        }\r\n\r\n        this.setState({ traslado , fechaVencimiento , observacionOrigen , nombreTiendaDestino}); \r\n    }\r\n\r\n    onChangeTipoBuscadorProducto = (event) => {\r\n        const tipoBuscadorProducto = event.target.value;\r\n        this.setState(() => ({ tipoBuscadorProducto }));\r\n    }\r\n\r\n    onChangeBuscadorProducto = (event) => {\r\n        const textoBuscar =  event.target.value;\r\n        let sugerenciasProducto = [];\r\n\r\n        if(textoBuscar.length > 0){\r\n            const regex = new RegExp(`^${textoBuscar}`, 'i');          \r\n            sugerenciasProducto = this.state.productosVenta.sort().filter(producto => regex.test(producto[this.state.tipoBuscadorProducto]));\r\n        }\r\n        this.setState(()=>({ sugerenciasProducto , nombreProductoBuscar : textoBuscar }));\r\n    }\r\n\r\n    mostrarSugerenciasProductoLista () {\r\n        const { sugerenciasProducto } =  this.state;\r\n        if(sugerenciasProducto.length === 0){\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"AutoCompleteText\">\r\n                <ul>\r\n                    {sugerenciasProducto.map((item) => \r\n                        <li key={item.id}\r\n                            onClick= {()=>\r\n                                this.seleccionarProducto(item)\r\n                            }\r\n                        >\r\n                            {item.descripcionProducto + \" - \" + item.detalleProducto}\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    setValorTotalEnvio = () => {\r\n        var valorTotalEnvio = 0;\r\n        this.state.detallesEnvio.forEach(detalle => {\r\n            valorTotalEnvio = valorTotalEnvio + detalle.valorTotalTD; \r\n        });\r\n        this.setState({ valorTotalEnvio });\r\n    }\r\n\r\n    \r\n    buscarIndexDetalles = (detalle) => {\r\n        const { detallesEnvio } = this.state;\r\n        const index = detallesEnvio.indexOf(detalle);\r\n        return index;\r\n    }\r\n\r\n\r\n    crearTrasladoVacio(){\r\n        const codigosCreacion = {\r\n            codigoUsuario : localStorage.getItem(\"codigoUsuario\"),\r\n            codigoLocal : localStorage.getItem(\"codigoLocal\")\r\n        }\r\n        post_Traslado_Vacio(codigosCreacion).then( res => {\r\n            this.setState({\r\n                codigoTraslado : res[0].codigoTrasladoGenerado,\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    verificarProductoAgregar = (Producto) => {\r\n        const { detallesEnvio } = this.state;\r\n        var existe = false;\r\n        detallesEnvio.forEach(det => {\r\n            if(det.codigoProducto === Producto.codigoProducto){\r\n                existe = true;\r\n            }\r\n        });\r\n        return existe;\r\n    }\r\n\r\n    seleccionarProducto (Producto) {\r\n        const existeProducto = this.verificarProductoAgregar(Producto);\r\n        if(!existeProducto){\r\n            get_Producto_Venta(Producto.codigoProducto).then(res => {\r\n                if(res[0].stockExistente > 0){\r\n                    this.crearDetalleTrasladoTemporal(res[0] , 1);\r\n                    this.setState(() => ({\r\n                        nombreProductoBuscar : \"\",\r\n                        sugerenciasProducto: []\r\n                    }));\r\n                }else{ alert(\"Sin stock Existente\") }\r\n            });\r\n        }else{ alert(\"Producto Ya Fue Registrado\") }\r\n\r\n    }\r\n\r\n    crearDetalleTraslado = (Detalle) => {\r\n        put_Traslado_Detalle_Temporal(Detalle).then(res => {  });\r\n    }\r\n    \r\n    crearDetalleTrasladoTemporal = (Producto , cantidad) => {\r\n\r\n        const detalleTrasladoBD = {\r\n            codigoTraslado : this.state.codigoTraslado,\r\n            codigoProducto : Producto.codigoProducto,\r\n            codigoPrecio : Producto.codigoPrecio\r\n        }\r\n\r\n        post_Traslado_Detalle_Temporal(detalleTrasladoBD).then(res =>{\r\n            this.setState({\r\n                codigoTDTemporal : res[0][0].codigoTD\r\n            }, () =>{\r\n                const detalleTraslado = {\r\n                    urlMedia : Producto.urlMedia,\r\n                    descripcionProducto : Producto.descripcionProducto,\r\n                    descripcionPresentacion : Producto.descripcionPresentacion,\r\n                    detalleProducto : Producto.detalleProducto,\r\n                    nombreTipoProducto : Producto.nombreTipoProducto,\r\n                    valorPrecio : Producto.valorPrecio,\r\n                    cantidadProducto : cantidad,\r\n                    stockExistente: Producto.stockExistente,\r\n                    valorTotalTD : Producto.valorPrecio * cantidad,\r\n                    codigoTD : this.state.codigoTDTemporal,\r\n                    codigoProducto : Producto.codigoProducto,\r\n                    codigoPrecio : Producto.codigoPrecio,\r\n                    codigoTraslado : this.state.codigoTraslado,\r\n                    codigoLocal : localStorage.getItem(\"codigoLocal\")\r\n                }\r\n                this.setState({\r\n                    detallesEnvio : this.state.detallesEnvio.concat(detalleTraslado),\r\n                    totalProducto : this.state.totalProducto + detalleTraslado.cantidadProducto\r\n                }, () => {\r\n                    this.setValorTotalEnvio();\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    editarDetalleTrasladoTemporal = (e , detalle) => { // SE RECIBE EL DETALLE DE TRASLADO\r\n       \r\n        const { totalProducto } = this.state;\r\n        var totalPro = totalProducto;\r\n        totalPro = totalPro - parseInt(detalle.cantidadProducto);\r\n\r\n        const index = this.buscarIndexDetalles(detalle); // SE OBTIENE LA UBICACION DEL DETALLE\r\n        const detalleEditar = Object.assign( {} , this.state.detallesEnvio[index] ); // SE CREA UN DETALLE DE VENTA A PARTIR DE LA LISTA DE DETALLES\r\n        const cantidadProducto = e.target.value;\r\n        detalleEditar.cantidadProducto = cantidadProducto; //Se asigna la cantidad de envio\r\n        detalleEditar.valorTotalTD = detalle.valorPrecio * cantidadProducto;\r\n        const detallesEnvio = Object.assign( [] , this.state.detallesEnvio);\r\n        detallesEnvio[index] = detalleEditar;\r\n        \r\n        totalPro = totalPro + parseInt(detalleEditar.cantidadProducto);\r\n\r\n        this.setState({ detallesEnvio : detallesEnvio , totalProducto: totalPro }, () => {\r\n            this.setValorTotalEnvio();\r\n        });\r\n    }\r\n\r\n    borrarDetalleTrasladoTemporal = () =>{\r\n        const { detalle } = this.state;\r\n        const index = this.buscarIndexDetalles(detalle);\r\n        var detallesEnvio = Object.assign( [] , this.state.detallesEnvio);\r\n        detallesEnvio.splice(index,1);\r\n        this.setState({ detallesEnvio : detallesEnvio , totalProducto: this.state.totalProducto - detalle.cantidadProducto}, () => {\r\n            this.setValorTotalEnvio();\r\n        });\r\n        del_Traslado_Detalle_CodigoTD(detalle.codigoTD).then( res => {\r\n        });\r\n    }\r\n\r\n    listarProductosVenta(codigoLocal){\r\n        get_Producto_Local_Venta_Lista(codigoLocal)\r\n        .then( res => {\r\n            this.setState({ productosVenta : res });\r\n        });\r\n    }\r\n\r\n    listarLocales(){\r\n        get_Local_Tipo_Lista(\"TIENDA\" , this.state.traslado.origenTraslado).then( res => {\r\n            this.setState({ locales : res });\r\n        });\r\n    }\r\n\r\n    obtenerLocal(codigoLocal){\r\n        get_Local(codigoLocal).then( res => {\r\n            if(res[0]){\r\n                this.setState({\r\n                    local : res[0]\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    llenarListas(codigoLocal){\r\n        \r\n        this.listarProductosVenta(codigoLocal);\r\n        this.listarLocales();\r\n    }\r\n\r\n    guardarDetalleTraslado = (detalleTraslado) => {\r\n        post_Traslado_Detalle(detalleTraslado).then(_=>{});\r\n    }\r\n\r\n    confirmarGuardarEnvio = () => {\r\n        \r\n        const { traslado , detallesEnvio } = this.state;\r\n        traslado[\"valorTotal\"] = this.state.valorTotalEnvio;\r\n        traslado[\"codigoTraslado\"] = this.state.codigoTraslado;\r\n        traslado[\"codigoTipoTraslado\"] = this.props.codigoTipoTraslado;\r\n        \r\n        detallesEnvio.forEach( detalle =>{\r\n            this.crearDetalleTraslado(detalle);\r\n        });\r\n\r\n        put_Traslado(traslado).then( res => {\r\n            if(res){\r\n                this.resetEstado();\r\n            }\r\n        });\r\n    }\r\n\r\n    guardarEnvio = () => {\r\n        const { detallesEnvio , mensajeAlerta } = this.state;\r\n        var confirmarGuardar = true;\r\n\r\n        mensajeAlerta[\"textoMensaje\"]=\"Seleccione un Destino Correcto\";\r\n        mensajeAlerta[\"mostrarConfirmar\"] = false;\r\n        mensajeAlerta[\"tipoBotonCancelar\"] = \"btn btn-danger\";\r\n        mensajeAlerta[\"textoBotonCancelar\"] = \"Aceptar\";\r\n        mensajeAlerta[\"mostrarCancelar\"] = true;\r\n       \r\n\r\n        if(this.state.traslado.destinoTraslado === this.state.traslado.origenTraslado){\r\n            confirmarGuardar = false;\r\n        }\r\n\r\n        if(this.state.traslado.destinoTraslado === null || this.state.traslado.destinoTraslado === \"\"){\r\n            confirmarGuardar = false;\r\n        }\r\n\r\n        if(confirmarGuardar){\r\n            if(detallesEnvio.length > 0){\r\n                mensajeAlerta[\"textoMensaje\"]=\"Se enviar√° \" + this.state.totalProducto + \" Producto(s) a la \" + this.state.nombreTiendaDestino;\r\n                mensajeAlerta[\"tipoBotonConfirmar\"] = \"btn btn-success\";\r\n                mensajeAlerta[\"textoBotonConfirmar\"] = \"Confirmar\";\r\n                mensajeAlerta[\"mostrarConfirmar\"] = true;\r\n                mensajeAlerta[\"tipoBotonCancelar\"] = \"btn btn-danger\";\r\n                mensajeAlerta[\"textoBotonCancelar\"] = \"Cancelar\";\r\n                mensajeAlerta[\"mostrarCancelar\"] = true;                \r\n            }else{\r\n                mensajeAlerta[\"textoMensaje\"]=\"No se registro Productos Para el Envio\";\r\n                mensajeAlerta[\"mostrarConfirmar\"] = false;\r\n                mensajeAlerta[\"tipoBotonCancelar\"] = \"btn btn-danger\";\r\n                mensajeAlerta[\"textoBotonCancelar\"] = \"Aceptar\";\r\n                mensajeAlerta[\"mostrarCancelar\"] = true;\r\n            }\r\n        }\r\n        this.setState({ mensajeAlerta , tipoAccion : \"CONFIRMAR-ENVIO\" });\r\n        this.toogleModalConfirmar();    \r\n    }\r\n\r\n    eliminarEnvio = (codigoTraslado) => {\r\n        del_Traslado(codigoTraslado).then( res => {\r\n        });\r\n        del_Traslado_Detalle_Envio(codigoTraslado).then( res => {\r\n        });\r\n        this.resetEstado();\r\n    }\r\n\r\n    anularTraslado = () => {\r\n        if(this.state.codigoTraslado.length > 0){\r\n            this.eliminarEnvio(this.state.codigoTraslado);\r\n        }\r\n    }\r\n\r\n    resetEstado = () => {\r\n        this.setState(estadoInicial);\r\n    }\r\n\r\n\r\n    confirmarCrearEnvio = () => {\r\n        window.addEventListener('beforeunload',(e) => {\r\n            this.anularTraslado();\r\n            e.returnValue = \"Se cancelo el Envio, Desea Salir?\";\r\n        });\r\n        this.setState({\r\n            confirmarCrearTraslado : ! this.state.confirmarCrearTraslado\r\n        },() => {\r\n            //const codigoLocal = localStorage.getItem(\"codigoLocal\");\r\n            this.obtenerLocal(localStorage.getItem(\"codigoLocal\"));\r\n            this.llenarListas(localStorage.getItem(\"codigoLocal\"));\r\n            this.crearTrasladoVacio();\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.obtenerFechaHoy();\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.confirmarCrearTraslado){\r\n            return(\r\n                <Menu>\r\n                <div className=\"container p-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-4 mx-auto\">\r\n                            <button\r\n                                className=\"form-control btn btn-success\"\r\n                                onClick={this.confirmarCrearEnvio}\r\n                            >Confirmar Crear Envio</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </Menu>\r\n            )\r\n        }else{\r\n            const { nombreProductoBuscar } =  this.state;\r\n            const columns = [\r\n                {\r\n                    Header: \"ITEM\",\r\n                    style:{\r\n                        textAlign: \"center\"\r\n                    },\r\n                    Cell: props =>{\r\n                        return(\r\n                            <label>{props.original.codigoTD}</label>\r\n                        )\r\n                    },\r\n                    show: false\r\n                },\r\n                {\r\n                    Header:\"IMAGEN\",\r\n                    Cell: props =>{\r\n                        return(\r\n                            <div className=\"\">\r\n                                <img src={props.original.urlMedia} alt={props.original.descripcionProducto} className=\"card-img-top media_producto\"/>\r\n                            </div>\r\n                        )\r\n                    },\r\n                    maxWidth: 200\r\n                },\r\n                {\r\n                    Header: \"PRODUCTO\",\r\n                    style:{\r\n                        textAlign: \"center\"\r\n                    },\r\n                    Cell: props => {\r\n                        return(\r\n                            <div className=\"mt-2\">\r\n                                <div>{props.original.descripcionProducto}</div>\r\n                                <div>{props.original.detalleProducto}</div>\r\n                                <div>{props.original.nombreTipoProducto}</div>\r\n                                <div>{props.original.descripcionPresentacion}</div>\r\n                                <div>Stock: {props.original.stockExistente}</div>\r\n                                <div>Precio: S/.{(props.original.valorPrecio).toFixed(2)}</div>\r\n                            </div>\r\n                        )\r\n                    },\r\n                    width : 250,\r\n                    minWidth: 150,\r\n                    maxWidth: 450\r\n                },\r\n                {\r\n                    Header: \"CANTIDAD\",\r\n                    style:{\r\n                        textAlign: \"center\"\r\n                    },\r\n                    Cell: props => {\r\n                        var valorTotalTD = props.original.valorTotalTD;\r\n                        return(\r\n                            <div className=\"container text-center\">\r\n                                <div className=\"row justify-content-center mt-3\">\r\n                                    <div className=\"col-11 col-sm-10 col-md-9 form-group\">\r\n                                        <input className=\"form-control text-center\" id= \"cantidadProducto\" type=\"number\" min=\"1\"\r\n                                            max={\"\"+props.original.stockExistente+\"\"} placeholder={props.original.cantidadProducto}\r\n                                            value={props.original.cantidadProducto}\r\n                                            onChange = { e => { this.editarDetalleTrasladoTemporal( e , props.original)}}\r\n                                        />   \r\n                                    </div>\r\n                                    <div className=\"col-11 col-sm-10 col-md-9 form-group\">\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-circle\"\r\n                                            onClick = {() => {this.verificarEliminar(props.original,\"ELIMINAR-DETALLE\")}}\r\n                                        ><DeleteForeverOutlined/></button>   \r\n                                    </div>\r\n                                    <div hidden={true} className=\"col-10 form-group\">\r\n                                        <input className=\"form-control text-center\" id= \"descripcionProducto\" type=\"text\" readOnly\r\n                                            value = {\"S/. \" + (valorTotalTD).toFixed(2)}> \r\n                                        </input>\r\n                                    </div>\r\n                                </div>\r\n                            </div>                                                    \r\n                        )\r\n                    }\r\n                },\r\n\r\n            ]\r\n            return (\r\n                <Menu>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-7 mb-3\">\r\n                            <div className=\"\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h3>Envio de Productos</h3>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row justify-content-center mx-1\">\r\n                                            <div className=\"col-10 col-sm-5 col-md-4 form-group\">\r\n                                                <select className=\"form-control custom-select\"\r\n                                                    onChange={this.onChangeTipoBuscadorProducto}\r\n                                                >\r\n                                                    <option value=\"descripcionProducto\">DESCRIPCI√ìN</option>\r\n                                                    <option value=\"codigoProducto\">CODIGO</option>\r\n                                                    <option value=\"detalleProducto\">DETALLE</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-10 col-sm-7 col-md-8 form-group\">\r\n                                                <input className=\"form-control\" type=\"text\"\r\n                                                    placeholder=\"Busqueda de Producto\"\r\n                                                    value={nombreProductoBuscar}\r\n                                                    onChange={this.onChangeBuscadorProducto}\r\n                                                    autoComplete={\"off\"}\r\n                                                ></input>\r\n                                                {this.mostrarSugerenciasProductoLista()}\r\n                                            </div>\r\n                                            <div className=\"col-md-12 mt-3\">\r\n                                                <ReactTable\r\n                                                    columns = {columns}\r\n                                                    noDataText = {\"Cargando Datos...\"}\r\n                                                    data = {this.state.detallesEnvio}\r\n                                                    filterable={false}\r\n                                                    defaultPageSize={5}\r\n                                                    showPaginationTop={true}\r\n                                                    showPaginationBottom={false}\r\n                                                >\r\n                                                </ReactTable>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container col-md-4\">\r\n                            <div className=\"tituloDetalleEnvio form-group\">\r\n                                <h3>ENVIO {(this.state.codigoTraslado).substring(4,10)}</h3>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12 form-group\">\r\n                                    <label for=\"codigoLocal\"> ORIGEN: </label>\r\n                                    <input className=\"form-control\" id= \"codigoLocal\" type=\"text\" value={this.state.local.nombreLocal}/>\r\n                                </div>                          \r\n                            </div>\r\n                            <Divider className=\"mb-3\" />\r\n                            <div className=\"row\">                           \r\n                                <div className=\"col-md-12 form-group\">\r\n                                    <label fro=\"destinoTraslado\">DESTINO: </label>\r\n                                    <select className=\"form-control\" id=\"destinoTraslado\"\r\n                                        onChange={ e => this.setTraslado(e)}\r\n                                    >\r\n                                        <option value=\"\">Seleccione una Tienda</option>\r\n                                        {this.state.locales.map( loc => (\r\n                                            <option key={loc.id} value={loc.codigoLocal}>{loc.nombreLocal}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <Divider className=\"mb-3\" />\r\n                            <div className=\"row\">                           \r\n                                <div hidden={true} className=\"col-md-6 form-group\">\r\n                                    <label fro=\"fechaVencimiento\">F. Vencimiento: </label>\r\n                                    <input id= \"fechaVencimiento\" className=\"form-control\" type=\"date\"\r\n                                        value={this.state.fechaVencimiento}\r\n                                        onChange = { e => this.setTraslado(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label fro=\"fechaVencimiento\">Total Productos: </label>\r\n                                    <input id= \"fechaVencimiento\" className=\"form-control\" type=\"text\"\r\n                                        value={this.state.totalProducto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label fro=\"fechaVencimiento\">Total Envio: </label>\r\n                                    <input id= \"fechaVencimiento\" className=\"form-control\" type=\"text\"\r\n                                        value={\"S/. \" + (this.state.valorTotalEnvio).toFixed(2)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-12 form-group\">\r\n                                    <label fro=\"observacionOrigen\">Observaci√≥n: </label>\r\n                                    <input id =\"observacionOrigen\" className=\"form-control\" type=\"text\"\r\n                                        placeholder=\"Estado de Productos\"\r\n                                        value={this.state.observacionOrigen}\r\n                                        onChange = { e => this.setTraslado(e)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <Divider className=\"mb-3\" />\r\n                            <div className=\"container mt-3\">\r\n                                <div className=\"row justify-content-center text-center\">\r\n                                    <div className=\"col-6 col-sm-6 col-md-6\">\r\n                                        <button className=\"btn btn-info btn-circle btn-envio\"\r\n                                            onClick={this.guardarEnvio}\r\n                                        ><DoneOutlineRounded/></button>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-sm-6 col-md-6\">\r\n                                        <button className=\"btn btn-danger btn-circle btn-envio\"\r\n                                            onClick = {() => {this.verificarEliminar(\"\",\"ANULAR-TRASLADO\")}}\r\n                                        ><RemoveShoppingCartOutlined/></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Modal \r\n                        isOpen={this.state.modalConfirmarOpen}\r\n                        centered={true}\r\n                        size={\"xs\"}\r\n                    >\r\n                        <ModalHeader toggle={this.toogleModalConfirmar.bind(this)}>Alerta</ModalHeader>    \r\n                        <ModalBody>\r\n                            <div className=\"\">\r\n                                <div className=\"row justify-content-center text-center\">\r\n                                    <div className=\"col-md-12 mb-4\">\r\n                                        {/*<span>Se eliminar√° el Registro, ¬øDesea Continuar?</span>*/}\r\n                                        <span>{this.state.mensajeAlerta.textoMensaje}</span>\r\n                                    </div>\r\n                                    <div className=\"col-3 col-sm-3 col-md-3\" hidden={!this.state.mensajeAlerta.mostrarConfirmar}>\r\n                                        <button className={this.state.mensajeAlerta.tipoBotonConfirmar}\r\n                                            onClick={this.botonConfirmado}\r\n                                        >{this.state.mensajeAlerta.textoBotonConfirmar}</button>\r\n                                    </div>\r\n                                    <div className=\"col-3 col-sm-3 col-md-3\" hidden={!this.state.mensajeAlerta.mostrarCancelar}>\r\n                                        <button className={this.state.mensajeAlerta.tipoBotonCancelar}\r\n                                            onClick = {this.toogleModalConfirmar.bind(this)}\r\n                                        >{this.state.mensajeAlerta.textoBotonCancelar}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n                </Menu>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Envio\r\n","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport { Modal , ModalHeader, ModalBody } from 'reactstrap';\r\n\r\nimport { get_Traslado_Pendiente_Local , get_Traslado_Local , put_Traslado_Confirmar ,\r\n    get_Traslado_Local_Envio , get_Traslado_Local_Ingreso } from '../../Data/TrasladoData';\r\n\r\nimport { get_Traslado_Detalle_Codigo_Traslado_Vista } from '../../Data/TrasladoDetalleData';\r\nimport { get_Producto_Traslado, post_Producto_Ingreso } from '../../Data/productoData';\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nimport './Ingreso.css';\r\n\r\nexport class Ingresos extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            trasladosPendientes : [],\r\n\r\n            trasladosDetallesPendientes : [],\r\n\r\n            productoIngreso : [],\r\n        \r\n            cantidadDetalles : 0,\r\n        \r\n            observacionDestino : \"\",\r\n        \r\n            modalDetalleOpen : false,\r\n        \r\n            codigoLocal : localStorage.getItem(\"codigoLocal\"),\r\n        \r\n            codigoTraslado : \"\",\r\n\r\n            tipoVista : props.tipoVista,\r\n\r\n            tipoAccion : false,\r\n\r\n            acciones : props.acciones,\r\n\r\n            titulo: props.titulo\r\n        };\r\n    }\r\n\r\n    confirmarIngreso = () => {\r\n        const trasladoPut = {\r\n            codigoTraslado : this.state.codigoTraslado,\r\n            codigoUsuarioConfirmacion : localStorage.getItem(\"codigoUsuario\"),\r\n            observacionDestino : this.state.observacionDestino\r\n        }\r\n        this.ingresarProducto();\r\n        put_Traslado_Confirmar(trasladoPut).then( res => {\r\n            this.llenarListas();\r\n            this.toogleModalDetalle();\r\n        });\r\n    }\r\n\r\n    setIngreso = (e) => {\r\n        this.setState({\r\n            [e.target.id] : [e.target.value]\r\n        });\r\n    }\r\n\r\n    ingresarProducto = () =>{\r\n        const { productoIngreso } = this.state;\r\n\r\n        productoIngreso.forEach(producto => {\r\n            producto[\"codigoLocal\"] = localStorage.getItem(\"codigoLocal\");\r\n            producto[\"stockExistente\"] = producto.cantidadProducto;\r\n            producto[\"fechaVencimiento\"] = producto.fechaVencimiento.substring(0,10);\r\n            post_Producto_Ingreso(producto).then(_=> {});\r\n        });\r\n    }\r\n\r\n    listarTrasladosLocalEnvios = () => {\r\n        get_Traslado_Local_Envio(this.state.codigoLocal).then( res => {\r\n            this.setState({\r\n                trasladosPendientes : res\r\n            });\r\n        });\r\n    }\r\n\r\n    listarTrasladosLocalIngresos = () => {\r\n        get_Traslado_Local_Ingreso(this.state.codigoLocal).then( res => {\r\n            this.setState({\r\n                trasladosPendientes : res\r\n            });\r\n        });\r\n    }\r\n\r\n    listarTrasladosLocalPendientes = () =>{\r\n        get_Traslado_Pendiente_Local(this.state.codigoLocal).then( res => {\r\n            this.setState({\r\n                trasladosPendientes : res\r\n            });\r\n        });\r\n    }\r\n\r\n    listarTraslados(){\r\n        get_Traslado_Local(this.state.codigoLocal).then( res => {\r\n            this.setState({\r\n                trasladosPendientes : res\r\n            });\r\n        });\r\n    }\r\n\r\n    listarTrasladosDetallesPendientes (codigoTraslado,tipoAccion) {\r\n        if(tipoAccion === \"CONFIRMAR\"){\r\n            this.setState({ tipoAccion : true });\r\n        }else{\r\n            this.setState({ tipoAccion : false });\r\n        }\r\n\r\n        this.listarProductosIngresantes(codigoTraslado);\r\n        get_Traslado_Detalle_Codigo_Traslado_Vista(codigoTraslado).then( res => {\r\n            this.setState({\r\n                codigoTraslado : codigoTraslado,\r\n                cantidadDetalles : res.length,\r\n                trasladosDetallesPendientes : res\r\n            }, () => {\r\n                this.setState({\r\n                    modalDetalleOpen : ! this.state.modalDetalleOpen\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    listarProductosIngresantes = (codigoTraslado) => {\r\n        get_Producto_Traslado(codigoTraslado).then(res =>{\r\n            this.setState({ productoIngreso : res });\r\n        });\r\n    }\r\n\r\n    llenarListas(){\r\n        if(this.state.tipoVista === \"enviados\"){\r\n            this.listarTrasladosLocalEnvios();\r\n        }\r\n        if(this.state.tipoVista === \"ingresados\"){\r\n            this.listarTrasladosLocalIngresos();\r\n        }\r\n        if(this.state.tipoVista === \"pendientes\"){\r\n            this.listarTrasladosLocalPendientes();\r\n        }\r\n    }\r\n\r\n    toogleModalDetalle = () => {\r\n        this.setState({\r\n            modalDetalleOpen : ! this.state.modalDetalleOpen\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.llenarListas();\r\n    }\r\n\r\n    render() {\r\n        const columnsDetalles = [\r\n            {\r\n                Header:\"IMAGEN\",\r\n                Cell: props =>{\r\n                    return(\r\n                        <div className=\"\">\r\n                            <img src={props.original.urlMedia} alt={props.original.descripcionProducto} className=\"card-img-top media_producto\"/>\r\n                        </div>\r\n                    )\r\n                },\r\n                width:100,\r\n                minWidth:100,\r\n                maxWidth:100\r\n            },\r\n            {\r\n                Header: \"PRODUCTO\",\r\n                accessor:\"descripcionProducto\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"mt-2\">\r\n                            <div>{props.original.descripcionProducto}</div>\r\n                            <div>{props.original.detalleProducto}</div>\r\n                            <div>{props.original.nombreTipoProducto}</div>\r\n                            <div>{props.original.descripcionPresentacion}</div>\r\n                            <div>Precio: S/.{(props.original.valorPrecio).toFixed(2)}</div> \r\n                            <div>CANT.:{props.original.cantidadProducto}</div>\r\n                        </div>\r\n                    )\r\n                },\r\n            }\r\n        ];\r\n        const columnsTraslados = [\r\n            {\r\n                Header: \"PENDIENTES\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props =>{\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    {props.original.detalles} Paquete(s)\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    De {props.original.nombreLocalOrigen}\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    Registrado Por:\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    {props.original.nombreTrabajador}\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    A {props.original.nombreLocalDestino}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                Header : \"OBSE. ORIGEN\",\r\n                accessor : \"observacionOrigen\",\r\n                style : {\r\n                    textAlign : \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header : \"OBSE. DESTINO\",\r\n                accessor : \"observacionDestino\",\r\n                style : {\r\n                    textAlign : \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"ESTADO\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props =>{\r\n                    var classCard = \"\";\r\n                    var nombreCard = \"\";\r\n                    if(props.original.confirmacion){\r\n                        classCard = \"card bg-success\";\r\n                        nombreCard = \"CONFIRMADO\";\r\n                    }else{\r\n                        classCard = \"card bg-danger\";\r\n                        nombreCard = \"SIN CONFIRMAR\";\r\n                    }\r\n                    return(\r\n                        <div className=\"container text-center\">\r\n                            <div className={classCard}>\r\n                                <div className=\"card-header\">\r\n                                    <span>{nombreCard}</span>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div>\r\n                                        <label for=\"fechaRegistro\">Enviado el :  </label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span>\r\n                                            {\r\n                                                new Intl.DateTimeFormat( 'default',{\r\n                                                    year: 'numeric',\r\n                                                    month:'numeric',\r\n                                                    day:'numeric',\r\n                                                    hour:'numeric',\r\n                                                    minute:'numeric'\r\n                                                }).format(Date.parse(props.original.fechaRegistro))\r\n                                            }\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                Header: \"ACCIONES\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                show:this.state.acciones,\r\n\r\n                Cell: props =>{\r\n                    var mostrarConfirmar = true;\r\n                    if(this.state.tipoVista === \"enviados\"){\r\n                        mostrarConfirmar = false;\r\n                    }\r\n                    if(props.original.confirmacion){\r\n                        mostrarConfirmar = false;\r\n                    }\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row align-items-center mt-3\">\r\n                                <div hidden={!mostrarConfirmar} className=\"form-group col-md-12\">\r\n                                    <button className=\"btn btn-success\"\r\n                                        onClick={ () => {\r\n                                            this.listarTrasladosDetallesPendientes(props.original.codigoTraslado,\"CONFIRMAR\");\r\n                                        }}\r\n                                    >\r\n                                        CONFIRMAR\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <button className=\"btn btn-info\"\r\n                                        onClick={ () => { \r\n                                            this.listarTrasladosDetallesPendientes(props.original.codigoTraslado,\"DETALLE\");\r\n                                        }}\r\n                                    >\r\n                                        DETALLES\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ]\r\n\r\n        return (\r\n            <Menu>\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h3>{this.state.titulo}</h3>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <ReactTable\r\n                            columns = {columnsTraslados}\r\n                            noDataText = {\"Sin Datos...\"}\r\n                            data = {this.state.trasladosPendientes}\r\n                            filterable={false}\r\n                            defaultPageSize={this.state.trasladosPendientes.length || 3}\r\n                            showPaginationTop={false}\r\n                            showPaginationBottom={false}\r\n                        >\r\n                        </ReactTable>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Modal \r\n                        isOpen={this.state.modalDetalleOpen}\r\n                        centered={true}\r\n                    >\r\n                        <ModalHeader toggle={this.toogleModalDetalle.bind(this)}><h3>Productos Enviados</h3></ModalHeader>    \r\n                        <ModalBody>\r\n                            <div className=\"container\">\r\n                                <div className=\"row d-flex justify-content-center\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <ReactTable\r\n                                        columns = {columnsDetalles}\r\n                                        noDataText = {\"Cargando Datos...\"}\r\n                                        data = {this.state.trasladosDetallesPendientes}\r\n                                        filterable={false}\r\n                                        defaultPageSize={this.state.cantidadDetalles}\r\n                                        showPaginationTop={false}\r\n                                        showPaginationBottom={false}\r\n                                        >\r\n                                        </ReactTable>\r\n                                    </div>\r\n                                    <div hidden={!this.state.tipoAccion} className=\"col-md-12 mt-2\">\r\n                                        <label for=\"observacionDestino\">Observacion: </label>\r\n                                        <input id= \"observacionDestino\" type=\"text\" className=\"form-control\"\r\n                                            value = { this.state.observacionDestino }                                            \r\n                                            onChange = { (e) => { this.setIngreso(e) } }\r\n                                        ></input>\r\n                                    </div>\r\n                                    <div hidden={!this.state.tipoAccion} className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-success form-control\"\r\n                                            onClick={this.confirmarIngreso}\r\n                                        >\r\n                                            CONFIRMAR\r\n                                        </button>\r\n                                    </div>\r\n                                    <div hidden={this.state.tipoAccion} className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-info form-control\"\r\n                                            onClick={this.toogleModalDetalle}\r\n                                        >\r\n                                            Cerrar\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Ingresos\r\n","import React, { Component } from 'react';\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls-traslado\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>CODIGO</th>\r\n                                <th>ORIGEN</th>\r\n                                <th>TRAB. REGISTRO</th>\r\n                                <th>Obs.</th>\r\n                                <th>DESTINO</th>\r\n                                <th>TRAB. CONFIRMADO</th>\r\n                                <th>Obs.</th>\r\n                                <th>F. ENVIO</th>\r\n                                <th>F. INGRESO</th>\r\n                                <th>ESTADO</th> \r\n                            </tr>                                           \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.traslados.map(tra =>{\r\n                                return(\r\n                                    <tr key={tra.id}>\r\n                                        <td>{tra.codigoTraslado}</td>\r\n                                        <td>{tra.nombreLocalOrigen}</td>\r\n                                        <td>{tra.nombreTrabajadorRegistro}</td>\r\n                                        <td>{tra.observacionOrigen}</td>\r\n                                        <td>{tra.nombreLocalDestino}</td>\r\n                                        <td>{tra.nombreTrabajadorConfirmacion}</td>\r\n                                        <td>{tra.observacionDestino}</td>\r\n                                        <td>{tra.fechaRegistro}</td>\r\n                                        <td>{tra.fechaConfirmacion}</td>\r\n                                        <td>{tra.confirmacion}</td>\r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","import React, { Component } from 'react';\r\nclass ExportExcel extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container row\">\r\n                <div>\r\n                    <table hidden={true} id=\"table-to-xls-venta\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>CODIGO</th>\r\n                                <th>LOCAL</th>\r\n                                <th>TRABAJADOR</th>\r\n                                <th>FECHA</th>\r\n                                <th>CLIENTE</th>\r\n                                <th>TOTAL</th>\r\n                            </tr>                                           \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.ventas.map(ven =>{\r\n                                return(\r\n                                    <tr key={ven.id}>\r\n                                        <td>{ven.codigoVenta}</td>\r\n                                        <td>{ven.nombreLocal}</td>\r\n                                        <td>{ven.nombreTrabajador}</td>\r\n                                        <td>{ven.fechaRegistro}</td>\r\n                                        <td>{ven.nombreCliente}</td>\r\n                                        <td>{ven.valorTotalVenta}</td>\r\n                                    </tr>\r\n                                );    \r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportExcel","\r\nimport React, { Component } from 'react'\r\nimport { Modal , ModalHeader, ModalBody } from 'reactstrap';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nimport { get_Venta_Reporte } from '../../Data/VentaData';\r\nimport { get_Traslado_Reporte, get_Traslado_Reporte_Pendiente } from '../../Data/TrasladoData';\r\nimport { get_Venta_Detalle_Codigo_Venta_Vista } from '../../Data/VentaDetalleData';\r\n\r\nimport ReactHTMLTableExcel from 'react-html-table-to-excel';\r\n\r\nimport ExportToExcelTraslados from \"../../Export/excel/ReporteTraslado\";\r\n\r\nimport ExportToExcelVentas from \"../../Export/excel/ReporteVenta\";\r\n\r\nimport Menu from '../../Pages/menu';\r\n\r\nconst estadoInicial = {\r\n    fechaInicio: new Date(),\r\n    fechaFin: new Date(),\r\n    \r\n    ventasReporte : [],\r\n    detallesVenta:[],\r\n\r\n    trasladosReporte: [],\r\n\r\n\r\n    valorTotalVendido : 0,\r\n    valorTotalEnviado : 0,\r\n\r\n    modalVentaOpen : false,\r\n    modalTrasladoOpen : false,\r\n    modalConfirmarOpen: false,\r\n}\r\n\r\nexport class Reporte extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = estadoInicial;\r\n    }\r\n\r\n    toogleModalConfirmar = () => {\r\n        this.setState({ modalConfirmarOpen : ! this.state.modalConfirmarOpen });\r\n    }\r\n\r\n    toogleModalVenta = () => {\r\n        this.setState({ modalVentaOpen : ! this.state.modalVentaOpen });\r\n    }\r\n\r\n    toogleModalTraslado = () => {\r\n        this.setState({ modalTrasladoOpen : ! this.state.modalTrasladoOpen });\r\n    }\r\n\r\n    setFecha = (event) => {\r\n        this.setState({\r\n            [event.target.id] : [event.target.value]\r\n        });\r\n    }\r\n\r\n    obtenerFechaHoy(){\r\n        var fechaHoy = new Date();\r\n        \r\n        var a√±oDate = fechaHoy.getFullYear();\r\n        var mesDate = fechaHoy.getMonth() + 1;\r\n        var diaDate = fechaHoy.getDate();\r\n\r\n        var fecha = a√±oDate + \"-\";\r\n        if(mesDate < 10){\r\n            fecha = fecha + \"0\" + mesDate; \r\n        }else{\r\n            fecha = fecha +\"\"+ mesDate;\r\n        }\r\n        fecha = fecha + \"-\";\r\n        if(diaDate < 10){\r\n            fecha = fecha + \"0\" + diaDate; \r\n        }else{\r\n            fecha = fecha + \"\" + diaDate; \r\n        }\r\n\r\n        this.setState({\r\n            fechaInicio : fecha,\r\n            fechaFin : fecha\r\n        });            \r\n    }\r\n\r\n    generarReporteVenta = () => {\r\n        const { fechaInicio, fechaFin } = this.state;\r\n        //const fechas = fechaInicio + \" 00:00:01\" + \"_\" + fechaFin + \" 23:59:59\";\r\n        const fechas = fechaInicio.concat( \" 00:00:01\" , \"_\" ,fechaFin ,\" 23:59:59\");\r\n\r\n        get_Venta_Reporte(fechas).then( res => {\r\n            var totalVendido = 0;\r\n            res.forEach(vr => {\r\n                totalVendido = totalVendido + vr.valorTotalVenta\r\n            });\r\n            this.setState({ \r\n                valorTotalVendido : totalVendido,\r\n                ventasReporte : res,\r\n                modalVentaOpen : !this.state.modalVentaOpen\r\n            });\r\n        }); \r\n\r\n    }\r\n\r\n    generarReporteTraslado = (tipoReporteTraslado) => {\r\n        const { fechaInicio, fechaFin } = this.state;\r\n        //const fechas = fechaInicio.toString() + \" 00:00:01\" + \"_\" + fechaFin.toString() + \" 23:59:59\";\r\n        const fechas = fechaInicio.concat(\" 00:00:01\" , \"_\" , fechaFin , \" 23:59:59\");\r\n\r\n        if(tipoReporteTraslado === \"\"){\r\n            get_Traslado_Reporte(fechas).then( res => {\r\n                var totalEnviado = 0;\r\n                res.forEach(vr => {\r\n                    totalEnviado = totalEnviado + vr.valorTotal\r\n                });\r\n                this.setState({ \r\n                    valorTotalEnviado : totalEnviado,\r\n                    trasladosReporte : res,\r\n                    modalTrasladoOpen : !this.state.modalTrasladoOpen\r\n                });\r\n            }); \r\n        }else{\r\n            get_Traslado_Reporte_Pendiente(fechas).then( res => {\r\n                var totalEnviado = 0;\r\n                res.forEach(vr => {\r\n                    totalEnviado = totalEnviado + vr.valorTotal\r\n                });\r\n                this.setState({ \r\n                    valorTotalEnviado : totalEnviado,\r\n                    trasladosReporte : res,\r\n                    modalTrasladoOpen : !this.state.modalTrasladoOpen\r\n                });\r\n            }); \r\n        }\r\n\r\n\r\n    }\r\n\r\n    listarDetallesVentaVista(codigoVenta){\r\n        get_Venta_Detalle_Codigo_Venta_Vista(codigoVenta)\r\n         .then(res => {\r\n             this.setState({ detallesVenta : res });\r\n         });\r\n    }\r\n\r\n    mostrarDetalleVenta = (codigoVenta) => {\r\n        this.listarDetallesVentaVista(codigoVenta);\r\n        this.toogleModalConfirmar();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.obtenerFechaHoy();\r\n    }\r\n\r\n    render() {\r\n        let buttonCard = {\r\n            cursor: 'pointer'\r\n        };\r\n\r\n        const columnsTraslado =[\r\n            {\r\n                Header: \"PENDIENTES\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props =>{\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    {props.original.detalles} Paquete(s)\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    De {props.original.nombreLocal}\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    Registrado Por:\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    {props.original.nombreTrabajador}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                Header : \"OBSE. ORIGEN\",\r\n                accessor : \"observacionOrigen\",\r\n                style : {\r\n                    textAlign : \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header : \"OBSE. DESTINO\",\r\n                accessor : \"observacionDestino\",\r\n                style : {\r\n                    textAlign : \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"ESTADO\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props =>{\r\n                    var classCard = \"\";\r\n                    var nombreCard = \"\";\r\n                    if(props.original.confirmacion){\r\n                        classCard = \"card bg-success\";\r\n                        nombreCard = \"CONFIRMADO\";\r\n                    }else{\r\n                        classCard = \"card bg-danger\";\r\n                        nombreCard = \"SIN CONFIRMAR\";\r\n                    }\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className={classCard}>\r\n                                <div className=\"card-header\">\r\n                                    <span>{nombreCard}</span>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <label for=\"fechaRegistro\">Enviado el:  </label>\r\n                                    <span>\r\n                                        {\r\n                                            new Intl.DateTimeFormat( 'default',{\r\n                                                year: 'numeric',\r\n                                                month:'numeric',\r\n                                                day:'numeric',\r\n                                                hour:'numeric',\r\n                                                minute:'numeric'\r\n                                            }).format(Date.parse(props.original.fechaRegistro))\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ]\r\n        \r\n        const columns = [\r\n            {\r\n                Header: \"CODIGO\",\r\n                accessor: \"codigoVenta\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"LOCAL\",\r\n                accessor: \"nombreLocal\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"TRABAJADOR\",\r\n                accessor: \"nombreTrabajador\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"FECHA\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props =>{\r\n                    var fecha = new Date(props.original.fechaRegistro)\r\n                    return(\r\n                        <label>\r\n                            {\r\n                                fecha.getFullYear() + \"/\" + (fecha.getMonth() + 1) + \"/\" + fecha.getDate()\r\n                                + \" -- \" + fecha.getHours() + \":\" + fecha.getMinutes()\r\n                            }\r\n                        </label>\r\n                )}\r\n            },\r\n            {\r\n                Header: \"TOTAL\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props => {\r\n                    return(\r\n                        <label>{ \"S/.\" +(props.original.valorTotalVenta).toFixed(2)  }</label>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: \"DETALLE\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props => {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <button\r\n                                className=\"btn btn-info\"\r\n                                onClick={() => { this.mostrarDetalleVenta(props.original.codigoVenta)}}\r\n                            >Ver</button>\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n\r\n        ]\r\n\r\n        const columnsDetalleVenta = [\r\n            {\r\n                Header:\"IMAGEN\",\r\n                Cell: props =>{\r\n                    return(\r\n                        <div className=\"media_producto\">\r\n                            <img src={props.original.urlMedia} alt={props.original.descripcionProducto} className=\"card-img-top\"/>\r\n                        </div>\r\n                    )\r\n                },\r\n                width:100,\r\n                minWidth:100,\r\n                maxWidth:100\r\n            },\r\n            {\r\n                Header: \"PRODUCTO\",\r\n                accessor:\"descripcionProducto\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"PRESENTACI√ìN\",\r\n                accessor : \"descripcionPresentacion\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"STOCK\",\r\n                accessor : \"stockExistente\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"VAL. UNIDAD\",\r\n                accessor:\"valorPrecio\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"CANT.\",\r\n                accessor: \"cantidadProducto\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"VAL. TOTAL\",\r\n                style:{\r\n                    textAlign: \"center\"\r\n                },\r\n                Cell: props => {\r\n                    var valorTotalVD = props.original.valorTotalVD;\r\n                    return(\r\n                        <input className=\"form-control text-center\" id= \"descripcionProducto\" type=\"text\" readOnly\r\n                            value = {valorTotalVD}> \r\n                        </input>\r\n                    )\r\n                }\r\n            },\r\n        ]\r\n\r\n\r\n        return (\r\n            <Menu>\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"row form-group\">\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label for=\"fechaInicio\"> Fecha Inicio: </label>\r\n                                    <input className=\"form-control\" id= \"fechaInicio\" data-date-format=\"YYYY MM DD HH:mm:ss\"\r\n                                        type=\"date\" value={this.state.fechaInicio}\r\n                                        onChange={(e) => this.setFecha(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                    <label for=\"fechaFin\"> Fecha Fin: </label>\r\n                                    <input className=\"form-control\" id= \"fechaFin\" data-date-format=\"YYYY MM DD HH:mm:ss\"\r\n                                        type=\"date\" value={this.state.fechaFin}\r\n                                        onChange={(e) => this.setFecha(e)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\" style={buttonCard}>\r\n                            <div className=\"card text-white bg-success\">\r\n                                <div className=\"card-header\">REPORTE DE</div>\r\n                                <button className=\"btn card-body text-white text-justify\"\r\n                                    onClick={this.generarReporteVenta}\r\n                                >VENTAS</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"card text-white bg-info\">\r\n                                <div className=\"card-header\">REPORTE DE ENVIOS</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <button className=\"btn card-body text-white text-justify\"\r\n                                            onClick={ () => {this.generarReporteTraslado(\"\")}}\r\n                                        >CONFIRMADOS</button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <button className=\"btn card-body text-white text-justify\"\r\n                                            onClick={ () => {this.generarReporteTraslado(\"PENDIENTES\")}}\r\n                                        >PENDIENTES</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Modal \r\n                        isOpen={this.state.modalVentaOpen}\r\n                        centered={true}\r\n                        size={\"lg\"}\r\n                    >\r\n                        <ModalHeader toggle={this.toogleModalVenta.bind(this)}>Ventas</ModalHeader>    \r\n\r\n                        <ModalBody>\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-12  mb-4\">\r\n                                    <ReactTable\r\n                                    columns = {columns}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.ventasReporte}\r\n                                    filterable\r\n                                    defaultPageSize={this.state.ventasReporte.length}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                    >\r\n                                    {(state, filtredData, instance)=>{\r\n                                        this.reactTable = state.pageRows.map(\r\n                                            ventas => { return ventas._original });\r\n                                            return(\r\n                                            <div>\r\n                                                {filtredData()}\r\n                                                <ExportToExcelVentas ventas={this.reactTable}/>\r\n                                            </div>\r\n                                    )}}\r\n                                    </ReactTable>\r\n                                    \r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <label for=\"totalVentaReporte\"> Total Vendido: </label>\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <label > S/. {(this.state.valorTotalVendido).toFixed(2)}</label>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <label > EN {this.state.ventasReporte.length} VENTA(s)</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center mt-3\">\r\n                                <div className=\"col-md-2\">\r\n                                    <div className=\"col-md\" style={buttonCard}>\r\n                                        <div className=\"card bg-success text-white\">\r\n                                            <ReactHTMLTableExcel\r\n                                                id=\"test-table-xls-button\"\r\n                                                className=\"btn text-white text-justify\"\r\n                                                table=\"table-to-xls-venta\"\r\n                                                filename=\"ReporteVenta\"\r\n                                                sheet=\"hoja 1\"\r\n                                                buttonText=\"Excel\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-2\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                    >PDF</button>\r\n                                </div>\r\n                            </div>\r\n                        </ModalBody>\r\n                    </Modal>\r\n\r\n\r\n                    <Modal \r\n                        isOpen={this.state.modalTrasladoOpen}\r\n                        centered={true}\r\n                        size={\"lg\"}\r\n                    >\r\n                        <ModalHeader toggle={this.toogleModalTraslado.bind(this)}>Traslados</ModalHeader>    \r\n\r\n                        <ModalBody>\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-12  mb-4\">\r\n                                    <ReactTable\r\n                                    columns = {columnsTraslado}\r\n                                    noDataText = {\"Cargando Datos...\"}\r\n                                    data = {this.state.trasladosReporte}\r\n                                    filterable\r\n                                    defaultPageSize={this.state.trasladosReporte.length}\r\n                                    showPaginationTop={true}\r\n                                    showPaginationBottom={false}\r\n                                    >\r\n                                    {(state, filtredData, instance)=>{\r\n                                    this.reactTable = state.pageRows.map(\r\n                                        traslados => { return traslados._original });\r\n                                        return(\r\n                                            <div>\r\n                                                {filtredData()}\r\n                                                <ExportToExcelTraslados traslados={this.reactTable}/>\r\n                                            </div>\r\n                                    )}}\r\n                                    </ReactTable>\r\n                                    \r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <label for=\"totalVentaReporte\"> Total Enviado: </label>\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <label > S/. {(this.state.valorTotalEnviado).toFixed(2)} </label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center mt-3\">\r\n                                <div className=\"col-md-2\">\r\n                                    <div className=\"col-md\" style={buttonCard}>\r\n                                        <div className=\"card bg-success text-white\">\r\n                                            <ReactHTMLTableExcel\r\n                                                id=\"test-table-xls-button\"\r\n                                                className=\"btn text-white text-justify\"\r\n                                                table=\"table-to-xls-traslado\"\r\n                                                filename=\"ReporteEnvio\"\r\n                                                sheet=\"hoja 1\"\r\n                                                buttonText=\"Excel\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-2\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                    >PDF</button>\r\n                                </div>\r\n                            </div>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                    <Modal \r\n                        isOpen={this.state.modalConfirmarOpen}\r\n                        centered={true}\r\n                        size={\"xm\"}\r\n                    >\r\n                        <ModalHeader toggle={this.toogleModalConfirmar.bind(this)}>Alerta</ModalHeader>    \r\n                        <ModalBody>\r\n                            <div className=\"container\">\r\n                                <div className=\"row justify-content-center text-center\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <ReactTable\r\n                                        columns = {columnsDetalleVenta}\r\n                                        noDataText = {\"Cargando Datos...\"}\r\n                                        data = {this.state.detallesVenta}\r\n                                        defaultPageSize={5}\r\n                                        showPaginationTop={true}\r\n                                        showPaginationBottom={false}\r\n                                        >\r\n                                        </ReactTable>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reporte\r\n","import React from 'react';\nimport { BrowserRouter , Route , Switch} from 'react-router-dom';\n\nimport Login from './components/Pages/login';\nimport Logout from './components/Pages/logout';\nimport Error404 from './components/Pages/404'\nimport Profile from './components/Pages/profile'\n\nimport tipoDocumento from './components/Vista/Tipos/tipoDocumento';\nimport tipoLocal from './components/Vista/Tipos/tipoLocal';\nimport tipoMedia from './components/Vista/Tipos/tipoMedia';\nimport tipoPrecio from './components/Vista/Tipos/tipoPrecio';\nimport tipoProducto from './components/Vista/Tipos/tipoProducto';\nimport tipoTraslado from './components/Vista/Tipos/tipoTraslado';\n\nimport Medias from './components/Vista/Media/Media';\nimport Productos from './components/Vista/Producto/Producto';\nimport Ventas from './components/Vista/Venta/Venta';\nimport ListaVentas from './components/Vista/Venta/VentaLista';\n\nimport Locales from './components/Vista/Local/Local';\nimport Sucursales from './components/Vista/Sucursal/Sucursal';\nimport Usuarios from './components/Vista/Usuario/Usuario';\nimport Envios from './components/Vista/Envio/Envio';\nimport Ingresos from './components/Vista/Ingreso/Ingreso';\n\nimport Reportes from './components/Vista/Reporte/Reporte';\n\nimport './app.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/app\" component={Profile}/>\n          <Route path=\"/app/login\" component={Login}/>\n          <Route path=\"/app/logout\" component={Logout}/>\n\n          <Route path=\"/app/tipos/documento/\" component={tipoDocumento}/>\n          <Route path=\"/app/tipos/local\" component={tipoLocal}/>\n          <Route path=\"/app/tipos/media\" component={tipoMedia}/>\n          <Route path=\"/app/tipos/precio\" component={tipoPrecio}/>\n          <Route path=\"/app/tipos/producto\" component={tipoProducto}/>\n          <Route path=\"/app/tipos/traslado\" component={tipoTraslado}/>\n          \n          <Route path=\"/app/productos\" component={Productos}/>\n          <Route path=\"/app/medias/listar\" component={Medias}/>\n\n          <Route path=\"/app/ventas/listar\" component={ListaVentas}/>\n          <Route path=\"/app/ventas\" component={Ventas}/>\n\n          <Route path=\"/app/sucursales\" component={Sucursales}/>\n\n          <Route path=\"/app/locales/tienda\" component={ () => <Locales nombreTipoLocal={\"TIENDA\"}></Locales>} />\n          <Route path=\"/app/locales/almacen\" component={ () => <Locales nombreTipoLocal={\"ALMACEN\"}></Locales>} />\n          <Route path=\"/app/usuarios\" component={Usuarios}/>\n\n          <Route path=\"/app/envios/todos\" component={ () =>  <Ingresos titulo={\"Lista de Envios\"} tipoVista={\"enviados\"} acciones={true} ></Ingresos>}/>\n          <Route path=\"/app/envios\" component={ () =>  <Envios codigoTipoTraslado={\"TP-TRA-001\"}></Envios>}/>  \n\n\n          <Route path=\"/app/ingresos/pendientes\" component={() => <Ingresos titulo={\"Ingresos Pendientes\"} tipoVista={\"pendientes\"} acciones={true}></Ingresos>}/>\n          <Route path=\"/app/ingresos/todos\" component={() => <Ingresos titulo={\"Lista de Ingresos\"} tipoVista={\"ingresados\"} acciones={true}></Ingresos>}/>\n\n\n          <Route path=\"/app/reportes\" component={Reportes}/>\n\n          <Route path=\"/app/*\" component={Error404} />\n        </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createMuiTheme, MuiThemeProvider , responsiveFontSizes } from '@material-ui/core'\nimport { teal , green} from '@material-ui/core/colors';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: teal[300],\n            main: teal[500],\n            dark: teal[700],\n        },\n        secondary: {\n            light: green[300],\n            main: green[500],\n            dark: green[700],\n        },\n        background: {\n            default: \"#e0f2f1\"\n        },\n    }\n});\ntheme = responsiveFontSizes(theme);\n//ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n<MuiThemeProvider theme= {theme}>\n    <CssBaseline />\n    <App />\n</MuiThemeProvider>\n, document.getElementById('root'));"],"sourceRoot":""}